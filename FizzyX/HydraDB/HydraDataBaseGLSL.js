// glsl

window.glsl001 = () =>
  glsl('vec4(sin(uv.x*i0+(time*i1*vec3(i2,i2*2.,i2*3.))),1.0)',16,2,.3)
    .glslColor('vec4(c0.brg-(sin(c0.b)*myVariable),1.)',['myVariable',0.2]);


window.glsl002 = () =>
  glsl('vec4(sin(uv.x*i0+(time*i1*vec3(i2,i2*2.,i2*3.))),1.0)',16,2,.3)
   .glslColor('vec4(c0.brg-(sin(c0.b)*myVariable),1.)',['myVariable',()=>time%1]);


window.glsl003 = () =>
  glsl('vec4(sin(((_st.x*54.)+time*2.)*vec3(0.1,0.102,0.101)),1.0)')
     .diff(o0)
   .glslColor('vec4(c0.brg,1.)')
   .glslCoord('xy*=(1.0/vec2(i0, i0)); return xy',.25)
   .glslCombine('return c0-c1',o1)
   .glslCombineCoord('uv+(vec2(c0.r,c0.b)*0.1)',o1);


window.glsl003b = () =>
   glsl('vec4(sin(((_st.x*54.)+time*2.)*vec3(0.1,0.102,0.101)),1.0)')
      .diff(o0)
    .glslColor('vec4(c0.brg,1.)')
    .glslCoord('xy*=(1.0/vec2(i0, i0)); return xy',.25)
    .glslCombine('return c0-c1',o1)
    .glslCombineCoord('uv+(vec2(c0.r,c0.b)*0.1)',o0);


window.glsl003c = () =>
  glsl('vec4(sin(((_st.x*54.)+time*2.)*vec3(0.1,0.102,0.101)),1.0)')
     .diff(o1)
   .glslColor('vec4(c0.brg,1.)')
   .glslCoord('xy*=(1.0/vec2(i0, i0)); return xy',.25)
   .glslCombine('return c0-c1',o1)
   .glslCombineCoord('uv+(vec2(c0.r,c0.b)*0.1)',o0);


// GLSL Variations (gl001-gl020) - Intégrées avec flou et feedback
// GLSL Variations (gl001-gl020) - Simplifiées sans blur()
// Effet très intéresant
window.gl001 = () =>
  glsl('vec2 p=_st-0.5; float r=length(p); float a=atan(p.y,p.x); float blob=sin(a*i0+time*i1)*0.1+i2; float circle=smoothstep(blob-0.05, blob+0.05, r); return vec4(vec3(1.0-circle)*vec3(sin(time+a*3.0), cos(time*1.3+r*10.0), sin(time*0.7+a*5.0)), 1.0);', 6, 2, 0.3).diff(o0).glslColor('vec4(c0.brg*myVariable, 1.0)', ['myVariable', 0.8]).glslCombine('return mix(c0, c1*0.95, 0.8)', o1);


// trop simple juste un cercle blanc qui s'étend, à améliorer
window.gl002 = () =>
    glsl('vec2 p=_st-0.5; float r=length(p)*i0; float wave=sin(r*i1-time*i2)*exp(-r*r*2.0); return vec4(vec3(wave)*vec3(0.8, 1.2, 0.6), 1.0);', 2, 8, 3)
    .add(o0, 0.95)
    .glslColor('vec4(c0.gbr*smoothstep(0.2,0.8,c0.g)*myVar, 1.0)', ['myVar', () => 0.9]);


// Ondulations concentriques complexes avec modulations temporelles
window.gl002b = () =>
    glsl('vec2 p=_st-0.5; float r=length(p)*i0; float a=atan(p.y,p.x); float wave1=sin(r*i1-time*i2)*exp(-r*r*1.5); float wave2=cos(r*i1*1.5+time*i2*0.7)*sin(a*6.0+time)*exp(-r*r*2.0); float pattern=wave1+wave2*0.5; return vec4(vec3(pattern)*vec3(0.8+sin(time+r*5.0)*0.3, 1.2+cos(time*1.2+a*3.0)*0.2, 0.6+sin(time*0.8+r*8.0)*0.4), 1.0);', 2, 8, 3)
    .add(o0, 0.95)
    .glslColor('vec4(c0.gbr*smoothstep(0.2,0.8,c0.g)*myVar, 1.0)', ['myVar', () => 0.9])
    .glslCombineCoord('uv+vec2(sin(time*0.3)*0.02,cos(time*0.4)*0.02)', o1);


// à améliorer - à complexifier
window.gl003 = () =>
    glsl('vec2 p=_st*i0; vec2 cell=floor(p); vec2 frac=fract(p)-0.5; float r=length(frac); float circle=1.0-smoothstep(0.2+sin(time*i1+cell.x*3.0+cell.y*2.0)*0.1, i2, r); return vec4(vec3(circle)*vec3(sin(cell.x+time), cos(cell.y+time*1.2), sin((cell.x+cell.y)*0.5+time*0.8)), 1.0);', 4, 1, 0.5)


window.gl003b = () =>
    glsl('vec2 p=_st*i0; float t=time*i1; vec2 flow=vec2(sin(t*0.3+p.y*2.0),cos(t*0.2+p.x*1.5))*0.1; p+=flow; vec2 cell=floor(p); vec2 local=fract(p)-0.5; float id=sin(cell.x*43.7+cell.y*91.3); float morph=sin(t*0.5+id*6.28)*0.5+0.5; float base=smoothstep(i2+0.1, i2-0.1, length(local)); float organic=base*exp(-pow(length(local)*3.0,2.0)); float breathe=sin(t*0.8+id*4.0)*0.3+0.7; organic*=breathe; float gradient=1.0-length(local*vec2(1.2,0.8)); organic=mix(organic, gradient*0.6, morph); vec3 color=vec3(0.4+sin(t+id*2.0)*0.3, 0.3+cos(t*1.2+id*3.0)*0.2, 0.5+sin(t*0.7+id)*0.25); return vec4(color*organic, 1.0);', 5.0, 0.4, 0.25)
    .add(src(o0).scale(1.003).rotate(0.0005), 0.88)
    .glslColor('vec4(c0.rgb*vec3(0.9,0.8,1.0)+vec3(sin(time*0.8)*0.08), 1.0)')
    .glslCombineCoord('uv+vec2(sin(time*0.2),cos(time*0.25))*0.008', o1);


// Effet trrès intéressant
window.gl004 = () =>
    glsl('vec2 p=_st-0.5; float a=atan(p.y,p.x); float r=length(p); float petals=abs(sin(a*i0+time*i1))*0.3+i2; float flower=1.0-smoothstep(petals-0.05, petals+0.05, r); return vec4(vec3(flower)*vec3(sin(a*2.0+time), cos(r*15.0+time*2.0), sin(a*3.0-time*0.7)), 1.0);', 4, 0.5, 0.2)
    .mult(o0, 0.98)
    .glslColor('vec4(c0.rbg+vec3(sin(time*2.0), cos(time*1.5), sin(time*2.5))*myVar, 1.0)', ['myVar', 0.4])
    .glslCombine('return c0+c1*0.9', o1);


// La séquence 5 est figée à animer ?
window.gl005 = () =>
    glsl('vec2 p=_st*i0; float n1=sin(p.x*2.0+time*i1)*cos(p.y*2.0+time*1.3); float n2=sin(p.x*3.0-time*i2)*cos(p.y*1.5+time*0.6); float blob=smoothstep(-0.5, 0.5, n1*n2); return vec4(vec3(blob)*vec3(sin(p.x+time), cos(p.y+time*1.1), sin((p.x+p.y)*0.5+time*0.9)), 1.0);', 3, 1, 0.8)
    .layer(o0)
    .glslColor('vec4(c0.bgr*pow(c0.rgb, vec3(myVar)), 1.0)', ['myVar', 2.0]);


// Plasma fluide multicouches avec vortex et turbulences
window.gl005b = () =>
    glsl('vec2 p=_st*i0-0.5*i0; float r=length(p); float a=atan(p.y,p.x); float vortex=sin(a*5.0+r*8.0-time*2.0)*exp(-r*2.0); float n1=sin(p.x*2.0+time*i1+vortex*3.0)*cos(p.y*2.0+time*1.3); float n2=sin(p.x*3.0-time*i2)*cos(p.y*1.5+time*0.6+vortex*2.0); float n3=sin(length(p)*5.0+time*1.7)*cos(a*3.0+time); float turbulence=sin(p.x*10.0+n1*4.0)*cos(p.y*10.0+n2*4.0)*0.2; float blob=smoothstep(-0.5, 0.5, n1*n2+n3*0.3+turbulence); float glow=exp(-r*3.0)*sin(time*3.0+a*4.0)*0.2; return vec4(vec3(blob+glow)*vec3(sin(p.x+time+vortex)*0.5+0.5, cos(p.y+time*1.1+vortex)*0.5+0.5, sin((p.x+p.y)*0.5+time*0.9)*0.5+0.5), 1.0);', 3, 1, 0.8)
    .mult(src(o0).scale(1.01).rotate(0.003), 0.94)
    .glslColor('vec4(c0.bgr*pow(c0.rgb, vec3(myVar))+vec3(sin(time*2.0)*0.1, cos(time*1.5)*0.1, sin(time*3.0)*0.1), 1.0)', ['myVar', 1.5])
    .glslCoord('xy*=1.0+sin(time*0.3)*0.05; xy+=vec2(sin(time*0.7),cos(time*0.5))*0.01; return xy')
    .glslCombine('return mix(c0, c1*1.1, 0.8)', o1);


// Effet très intéressant
window.gl006 = () =>
    glsl('vec2 p=_st-0.5; float r=length(p); float spiral=sin(atan(p.y,p.x)*i0+r*i1-time*i2)*exp(-r*3.0); return vec4(vec3(spiral*0.5+0.5)*vec3(cos(r*10.0+time), sin(r*15.0+time*1.2), cos(r*8.0+time*0.8)), 1.0);', 5, 20, 4)
    .diff(o0)
    .glslColor('vec4(c0.grb*vec3(1.0+sin(time)*0.5, 0.8, 1.2+cos(time*1.1)*0.3), 1.0)')
    .glslCombineCoord('uv+sin(time*0.3)*0.02', o0);


// Effet très intéressant
window.gl007 = () =>
    glsl('vec2 p=(_st-0.5)*i0; float tunnel=1.0/(length(p)+0.01); float rings=sin(tunnel*i1+time*i2)*0.5+0.5; return vec4(vec3(rings)*vec3(sin(tunnel*0.5+time), cos(tunnel*0.7+time*1.3), sin(tunnel*0.3+time*0.6)), 1.0);', 2, 3, 2)
    .add(o0, 0.92)
    .glslColor('vec4(c0.rgb*c0.brg*vec3(0.9, 1.1, 0.8), 1.0)')
    .glslCombine('return c0*0.95+c1', o1);


// Effet lent simple mais intéressant
window.gl008 = () =>
    glsl('vec2 p=_st-0.5; float hearts=abs(p.x*i0)*sqrt(abs(p.y*i1)); float heart=smoothstep(0.1, i2, hearts)*smoothstep(0.8, 0.6, length(p)); return vec4(vec3(heart)*vec3(sin(time+hearts*5.0), cos(time*1.2+p.x*10.0), sin(time*0.8+p.y*8.0)), 1.0);', 1, 1, 0.3)
    .mult(o0, 0.96)
    .glslColor('vec4(c0.brg+vec3(sin(time*3.0), cos(time*2.0), sin(time*1.5))*0.3, 1.0)');


// écran noir
window.gl009 = () =>
    glsl('vec2 p=_st*i0; vec2 id=floor(p); p=fract(p)-0.5; float n=sin(id.x*3.0+id.y*7.0+time*i1); float hexagon=max(abs(p.x*1.5+p.y), max(abs(p.x*1.5-p.y), abs(p.y)))-i2; float hex=1.0-smoothstep(-0.05, 0.05, hexagon); return vec4(vec3(hex)*vec3(sin(n+time), cos(n+time*1.1), sin(n*2.0+time*0.7)), 1.0);', 6, 0.5, 0.3)
    .layer(o0, 0.9)
    .glslColor('vec4(c0.gbr*c0.rgb*vec3(1.2, 0.9, 1.1), 1.0)')
    .glslCombineCoord('uv+vec2(sin(time*0.1),cos(time*0.13))*0.01', o1);


// Soleil Spirale à gauche
window.gl009b = () =>
    glsl('vec2 p=_st*i0-0.5; float t=time*i1; vec2 polar=vec2(atan(p.y,p.x), length(p)); float spiral=polar.x+polar.y*3.0+t*0.5; vec2 cell=vec2(floor(spiral*2.0), floor(polar.y*8.0)); float id=sin(cell.x*23.1+cell.y*67.4); vec2 center=vec2(cos(id*6.28+t*0.3), sin(id*6.28+t*0.3))*0.3; vec2 offset=p-center; float bubble=exp(-dot(offset,offset)*i2); float flow=sin(spiral*4.0-t*2.0+id*5.0)*0.5+0.5; bubble*=flow; float concentric=sin(polar.y*15.0-t*3.0)*0.5+0.5; bubble=mix(bubble, concentric*exp(-polar.y*2.0), 0.4); vec3 color=vec3(0.3+sin(t*0.7+id)*0.4, 0.4+cos(t*0.9+id*2.0)*0.3, 0.6+sin(t*0.5+id*3.0)*0.2); return vec4(color*bubble, 1.0);', 4.0, 0.3, 8.0)
    .add(src(o0).scale(1.001).rotate(0.001), 0.85)
    .glslColor('vec4(c0.brg*vec3(0.8,0.9,1.1)+vec3(sin(time*0.6)*0.1), 1.0)')
    .glslCombineCoord('uv+vec2(sin(time*0.15),cos(time*0.18))*0.012', o1);


// Effet très intéressant
window.gl010 = () =>
    glsl('vec2 p=_st-0.5; float r=length(p); float a=atan(p.y,p.x); float star=abs(sin(a*i0))*i1+i2; float starShape=1.0-smoothstep(star-0.02, star+0.02, r); return vec4(vec3(starShape)*vec3(sin(a*3.0+time), cos(r*20.0+time*2.0), sin(a*7.0+time*1.5)), 1.0);', 5, 0.3, 0.1)
    .diff(o0)
    .glslColor('vec4(c0.rbg*vec3(1.3+sin(time)*0.4, 0.7, 1.0+cos(time*1.2)*0.2), 1.0)')
    .glslCombine('return mix(c0, c1, 0.85)', o1);


// Effet très intéressant
window.gl011 = () =>
    glsl('vec2 p=_st*i0-1.0; float plasma=sin(p.x*2.0+time*i1)*sin(p.y*2.0+time*1.1)+sin(sqrt(p.x*p.x+p.y*p.y)*5.0+time*i2); return vec4(vec3(plasma*0.5+0.5)*vec3(cos(plasma+time), sin(plasma+time*1.3), cos(plasma*2.0+time*0.8)), 1.0);', 2, 1, 2)
    .add(o0, 0.94)
    .glslColor('vec4(c0.brg*smoothstep(0.0, 1.0, c0.rgb), 1.0)')
    .glslCoord('xy+=sin(time*0.3)*myVar; return xy', ['myVar', 0.1]);


// Effet très intéressant
window.gl012 = () =>
    glsl('vec2 p=_st-0.5; float r=length(p); float ripples=sin(r*i0-time*i1)*exp(-r*2.0)*sin(r*30.0-time*i2); return vec4(vec3(ripples*0.5+0.5)*vec3(sin(r*10.0+time), cos(r*12.0+time*1.2), sin(r*8.0+time*0.9)), 1.0);', 15, 5, 8)
    .mult(o0, 0.97)
    .glslColor('vec4(c0.gbr+cos(time+c0.r*6.0)*0.3, 1.0)')
    .glslCoord('xy*=1.0+sin(time*myVar)*0.1; return xy', ['myVar', 0.5]);


// Image qui fige à animer TO IMPROVE
window.gl013 = () =>
    glsl('vec2 p=_st*i0; vec2 q=vec2(cos(time*i1), sin(time*i2)); float voronoi=1.0; vec2 b=floor(p); vec2 r1=b+vec2(0.0,0.0)+q-p; vec2 r2=b+vec2(1.0,0.0)+q-p; vec2 r3=b+vec2(0.0,1.0)+q-p; vec2 r4=b+vec2(1.0,1.0)+q-p; voronoi=min(voronoi,min(min(dot(r1,r1),dot(r2,r2)),min(dot(r3,r3),dot(r4,r4)))); return vec4(vec3(voronoi)*vec3(sin(voronoi*5.0+time), cos(voronoi*7.0+time*1.1), sin(voronoi*3.0+time*0.8)), 1.0);', 8, 0.3, 0.4)
    .layer(o0, 0.9)
    .glslColor('vec4(c0.rgb*vec3(1.1, 0.9, 1.3), 1.0)');


// Voronoi organique animé avec déformations
window.gl013b = () =>
    glsl('vec2 p=_st*i0; vec2 q=vec2(cos(time*i1)*0.5, sin(time*i2)*0.5); float voronoi=1.0; vec2 b=floor(p); vec2 f=fract(p); for(float x=-1.0; x<=1.0; x++) { for(float y=-1.0; y<=1.0; y++) { vec2 neighbor=vec2(x,y); vec2 point=neighbor+vec2(sin(time+dot(b+neighbor,vec2(12.9898,78.233)))*0.5+0.5, cos(time*1.3+dot(b+neighbor,vec2(269.5,183.3)))*0.5+0.5); float dist=length(f-point); voronoi=min(voronoi,dist); } } float pattern=smoothstep(0.0, 0.8, voronoi); return vec4(vec3(pattern)*vec3(sin(voronoi*5.0+time), cos(voronoi*7.0+time*1.1), sin(voronoi*3.0+time*0.8)), 1.0);', 8, 0.3, 0.4)
    .mult(src(o0).scale(1.01), 0.92)
    .glslColor('vec4(c0.rgb*vec3(1.1, 0.9, 1.3)+vec3(sin(time*0.7)*0.1), 1.0)')
    .glslCoord('xy+=sin(time*0.2)*0.02; return xy');


// Effet très intéressant
window.gl014 = () =>
    glsl('vec2 p=_st-0.5; float mandala=0.0; float a=atan(p.y,p.x)+time*0.1*i0; float r=length(p); mandala+=sin(a*1.0*i1+time)*cos(r*1.0*i2+time*0.3)*exp(-r*0.5);  mandala+=sin(a*2.0*i1+time)*cos(r*2.0*i2+time*0.6)*exp(-r*1.0); mandala+=sin(a*3.0*i1+time)*cos(r*3.0*i2+time*0.9)*exp(-r*1.5); mandala+=sin(a*4.0*i1+time)*cos(r*4.0*i2+time*1.2)*exp(-r*2.0); return vec4(vec3(mandala*0.3+0.5)*vec3(sin(time*2.0), cos(time*1.5), sin(time*2.5)), 1.0);', 1, 1, 3)
    .diff(o0)
    .glslColor('vec4(c0.rbg*pow(c0.rgb, vec3(1.5)), 1.0)')
    .glslCoord('xy+=vec2(sin(time*0.2), cos(time*0.3))*myVar; return xy', ['myVar', 0.05])
    .glslCombineCoord('uv+vec2(c0.r,c0.b)*0.02', o1);


// Effet très intéresssant mais apparait trsè lentement
window.gl015 = () =>
    glsl('vec2 p=_st*i0-1.0; float julia=0.0; vec2 z=p; vec2 c=vec2(sin(time*i1)*0.8, cos(time*i2)*0.6); for(int j=0; j<8; j++) { if(dot(z,z)>4.0) break; z=vec2(z.x*z.x-z.y*z.y, 2.0*z.x*z.y)+c; julia+=1.0; } julia=julia/8.0; return vec4(vec3(julia)*vec3(sin(julia*5.0+time), cos(julia*7.0+time*1.1), sin(julia*3.0+time*0.7)), 1.0);', 2, 0.2, 0.3)
    .mult(o0, 0.95)
    .glslColor('vec4(c0.bgr+vec3(sin(time*0.8)*0.2), 1.0)');


// Effet très intéresssant
window.gl016 = () =>
    glsl('vec2 p=_st-0.5; float morph=sin(time*i0)*0.5+0.5; vec2 p1=p*vec2(1.0+morph*i1, 1.0-morph*0.5); vec2 p2=p*vec2(1.0-morph*0.5, 1.0+morph*i2); float shape1=1.0-smoothstep(0.2, 0.25, length(p1)); float shape2=1.0-smoothstep(0.15, 0.2, max(abs(p2.x), abs(p2.y))); float result=mix(shape1, shape2, morph); return vec4(vec3(result)*vec3(sin(morph*6.0+time), cos(morph*4.0+time*1.2), sin(morph*8.0+time*0.8)), 1.0);', 0.5, 1, 1)
    .add(o0, 0.93)
    .glslColor('vec4(c0.grb*vec3(1.2, 0.8, 1.1), 1.0)')
    .glslCoord('xy=mix(xy, fract(xy*2.0), sin(time*myVar)*0.5+0.5); return xy', ['myVar', 0.3]);


// Problème juste un changment de couleur uni
window.gl017 = () =>
    glsl('vec2 p=_st-0.5; float crystals=0.0; float a1=0.0+time*i0; vec2 ray1=vec2(cos(a1), sin(a1)); float proj1=dot(p, ray1); crystals+=abs(sin(proj1*i1+time*i2))*exp(-abs(proj1)*3.0); float a2=1.047+time*i0; vec2 ray2=vec2(cos(a2), sin(a2)); float proj2=dot(p, ray2); crystals+=abs(sin(proj2*i1+time*i2))*exp(-abs(proj2)*3.0); float a3=2.094+time*i0; vec2 ray3=vec2(cos(a3), sin(a3)); float proj3=dot(p, ray3); crystals+=abs(sin(proj3*i1+time*i2))*exp(-abs(proj3)*3.0); return vec4(vec3(crystals)*vec3(sin(time+crystals*3.0), cos(time*1.2+crystals*2.0), sin(time*0.8+crystals*4.0)), 1.0);', 0.1, 10, 2)
    .layer(o0, 0.95)
    .glslColor('vec4(c0.rgb*vec3(0.9, 1.2, 0.8)+cos(time*0.7)*0.1, 1.0)');


// Cristaux rayonnants avec interférences
window.gl017b = () =>
    glsl('vec2 p=_st-0.5; float crystals=0.0; for(float i=0.0; i<6.0; i++) { float a=i*1.047+time*i0; vec2 ray=vec2(cos(a), sin(a)); float proj=dot(p, ray); float wave=sin(proj*i1+time*i2+i*2.0); crystals+=abs(wave)*exp(-abs(proj)*2.0); crystals+=smoothstep(0.0, 0.02, abs(wave))*exp(-abs(proj)*5.0)*0.5; } float r=length(p); crystals*=(1.0-smoothstep(0.3, 0.5, r)); return vec4(vec3(crystals*0.5)*vec3(sin(time+crystals*3.0)*0.5+0.5, cos(time*1.2+crystals*2.0)*0.5+0.5, sin(time*0.8+crystals*4.0)*0.5+0.5), 1.0);', 0.1, 10, 2)
    .add(src(o0).scale(0.98), 0.9)
    .glslColor('vec4(c0.rgb*vec3(0.9, 1.2, 0.8)+cos(time*0.7)*0.1, 1.0)')
    .glslCombineCoord('uv+vec2(c0.r-0.5,c0.g-0.5)*0.02', o1);


window.gl018 = () =>
    glsl('vec2 p=_st*i0; vec2 waves=vec2(sin(p.x*2.0+time*i1)*sin(p.y+time*0.7),cos(p.y*1.5+time*i2)*cos(p.x*0.8+time*0.5)); float interference=sin(length(waves)*8.0+time*3.0)*0.5+0.5; return vec4(vec3(interference)*vec3(sin(waves.x*5.0+time), cos(waves.y*4.0+time*1.1),sin((waves.x+waves.y)*3.0+time*0.9)), 1.0);', 4, 1, 0.8)
    .diff(o0)
    .glslColor('vec4(c0.brg*vec3(1.1, 0.9, 1.2), 1.0)')
    .glslCoord('xy+=vec2(sin(time*0.4),cos(time*0.6))*myVar; return xy', ['myVar', 0.03])
    .glslCombineCoord('uv+vec2(c0.g,c0.b)*0.01', o1);

// gl018b - Oscillations quantiques avec interférences multidimensionnelles (variation complexe de gl018)
window.gl018b = () =>
    glsl('vec2 p=_st*i0; float t=time; vec2 waves=vec2(sin(p.x*3.0+t*i1)*sin(p.y*1.5+t*0.9)*cos(p.x*p.y*0.5), cos(p.y*2.5+t*i2)*cos(p.x*1.2+t*0.7)*sin(length(p)*2.0)); vec2 quantum=vec2(sin(waves.x*8.0+waves.y*5.0+t*2.0), cos(waves.y*7.0-waves.x*4.0+t*1.5)); float interference=sin(length(waves)*10.0+t*3.5)*cos(length(quantum)*6.0+t*2.1)*0.5+0.5; float resonance=sin(dot(waves, quantum)*12.0+t*4.0)*0.3; float phase=atan(quantum.y, quantum.x)+t*0.8; float spiral=sin(length(p)*15.0-phase*3.0+t*2.5)*0.2; return vec4(vec3(interference+resonance+spiral)*vec3(sin(waves.x*6.0+quantum.x*3.0+t*1.2), cos(waves.y*5.0-quantum.y*2.0+t*1.5), sin((waves.x+waves.y)*4.0+phase+t*0.8)), 1.0);', 5, 1.2, 0.9)
    .diff(o0, 0.85)
    .glslColor('vec4(c0.brg*vec3(1.15, 0.85, 1.25)*pow(c0.r, 0.8), 1.0)')
    .glslCoord('vec2 distort=vec2(sin(time*0.3+xy.y*3.0), cos(time*0.5+xy.x*2.0))*myVar; xy+=distort+vec2(sin(length(xy)*4.0+time), cos(atan(xy.y, xy.x)*3.0+time*0.7))*myVar*0.5; return xy', ['myVar', 0.04])
    .glslCombineCoord('vec2 feedback=vec2(c0.g-c0.r, c0.b-c0.g)*0.015; uv+=feedback+vec2(sin(uv.x*10.0+time*0.6), cos(uv.y*8.0+time*0.4))*0.003; return uv', o1)
    .mult(src(o0).scale(1.01).rotate(0.003), 0.93);

// ecran noir
window.gl019 = () =>
    glsl('vec2 p=_st-0.5; float galaxy=0.0; float a=atan(p.y, p.x)+time*i0; float r=length(p); vec2 spiral1=r*vec2(cos(a+r*1.0*i1), sin(a+r*1.0*i2)); galaxy+=sin(length(spiral1)*10.0)*exp(-r*1.0*0.8); vec2 spiral2=r*vec2(cos(a+r*2.0*i1), sin(a+r*2.0*i2)); galaxy+=sin(length(spiral2)*10.0)*exp(-r*2.0*0.8); vec2 spiral3=r*vec2(cos(a+r*3.0*i1), sin(a+r*3.0*i2)); galaxy+=sin(length(spiral3)*10.0)*exp(-r*3.0*0.8); return vec4(vec3(galaxy*0.3+0.5)*vec3(sin(time*1.5), cos(time*2.0), sin(time*1.2)), 1.0);', 0.05, 2, 2)
    .mult(o0, 0.96)
    .glslColor('vec4(c0.gbr*c0.rgb*vec3(0.8, 1.1, 0.9), 1.0)');


// Galaxie spirale avec bras lumineux
window.gl019b = () =>
    glsl('vec2 p=_st-0.5; float galaxy=0.0; float a=atan(p.y, p.x); float r=length(p); for(float arm=0.0; arm<3.0; arm++) { float spiral_a=a+r*i1+time*i0+arm*2.094; float spiral_r=r*exp(-arm*0.3); float wave=sin(spiral_a*i2)*exp(-spiral_r*2.0); galaxy+=max(0.0, wave); galaxy+=smoothstep(0.8, 1.0, wave)*exp(-spiral_r*4.0); } float core=exp(-r*r*10.0); galaxy=galaxy*0.5+core; return vec4(vec3(galaxy)*vec3(0.5+sin(time*1.5)*0.5, 0.5+cos(time*2.0)*0.5, 0.5+sin(time*1.2)*0.5), 1.0);', 0.05, 2, 4)
    .add(src(o0).scale(1.01).rotate(0.002), 0.94)
    .glslColor('vec4(c0.gbr*vec3(0.8, 1.1, 0.9)+vec3(sin(time*0.5)*0.1), 1.0)')
    .glslCombine('return mix(c0, c1, 0.9)', o1);


window.gl020 = () =>
    glsl('vec2 p=_st-0.5; float time2=time*i0; float morph=sin(time2)*0.5+0.5; float r=length(p); float a=atan(p.y,p.x); float petals=6.0+sin(time2*i1)*3.0; float flower=sin(a*petals+time)*i2+0.3; float bubble=0.4+sin(time2*3.0)*0.1; float shape=mix(flower, bubble, morph); float mask=1.0-smoothstep(shape-0.05, shape+0.05, r); return vec4(vec3(mask)*vec3(sin(a*3.0+time), cos(r*15.0+time*1.8), sin(a*5.0+time*1.3)), 1.0);',0.1, 2, 0.2)
    .add(o0, 0.94)
    .glslColor('vec4(c0.rbg+vec3(sin(time*1.2), cos(time*0.9), sin(time*1.5))*0.15, 1.0)')
    .glslCoord('xy*=vec2(0.9+sin(time*myVar)*0.1, 1.1+cos(time*0.15)*0.1); return xy', ['myVar', 0.2]);


// Champ électromagnétique avec ondulations - CONSERVÉ
window.gl021 = () =>
    glsl('vec2 p=_st*i0-0.5; float t=time*i1; float field=0.0; for(float i=0.0; i<4.0; i++) { vec2 charge=vec2(sin(t*0.3+i*1.57)*0.4, cos(t*0.4+i*2.1)*0.3); float dist=length(p-charge); float potential=1.0/(dist+0.1); field+=potential*sin(t*2.0+i*3.14)*0.5+0.5; } field*=i2; float magnetic=sin(p.x*8.0+t)*cos(p.y*6.0+t*1.2)*0.2; field+=magnetic; field=smoothstep(0.2, 0.8, field); return vec4(vec3(field)*vec3(0.9+sin(t)*0.1, 0.5+cos(t*1.3)*0.5, 1.0), 1.0);', 4.0, 0.6, 0.8)
    .diff(src(o0).scale(1.003).rotate(0.001))
    .glslCombine('return c0*0.9+c1*vec4(1.0,0.8,1.1,1.0)', o1)
    .glslCoord('xy*=vec2(1.0+sin(time*myVar)*0.04, 1.0+cos(time*0.5)*0.03); return xy', ['myVar', 0.8]);


// Synapse neuronale avec potentiels d'action - CONSERVÉ
window.gl022 = () =>
    glsl('vec2 p=_st*i0; float t=time*i1; vec2 dendrite=p+vec2(sin(t*0.3+p.y*2.0),cos(t*0.2+p.x*1.5))*0.1; float signal=0.0; for(float syn=0.0; syn<6.0; syn++) { vec2 junction=vec2(sin(syn*1.047+t*0.1)*0.4, cos(syn*1.047+t*0.15)*0.3); float distance=length(dendrite-junction); float potential=exp(-distance*i2)*sin(t*2.0+syn*2.1)*0.5+0.5; float threshold=smoothstep(0.4, 0.6, potential); signal+=threshold*sin(t*1.5+syn)*0.5+0.5; } float axon=sin(length(dendrite)*8.0-t*3.0)*0.3+0.7; return vec4(vec3(signal*axon)*vec3(0.3+sin(t)*0.7, 0.9, 0.6+cos(t*1.4)*0.4), 1.0);', 4.0, 0.6, 6.0)
    .mult(src(o0).scale(1.002).rotate(0.0006), 0.94)
    .glslColor('vec4(c0.grb*vec3(0.8,1.0,0.9)+vec3(sin(time*1.0)*0.11), 1.0)')
    .glslCombineCoord('uv+vec2(c0.g-0.5,c0.r-0.5)*0.018', o1);


// gl023 - Trou noir avec distorsion spatiale et accrétion
window.gl023 = () =>
    glsl('vec2 p=_st-0.5; float r=length(p); float a=atan(p.y,p.x); float t=time*i0; float blackhole=1.0/(r+0.05); float distortion=sin(blackhole*i1-t*2.0)*exp(-r*3.0); vec2 warp=p*distortion*0.3; p+=warp; float accretion=0.0; for(float ring=1.0; ring<5.0; ring++) { float radius=0.1*ring; float intensity=exp(-abs(r-radius)*20.0); float spiral=sin(a*3.0+blackhole*ring-t*ring*0.5); accretion+=intensity*spiral*exp(-ring*0.3); } float event_horizon=smoothstep(0.08, 0.05, r); float jets=exp(-abs(p.x)*10.0)*sin(p.y*20.0-t*5.0)*exp(-abs(p.y)*2.0)*(1.0-event_horizon); float glow=blackhole*i2*exp(-r*2.0)*(1.0-event_horizon); return vec4(vec3(accretion+jets*0.3+glow)*vec3(1.0-r*0.5, 0.5+sin(a+t)*0.5, 0.8+cos(blackhole*0.1)*0.2), 1.0);', 0.3, 5.0, 0.15)
    .mult(src(o0).scale(1.01).rotate(0.002), 0.92)
    .glslColor('vec4(c0.bgr*vec3(1.1,0.9,1.3)+vec3(sin(time*0.7)*0.1), 1.0)')
    .glslCombineCoord('uv+vec2(c0.r-0.5,c0.g-0.5)*0.03', o1);

// gl023b - Trou noir supermassif avec ergosphère et disque d'accrétion chaotique (variation complexe de gl023)
window.gl023b = () =>
    glsl('vec2 p=_st-0.5; float r=length(p); float a=atan(p.y,p.x); float t=time*i0; float blackhole=1.0/(r+0.03); float ergosphere=smoothstep(0.12, 0.08, r)*0.7; vec2 kerr_warp=vec2(sin(blackhole*0.5+t*3.0), cos(blackhole*0.7-t*2.5))*ergosphere*0.4; p+=kerr_warp; float relativistic_boost=1.0+blackhole*0.3; float distortion=sin(blackhole*i1-t*2.5)*exp(-r*2.5)*relativistic_boost; vec2 spacetime_warp=p*distortion*0.4; p+=spacetime_warp; float accretion=0.0; for(float ring=0.5; ring<7.0; ring+=0.5) { float radius=0.08*ring; float intensity=exp(-abs(r-radius)*25.0); float spiral=sin(a*4.0+blackhole*ring-t*ring*0.7+ring*2.1); float turbulence=cos(a*ring*2.0+blackhole*0.8+t*ring)*exp(-ring*0.2); accretion+=intensity*(spiral+turbulence*0.6)*exp(-ring*0.25); } float event_horizon=smoothstep(0.06, 0.03, r); float photon_sphere=exp(-abs(r-0.15)*50.0)*sin(a*8.0+t*10.0)*0.8; float jets=exp(-abs(p.x)*12.0)*sin(p.y*25.0-t*6.0)*exp(-abs(p.y)*1.5)*(1.0-event_horizon)*relativistic_boost; float hawking_radiation=sin(blackhole*20.0+t*15.0)*exp(-r*8.0)*0.3*(1.0-event_horizon); float glow=blackhole*i2*exp(-r*1.8)*(1.0-event_horizon)*relativistic_boost; float gravitational_lensing=sin(r*15.0+a*3.0+t*0.8)*exp(-r*4.0)*0.2; return vec4(vec3(accretion+jets*0.4+glow+photon_sphere+hawking_radiation+gravitational_lensing)*vec3(1.2-r*0.7+sin(blackhole*0.1+t)*0.3, 0.3+sin(a*2.0+t*1.2)*0.7, 0.9+cos(blackhole*0.15+t*0.5)*0.4), 1.0);', 0.4, 6.0, 0.2)
    .mult(src(o0).scale(1.015).rotate(0.004), 0.89)
    .glslColor('vec4(c0.brg*vec3(1.2,0.8,1.4)*pow(c0.g, 0.7)+vec3(sin(time*0.9)*0.15, cos(time*1.3)*0.1, sin(time*0.6)*0.12), 1.0)')
    .glslCoord('vec2 gravity=normalize(xy-vec2(0.5))*length(xy-vec2(0.5))*myVar; xy+=gravity+vec2(sin(time*0.2+length(xy)*8.0), cos(time*0.3+atan(xy.y-0.5, xy.x-0.5)*5.0))*myVar*0.3; return xy', ['myVar', 0.025])
    .glslCombineCoord('vec2 lensing=vec2(c0.r-c0.b, c0.g-c0.r)*0.04; uv+=lensing+vec2(sin(uv.x*12.0+time*0.8), cos(uv.y*10.0+time*0.6))*0.002; return uv', o1)
    .add(src(o0).scale(0.98).rotate(-0.001), 0.05);

// gl023c - Trou noir hypermassif avec effets quantiques et palette multicolore (version ultra-complexe et colorée de gl023b)
window.gl023c = () =>
    glsl('vec2 p=_st-0.5; float r=length(p); float a=atan(p.y,p.x); float t=time*i0; float blackhole=1.0/(r+0.02); float singularity=1.0/(r*r+0.001); vec4 spacetime=vec4(p.x, p.y, sin(blackhole*0.4+t*1.5), cos(blackhole*0.6-t*1.2)); float curvature=dot(spacetime.xy, spacetime.zw)*1.2+length(spacetime)*0.8; float kerr_spin=sin(blackhole*0.8+curvature+t*3.5)*exp(-r*3.2); vec2 frame_dragging=vec2(cos(a+blackhole*0.7+t*5.0), sin(a+blackhole*0.9-t*4.2))*kerr_spin*1.0; p+=frame_dragging; float ergosphere=smoothstep(0.18, 0.04, r)*1.8; float inner_horizon=smoothstep(0.08, 0.025, r)*1.5; vec2 quantum_effects=vec2(sin(blackhole*20.0+curvature*15.0+t*12.0), cos(blackhole*25.0-curvature*12.0+t*10.5))*exp(-r*8.0)*0.6; p+=quantum_effects; float accretion_total=0.0; float magnetic_intensity=0.0; for(float ring=0.2; ring<18.0; ring+=0.3) { float radius=0.05*ring; float spiral_factor=sin(a*ring*2.2+blackhole*ring*1.2-t*ring*1.8+ring*5.5+curvature*ring*0.5); float disk_profile=exp(-abs(r-radius)*40.0); float velocity_shear=sqrt(1.0/max(radius, 0.1))*cos(t*ring*2.5+a*ring*4.0); float turbulence=cos(a*ring*4.0+blackhole*2.0+t*ring*1.5)*sin(blackhole*ring*1.2+t*ring*2.8); float magnetic_dynamo=sin(blackhole*ring*3.0+t*ring*3.5+curvature*ring*1.5)*cos(a*ring*6.0+t*ring*1.2); magnetic_intensity+=magnetic_dynamo*disk_profile*exp(-ring*0.1); float relativistic_factor=1.0+blackhole*0.8*cos(a*ring+t*ring*0.8+velocity_shear*3.0); accretion_total+=disk_profile*(spiral_factor*2.0+turbulence*1.5+velocity_shear*1.2)*relativistic_factor*exp(-ring*0.12); } float event_horizon=smoothstep(0.04, 0.01, r); float photon_ring=exp(-abs(r-0.15)*80.0)*sin(a*18.0+blackhole*5.0+t*18.0+curvature*10.0)*2.0; float stable_orbit=exp(-abs(r-0.22)*50.0)*cos(a*12.0+t*10.0+magnetic_intensity*4.0)*1.2; float redshift_factor=1.0/(1.0+blackhole*0.5)*(1.0-event_horizon); photon_ring*=redshift_factor; stable_orbit*=redshift_factor; float polar_outflow=exp(-abs(p.x)*22.0)*sin(p.y*60.0-t*12.0+blackhole*3.0+magnetic_intensity*2.0)*exp(-abs(p.y)*0.8)*(1.0-event_horizon)*ergosphere*1.5; float equatorial_wind=exp(-abs(p.y)*26.0)*cos(p.x*55.0+t*13.0-blackhole*2.5)*exp(-abs(p.x)*0.6)*(1.0-event_horizon)*inner_horizon*1.3; float hawking_glow=sin(blackhole*40.0+curvature*30.0+t*25.0)*cos(singularity*2.0+t*35.0)*exp(-r*25.0)*0.8*(1.0-event_horizon); float vacuum_fluctuations=cos(blackhole*50.0+t*40.0)*sin(curvature*25.0+t*35.0)*exp(-r*30.0)*0.6; float casimir_radiation=sin(quantum_effects.x*30.0+t*45.0)*cos(quantum_effects.y*35.0+t*40.0)*exp(-r*35.0)*0.4; float grav_waves=sin(r*30.0+a*10.0+t*2.5+blackhole*0.3)*cos(curvature*15.0+t*3.0)*exp(-r*8.0)*0.5; float tidal_heating=sin(blackhole*12.0+r*35.0+a*8.0+t*5.0)*cos(ergosphere*20.0+t*4.0)*exp(-r*12.0)*ergosphere*0.8; float plasma_emission=sin(accretion_total*15.0+magnetic_intensity*12.0+t*20.0)*exp(-r*6.0)*0.7; float synchrotron_glow=cos(magnetic_intensity*15.0+blackhole*8.0+t*12.0)*sin(a*15.0+t*8.0)*exp(-r*5.5)*1.2; float total_brightness=accretion_total*2.2+polar_outflow*1.0+equatorial_wind*0.9+photon_ring*1.5+stable_orbit*1.1+hawking_glow*1.8+vacuum_fluctuations*1.3+casimir_radiation*1.0+grav_waves*1.0+tidal_heating*0.9+plasma_emission*1.4+synchrotron_glow*1.6; vec3 color_base=vec3(2.2-r*1.2+sin(blackhole*0.2+curvature*1.8+t*2.0)*0.8+cos(magnetic_intensity*1.2+t*1.8)*0.6, 0.1+sin(a*5.0+blackhole*1.8+t*2.8)*1.6+cos(curvature*3.5+t*2.5)*1.2, 1.8+cos(blackhole*0.3+singularity*0.8+t*1.2)*0.9+sin(grav_waves*8.0+t*2.0)*0.7); vec3 spectral_lines=vec3(sin(t*1.2+total_brightness*0.8)*0.5, cos(t*1.6+magnetic_intensity*3.0)*0.6, sin(t*1.0+plasma_emission*2.5)*0.4); vec3 quantum_colors=vec3(cos(quantum_effects.x*12.0+t*4.0)*0.4, sin(quantum_effects.y*10.0+t*3.5)*0.5, cos(casimir_radiation*15.0+t*5.0)*0.3); vec3 doppler_shift=vec3(sin(frame_dragging.x*15.0+t*3.0)*0.3, cos(frame_dragging.y*12.0+t*2.5)*0.4, sin(redshift_factor*20.0+t*3.5)*0.2); return vec4(total_brightness*(color_base+spectral_lines+quantum_colors+doppler_shift), 1.0);', 0.5, 10.0, 0.3)
    .mult(src(o0).scale(1.022).rotate(0.008), 0.94)
    .glslColor('vec4(c0.brg*vec3(1.8,1.5,2.2)*pow(c0.r, 0.5)*pow(c0.g, 0.9)*pow(c0.b, 0.6)+vec3(sin(time*1.5+c0.r*12.0)*0.35, cos(time*2.2+c0.g*8.0)*0.3, sin(time*1.1+c0.b*15.0)*0.28)+vec3(c0.g*c0.b*0.6, c0.r*c0.b*0.8, c0.r*c0.g*0.5)+vec3(cos(time*0.8)*0.15, sin(time*1.3)*0.2, cos(time*0.6)*0.18), 1.0)')
    .glslCoord('vec2 gravity_well=normalize(xy-vec2(0.5))*pow(length(xy-vec2(0.5)), 1.8)*myVar*1.2; vec2 spacetime_ripples=vec2(sin(time*0.3+length(xy)*15.0+gravity_well.x*12.0), cos(time*0.4+atan(xy.y-0.5, xy.x-0.5)*9.0+gravity_well.y*10.0))*myVar*0.6; vec2 quantum_jitter=vec2(cos(time*8.0+xy.x*50.0), sin(time*7.0+xy.y*45.0))*myVar*0.08; xy+=gravity_well+spacetime_ripples+quantum_jitter; return xy', ['myVar', 0.045])
    .glslCombineCoord('vec2 rainbow_lensing=vec2(c0.r-c0.g, c0.g-c0.b)*0.08+vec2(c0.b-c0.r, c0.r-c0.g)*0.05; vec2 temporal_distortion=vec2(sin(uv.x*22.0+time*1.8+c0.r*8.0), cos(uv.y*18.0+time*1.5+c0.b*6.0))*0.006; vec2 chromatic_waves=vec2(cos(uv.x*12.0+c0.g*10.0+time*2.0), sin(uv.y*14.0+c0.r*8.0+time*1.7))*0.003; uv+=rainbow_lensing+temporal_distortion+chromatic_waves; return uv', o1)
    .add(src(o0).scale(0.97).rotate(-0.004), 0.15)
    .mult(src(o0).scale(1.012).rotate(0.003), 0.97);

// gl023d - Trou noir chaotique multidimensionnel avec effets psychédéliques extrêmes (version ultra-chaotique)
window.gl023d = () =>
    glsl('vec2 p=_st-0.5; float r=length(p); float a=atan(p.y,p.x); float t=time*i0; float chaos_seed=sin(t*3.7)*cos(t*2.3)*sin(t*5.1); float blackhole=1.0/(r+0.01+chaos_seed*0.02); float singularity=1.0/(r*r+0.0003+abs(chaos_seed)*0.001); vec4 hyperspace=vec4(p.x*sin(t*4.2), p.y*cos(t*3.8), sin(blackhole*0.6+t*2.1+chaos_seed*5.0), cos(blackhole*0.9-t*1.7+chaos_seed*4.2)); float spacetime_fracture=dot(hyperspace.xy, hyperspace.zw)*2.5+length(hyperspace)*1.8+sin(chaos_seed*20.0)*0.5; float reality_distortion=sin(spacetime_fracture*5.0+blackhole*0.7+t*4.8)*cos(r*18.0+a*8.0+t*3.2+chaos_seed*15.0); vec2 dimensional_rift=vec2(cos(a+blackhole*1.2+t*7.0+reality_distortion*2.0), sin(a+blackhole*1.6-t*6.3+spacetime_fracture*1.5))*exp(-r*2.5)*1.8; p+=dimensional_rift; float ergosphere_chaos=smoothstep(0.25, 0.02, r)*2.5*sin(t*8.0+chaos_seed*25.0); float inner_maelstrom=smoothstep(0.12, 0.015, r)*2.2*cos(t*12.0+reality_distortion*8.0); float quantum_storm=smoothstep(0.08, 0.005, r)*3.0*sin(t*15.0+spacetime_fracture*10.0); vec2 chaos_field=vec2(sin(blackhole*35.0+spacetime_fracture*25.0+t*18.0+chaos_seed*40.0), cos(blackhole*42.0-spacetime_fracture*20.0+t*16.5+reality_distortion*30.0))*exp(-r*12.0)*1.2; vec2 reality_tears=vec2(cos(singularity*5.0+t*25.0+chaos_seed*60.0), sin(singularity*7.0+t*28.0+spacetime_fracture*35.0))*exp(-r*35.0)*0.8; p+=chaos_field+reality_tears; float accretion_madness=0.0; float magnetic_chaos=0.0; float plasma_frenzy=0.0; float temporal_flux=0.0; for(float ring=0.1; ring<25.0; ring+=0.2) { float radius=0.04*ring*(1.0+sin(ring*0.8+t*2.0+chaos_seed*10.0)*0.3); float ring_chaos=sin(ring*7.0+t*ring*3.5+chaos_seed*ring*5.0)*cos(ring*4.2+t*ring*2.8); float spiral_madness=sin(a*ring*3.5+blackhole*ring*2.2-t*ring*2.8+ring*8.7+spacetime_fracture*ring*1.2+ring_chaos*15.0); float disk_instability=exp(-abs(r-radius)*60.0*(1.0+ring_chaos*0.5)); float velocity_storm=sqrt(1.0/max(radius, 0.05))*sin(t*ring*4.0+a*ring*6.0+chaos_seed*ring*8.0)*cos(ring_chaos*10.0); float turbulence_explosion=cos(a*ring*6.0+blackhole*3.5+t*ring*2.2+ring_chaos*12.0)*sin(blackhole*ring*2.0+t*ring*4.5+spacetime_fracture*ring*3.0); float magnetic_hurricane=sin(blackhole*ring*5.0+t*ring*6.0+spacetime_fracture*ring*2.5+ring_chaos*20.0)*cos(a*ring*9.0+t*ring*1.8+reality_distortion*ring*4.0); magnetic_chaos+=magnetic_hurricane*disk_instability*exp(-ring*0.08); float plasma_tornado=cos(magnetic_chaos*ring*1.5+t*ring*3.8+chaos_seed*ring*12.0)*sin(spacetime_fracture*ring*4.0+t*ring*2.5); plasma_frenzy+=plasma_tornado*disk_instability*exp(-ring*0.1); float time_vortex=sin(blackhole*ring*3.0+t*ring*5.5+reality_distortion*ring*6.0)*cos(ring_chaos*25.0+t*ring*4.2); temporal_flux+=time_vortex*disk_instability*exp(-ring*0.09); float relativistic_chaos=1.0+blackhole*1.2*cos(a*ring+t*ring*1.2+velocity_storm*5.0+ring_chaos*8.0)*sin(chaos_seed*ring*15.0); accretion_madness+=disk_instability*(spiral_madness*3.5+turbulence_explosion*2.8+velocity_storm*2.2+magnetic_hurricane*1.8)*relativistic_chaos*exp(-ring*0.08); } float event_horizon_fractal=smoothstep(0.03, 0.005, r)*sin(t*20.0+chaos_seed*50.0); float photon_chaos_ring=exp(-abs(r-0.18)*120.0)*sin(a*25.0+blackhole*8.0+t*25.0+spacetime_fracture*15.0+chaos_seed*80.0)*3.5; float unstable_orbit_storm=exp(-abs(r-0.28)*80.0)*cos(a*18.0+t*15.0+magnetic_chaos*6.0+reality_distortion*12.0)*2.5; float redshift_chaos=1.0/(1.0+blackhole*0.8+abs(chaos_seed)*0.3)*(1.0-event_horizon_fractal*0.95); photon_chaos_ring*=redshift_chaos; unstable_orbit_storm*=redshift_chaos; float polar_jet_explosion=exp(-abs(p.x)*30.0)*sin(p.y*80.0-t*18.0+blackhole*5.0+magnetic_chaos*3.0+chaos_seed*100.0)*exp(-abs(p.y)*0.5)*(1.0-event_horizon_fractal)*ergosphere_chaos*2.2; float equatorial_hurricane=exp(-abs(p.y)*35.0)*cos(p.x*75.0+t*20.0-blackhole*4.0+plasma_frenzy*4.0+reality_distortion*8.0)*exp(-abs(p.x)*0.4)*(1.0-event_horizon_fractal)*inner_maelstrom*2.0; float diagonal_tornado=exp(-abs(p.x+p.y)*25.0)*sin((p.x-p.y)*90.0+t*22.0+temporal_flux*5.0)*exp(-abs(p.x-p.y)*0.6)*quantum_storm*1.8; float hawking_delirium=sin(blackhole*60.0+spacetime_fracture*45.0+t*35.0+chaos_seed*150.0)*cos(singularity*4.0+t*50.0+reality_distortion*25.0)*exp(-r*40.0)*1.5*(1.0-event_horizon_fractal); float vacuum_psychosis=cos(blackhole*80.0+t*60.0+chaos_seed*200.0)*sin(spacetime_fracture*35.0+t*55.0+temporal_flux*15.0)*exp(-r*50.0)*1.2; float casimir_insanity=sin(chaos_field.x*50.0+t*70.0+reality_distortion*40.0)*cos(reality_tears.y*60.0+t*65.0+chaos_seed*180.0)*exp(-r*60.0)*0.9; float gravitational_madness=sin(r*50.0+a*15.0+t*4.0+blackhole*0.5+spacetime_fracture*20.0)*cos(spacetime_fracture*25.0+t*5.5+chaos_seed*30.0)*exp(-r*15.0)*1.2; float tidal_chaos=sin(blackhole*20.0+r*60.0+a*12.0+t*8.0+reality_distortion*18.0)*cos(ergosphere_chaos*30.0+t*6.5+temporal_flux*12.0)*exp(-r*20.0)*ergosphere_chaos*1.5; float plasma_lightning=sin(accretion_madness*25.0+magnetic_chaos*18.0+t*30.0+chaos_seed*120.0)*cos(plasma_frenzy*20.0+t*28.0)*exp(-r*8.0)*1.8; float synchrotron_storm=cos(magnetic_chaos*25.0+blackhole*12.0+t*18.0+reality_distortion*15.0)*sin(a*20.0+t*12.0+temporal_flux*10.0)*exp(-r*7.0)*2.5; float bremsstrahlung_chaos=sin(plasma_frenzy*30.0+t*32.0+chaos_seed*140.0)*cos(magnetic_chaos*20.0+t*25.0)*exp(-r*9.0)*1.6; float total_chaos=accretion_madness*3.5+polar_jet_explosion*1.8+equatorial_hurricane*1.6+diagonal_tornado*1.4+photon_chaos_ring*2.2+unstable_orbit_storm*1.9+hawking_delirium*2.8+vacuum_psychosis*2.0+casimir_insanity*1.7+gravitational_madness*1.5+tidal_chaos*1.3+plasma_lightning*2.4+synchrotron_storm*2.6+bremsstrahlung_chaos*2.1; vec3 psychedelic_base=vec3(3.5-r*2.0+sin(blackhole*0.3+spacetime_fracture*2.5+t*3.5+chaos_seed*25.0)*1.2+cos(magnetic_chaos*2.0+t*3.0+reality_distortion*8.0)*0.9, 0.05+sin(a*8.0+blackhole*3.0+t*4.5+plasma_frenzy*5.0+chaos_seed*35.0)*2.5+cos(spacetime_fracture*5.0+t*4.0+temporal_flux*6.0)*1.8, 2.8+cos(blackhole*0.5+singularity*1.2+t*2.5+reality_distortion*4.0)*1.3+sin(gravitational_madness*12.0+t*3.8+chaos_seed*20.0)*1.0); vec3 fractal_colors=vec3(sin(t*2.5+total_chaos*1.2+chaos_seed*40.0)*0.8, cos(t*3.2+magnetic_chaos*5.0+reality_distortion*10.0)*1.0, sin(t*2.0+plasma_frenzy*4.0+spacetime_fracture*8.0)*0.7); vec3 dimensional_spectrum=vec3(cos(chaos_field.x*20.0+t*6.0+temporal_flux*8.0)*0.7, sin(chaos_field.y*18.0+t*5.5+reality_distortion*12.0)*0.9, cos(casimir_insanity*25.0+t*7.0+chaos_seed*50.0)*0.6); vec3 reality_glitch=vec3(sin(dimensional_rift.x*25.0+t*5.0+spacetime_fracture*15.0)*0.6, cos(dimensional_rift.y*20.0+t*4.5+chaos_seed*30.0)*0.8, sin(redshift_chaos*35.0+t*6.5+reality_distortion*20.0)*0.5); vec3 temporal_rainbow=vec3(cos(temporal_flux*15.0+t*8.0)*0.4, sin(reality_tears.x*30.0+t*7.5)*0.6, cos(reality_tears.y*25.0+t*9.0)*0.3); return vec4(total_chaos*(psychedelic_base+fractal_colors+dimensional_spectrum+reality_glitch+temporal_rainbow), 1.0);', 0.3, 15.0, 0.4)
    .mult(src(o0).scale(1.035).rotate(0.015), 0.88)
    .glslColor('vec4(c0.gbr*vec3(2.5,2.2,3.0)*pow(c0.r, 0.3)*pow(c0.g, 1.2)*pow(c0.b, 0.4)+vec3(sin(time*2.8+c0.r*20.0)*0.6, cos(time*3.5+c0.g*15.0)*0.7, sin(time*2.2+c0.b*25.0)*0.5)+vec3(c0.g*c0.b*1.2, c0.r*c0.b*1.5, c0.r*c0.g*0.9)+vec3(cos(time*1.5+c0.r*c0.g*10.0)*0.3, sin(time*2.0+c0.g*c0.b*12.0)*0.4, cos(time*1.2+c0.r*c0.b*8.0)*0.2), 1.0)')
    .glslCoord('vec2 chaos_gravity=normalize(xy-vec2(0.5))*pow(length(xy-vec2(0.5)), 2.5)*myVar*2.0; vec2 reality_storm=vec2(sin(time*0.8+length(xy)*25.0+chaos_gravity.x*20.0+sin(time*5.0)*8.0), cos(time*1.2+atan(xy.y-0.5, xy.x-0.5)*15.0+chaos_gravity.y*18.0+cos(time*7.0)*6.0))*myVar*1.2; vec2 dimensional_shift=vec2(cos(time*12.0+xy.x*80.0+sin(time*3.0)*10.0), sin(time*15.0+xy.y*70.0+cos(time*4.0)*12.0))*myVar*0.15; vec2 temporal_chaos=vec2(sin(time*20.0+xy.x*xy.y*100.0), cos(time*18.0+length(xy)*60.0))*myVar*0.08; xy+=chaos_gravity+reality_storm+dimensional_shift+temporal_chaos; return xy', ['myVar', 0.08])
    .glslCombineCoord('vec2 psychedelic_lensing=vec2(c0.r-c0.g, c0.g-c0.b)*0.15+vec2(c0.b-c0.r, c0.r-c0.g)*0.12; vec2 fractal_distortion=vec2(sin(uv.x*35.0+time*3.0+c0.r*15.0+sin(time*8.0)*5.0), cos(uv.y*30.0+time*2.5+c0.b*12.0+cos(time*6.0)*4.0))*0.012; vec2 chaos_waves=vec2(cos(uv.x*20.0+c0.g*18.0+time*4.0+sin(time*10.0)*3.0), sin(uv.y*25.0+c0.r*16.0+time*3.5+cos(time*12.0)*2.5))*0.008; vec2 reality_feedback=vec2(sin(c0.r*c0.g*20.0+time*5.0), cos(c0.g*c0.b*25.0+time*4.5))*0.006; uv+=psychedelic_lensing+fractal_distortion+chaos_waves+reality_feedback; return uv', o1)
    .add(src(o0).scale(0.92).rotate(-0.008), 0.25)
    .mult(src(o0).scale(1.025).rotate(0.006), 0.93)
    .add(src(o0).scale(0.88).rotate(0.012), 0.18)
    .mult(src(o0).scale(1.008).rotate(-0.003), 0.95);

// gl024 - Réacteur à fusion avec plasma toroïdal
window.gl024 = () =>
    glsl('vec2 p=_st-0.5; float t=time*i0; vec3 torus3d=vec3(p.x, p.y*cos(0.5)-0.2*sin(0.5), p.y*sin(0.5)+0.2*cos(0.5)); float major=length(torus3d.xy); float minor=length(vec2(major-0.3, torus3d.z)); float torus=smoothstep(i1+0.05, i1-0.05, minor); float plasma=0.0; for(float mode=1.0; mode<6.0; mode++) { float poloidal=atan(torus3d.z, major-0.3)*mode; float toroidal=atan(torus3d.y, torus3d.x)*mode*1.618; plasma+=sin(poloidal+toroidal-t*mode*0.3)*exp(-mode*0.2); } plasma*=torus; float turbulence=sin(p.x*30.0+plasma*5.0)*cos(p.y*25.0-t*3.0)*0.2; plasma+=turbulence*torus; float magnetic_field=sin(major*15.0-t*2.0)*cos(minor*20.0+t)*torus*0.3; float core=exp(-minor*10.0)*sin(t*5.0+major*10.0); return vec4(vec3(plasma*0.3+0.5+magnetic_field+core*i2)*vec3(0.9+sin(t+plasma)*0.1, 0.3+cos(t*1.2)*0.7, 1.0), 1.0);', 0.5, 0.15, 0.5)
    .add(src(o0).scale(0.99), 0.93)
    .glslColor('vec4(c0.rgb*vec3(1.2,0.8,1.1)+vec3(0.0,sin(time*2.0)*0.1,0.0), 1.0)')
    .glslCombine('return mix(c0, c1*vec4(1.1,0.9,1.3,1.0), 0.85)', o1);


// gl025 - Dimension fractale avec portails interdimensionnels
window.gl025 = () =>
    glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; vec2 z=p; for(float iter=0.0; iter<8.0; iter++) { z=abs(z)/dot(z,z)-vec2(0.8+sin(t*0.2)*0.2, 0.6+cos(t*0.3)*0.3); float portal=exp(-length(z-p)*2.0); dimension+=portal/(iter+1.0); vec2 fold=z; if(fold.x+fold.y<0.0) fold.xy=-fold.yx; if(fold.x-fold.y<0.0) fold.x=-fold.y; if(fold.x<-0.5) fold.x=-1.0-fold.x; z=fold*1.3; } float rifts=sin(dimension*i2+t)*0.5+0.5; float quantum=sin(p.x*dimension*5.0)*cos(p.y*dimension*5.0)*exp(-length(p)*2.0); return vec4(vec3(rifts+quantum*0.3)*vec3(sin(dimension*2.0+t), cos(dimension*3.0-t*1.2), sin(dimension+t*0.8)), 1.0);', 3.0, 0.3, 10.0)
    .diff(src(o0).scale(1.005).rotate(0.003))
    .glslColor('vec4(c0.brg*pow(abs(c0.rgb), vec3(0.8))+vec3(sin(time*0.5)*0.05), 1.0)')
    .glslCoord('xy*=1.0+sin(time*0.2)*0.03; xy+=vec2(sin(time*0.7),cos(time*0.5))*0.01; return xy');


window.gl025b = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; vec2 z=p; for(float iter=0.0; iter<10.0; iter++) { z=abs(z)/dot(z,z)-vec2(0.75+sin(t*0.18)*0.25, 0.55+cos(t*0.28)*0.35); float portal=exp(-length(z-p)*1.8); dimension+=portal/(iter+1.0); vec2 fold=z; if(fold.x+fold.y<0.0) fold.xy=-fold.yx; if(fold.x-fold.y<0.0) fold.x=-fold.y; if(fold.x<-0.45) fold.x=-1.05-fold.x; float twist=sin(iter*0.5+t*0.3)*0.1; fold=mat2(cos(twist),sin(twist),-sin(twist),cos(twist))*fold; z=fold*1.35; } float rifts=sin(dimension*i2+t)*0.5+0.5; float quantum=sin(p.x*dimension*6.0)*cos(p.y*dimension*6.0)*exp(-length(p)*1.8); float membrane=sin(dimension*8.0+t*1.5)*cos(dimension*5.0-t*0.8)*0.3; return vec4(vec3(rifts+quantum*0.4+membrane)*vec3(sin(dimension*2.2+t), cos(dimension*3.3-t*1.3), sin(dimension*1.2+t*0.9)), 1.0);', 3.2, 0.28, 11.0);

window.gl025c = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; float complexity=0.0; vec2 z=p; for(float iter=0.0; iter<12.0; iter++) { float chaos=sin(t*0.15+iter*0.3)*0.15; z=abs(z)/dot(z,z)-vec2(0.72+sin(t*0.22+chaos)*0.28, 0.58+cos(t*0.31+chaos)*0.32); float portal=exp(-length(z-p)*2.2); dimension+=portal/(iter+1.0); complexity+=length(z)*0.1; vec2 fold=z; if(fold.x+fold.y<0.0) fold.xy=-fold.yx; if(fold.x-fold.y<0.0) fold.x=-fold.y; if(fold.x<-0.42) fold.x=-1.08-fold.x; float organic=sin(iter*0.4+t*0.25+complexity)*0.12; float morph=cos(iter*0.6+t*0.35+dimension)*0.08; fold=mat2(cos(organic+morph),sin(organic+morph),-sin(organic+morph),cos(organic+morph))*fold; z=fold*(1.32+sin(iter*0.2)*0.03); } float rifts=sin(dimension*i2+t)*0.5+0.5; float quantum=sin(p.x*dimension*6.5)*cos(p.y*dimension*6.5)*exp(-length(p)*1.9); float membrane=sin(dimension*9.0+t*1.6)*cos(dimension*5.5-t*0.9)*0.35; float neural=sin(complexity*4.0+t*2.0)*exp(-length(p-vec2(sin(t*0.1),cos(t*0.15)))*3.0)*0.25; return vec4(vec3(rifts+quantum*0.45+membrane+neural)*vec3(sin(dimension*2.4+t+complexity*0.5), cos(dimension*3.5-t*1.4+complexity*0.3), sin(dimension*1.3+t*0.95+complexity*0.4)), 1.0);', 3.4, 0.26, 12.0);

window.gl025d = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; float complexity=0.0; float flow=0.0; vec2 z=p; for(float iter=0.0; iter<14.0; iter++) { float vortex=sin(t*0.12+iter*0.25)*cos(t*0.18+iter*0.35)*0.18; float chaos=sin(t*0.19+iter*0.28+vortex)*0.16; z=abs(z)/dot(z,z)-vec2(0.68+sin(t*0.24+chaos+vortex)*0.32, 0.52+cos(t*0.33+chaos-vortex)*0.38); float portal=exp(-length(z-p)*2.5); dimension+=portal/(iter+1.0); complexity+=length(z)*0.12; flow+=dot(z,vec2(sin(iter*0.3),cos(iter*0.4)))*0.05; vec2 fold=z; if(fold.x+fold.y<0.0) fold.xy=-fold.yx; if(fold.x-fold.y<0.0) fold.x=-fold.y; if(fold.x<-0.38) fold.x=-1.12-fold.x; float organic=sin(iter*0.35+t*0.28+complexity+flow)*0.14; float morph=cos(iter*0.55+t*0.38+dimension-flow)*0.09; float enzyme=sin(iter*0.45+t*0.22+vortex)*0.06; fold=mat2(cos(organic+morph+enzyme),sin(organic+morph+enzyme),-sin(organic+morph+enzyme),cos(organic+morph+enzyme))*fold; z=fold*(1.28+sin(iter*0.18+flow)*0.04); } float rifts=sin(dimension*i2+t)*0.5+0.5; float quantum=sin(p.x*dimension*7.0+flow)*cos(p.y*dimension*7.0-flow)*exp(-length(p)*2.0); float membrane=sin(dimension*10.0+t*1.7+complexity)*cos(dimension*6.0-t*1.0+flow)*0.38; float neural=sin(complexity*4.5+t*2.2+flow)*exp(-length(p-vec2(sin(t*0.08+flow),cos(t*0.12-flow)))*3.2)*0.28; float vessel=cos(flow*6.0+t*1.8)*sin(dimension*4.0+complexity)*exp(-length(p)*2.8)*0.22; return vec4(vec3(rifts+quantum*0.5+membrane+neural+vessel)*vec3(sin(dimension*2.6+t+complexity*0.6+flow*0.4), cos(dimension*3.7-t*1.5+complexity*0.4-flow*0.3), sin(dimension*1.4+t*1.05+complexity*0.5+flow*0.6)), 1.0);', 3.6, 0.24, 13.0);

window.gl025e = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; vec2 z=p; for(float iter=0.0; iter<9.0; iter++) { float phase=sin(t*0.16+iter*0.4)*0.2; z=abs(z)/dot(z,z)-vec2(0.78+sin(t*0.21+phase)*0.22, 0.62+cos(t*0.29+phase)*0.28); float portal=exp(-length(z-p)*1.6); dimension+=portal/(iter+1.0); vec2 fold=z; if(fold.x+fold.y<0.0) fold.xy=-fold.yx; if(fold.x-fold.y<0.0) fold.x=-fold.y; if(fold.x<-0.48) fold.x=-1.02-fold.x; float mutation=sin(iter*0.3+t*0.32+phase)*0.08; fold=mat2(cos(mutation),sin(mutation),-sin(mutation),cos(mutation))*fold; z=fold*1.38; } float rifts=sin(dimension*i2+t)*0.5+0.5; float quantum=sin(p.x*dimension*5.5)*cos(p.y*dimension*5.5)*exp(-length(p)*1.7); float bio=sin(dimension*7.0+t*1.3)*cos(dimension*4.5-t*0.7)*0.32; return vec4(vec3(rifts+quantum*0.38+bio)*vec3(sin(dimension*2.1+t), cos(dimension*3.2-t*1.25), sin(dimension*1.15+t*0.85)), 1.0);', 3.1, 0.29, 10.5);

window.gl025f = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; float energy=0.0; vec2 z=p; for(float iter=0.0; iter<16.0; iter++) { float storm=sin(t*0.11+iter*0.22)*cos(t*0.16+iter*0.31)*0.19; float turbulence=sin(t*0.13+iter*0.26+storm)*0.17; float vortex=cos(t*0.09+iter*0.19-storm)*0.21; z=abs(z)/dot(z,z)-vec2(0.65+sin(t*0.26+turbulence+vortex)*0.35, 0.48+cos(t*0.34+turbulence-vortex)*0.42); float portal=exp(-length(z-p)*2.8); dimension+=portal/(iter+1.0); energy+=dot(z,z)*0.08; vec2 fold=z; if(fold.x+fold.y<0.0) fold.xy=-fold.yx; if(fold.x-fold.y<0.0) fold.x=-fold.y; if(fold.x<-0.35) fold.x=-1.15-fold.x; float organic=sin(iter*0.32+t*0.31+energy+storm)*0.15; float morph=cos(iter*0.52+t*0.41+dimension-turbulence)*0.11; float enzyme=sin(iter*0.42+t*0.25+vortex+energy)*0.07; float plasma=cos(iter*0.38+t*0.29-storm+dimension)*0.09; fold=mat2(cos(organic+morph+enzyme+plasma),sin(organic+morph+enzyme+plasma),-sin(organic+morph+enzyme+plasma),cos(organic+morph+enzyme+plasma))*fold; z=fold*(1.25+sin(iter*0.15+energy+turbulence)*0.05); } float rifts=sin(dimension*i2+t)*0.5+0.5; float quantum=sin(p.x*dimension*7.5+energy)*cos(p.y*dimension*7.5-energy)*exp(-length(p)*2.1); float membrane=sin(dimension*11.0+t*1.8+energy)*cos(dimension*6.5-t*1.1+energy)*0.4; float neural=sin(energy*5.0+t*2.4)*exp(-length(p-vec2(sin(t*0.06+energy),cos(t*0.09-energy)))*3.5)*0.3; float vessel=cos(energy*6.5+t*1.9)*sin(dimension*4.5+energy)*exp(-length(p)*3.0)*0.25; float quantum_field=sin(dimension*8.0+energy*3.0+t*2.8)*cos(energy*4.0-dimension*2.0+t*1.6)*0.35; return vec4(vec3(rifts+quantum*0.55+membrane+neural+vessel+quantum_field)*vec3(sin(dimension*2.8+t+energy*0.7), cos(dimension*3.9-t*1.6+energy*0.5), sin(dimension*1.5+t*1.1+energy*0.8)), 1.0);', 3.8, 0.22, 14.0);


window.gl025g = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; vec2 z=p; for(float iter=0.0; iter<10.0; iter++) { z=abs(z)/dot(z,z)-vec2(0.75+sin(t*0.18)*0.25, 0.55+cos(t*0.28)*0.35); float portal=exp(-length(z-p)*1.8); dimension+=portal/(iter+1.0); vec2 fold=z; float radius=length(fold); float angle=atan(fold.y,fold.x); if(radius>0.6) fold=fold*0.8; if(sin(angle*3.0+t)>0.3) fold=vec2(-fold.y,fold.x); if(cos(angle*2.0+t*0.5)>0.4) fold*=0.9; float twist=sin(iter*0.5+t*0.3+radius)*0.1; fold=mat2(cos(twist),sin(twist),-sin(twist),cos(twist))*fold; z=fold*1.35; } float rifts=(sin(dimension*i2+t)*0.5+0.5); float quantum=sin(p.x*dimension*6.0)*cos(p.y*dimension*6.0)*exp(-length(p)*1.8); float membrane=sin(dimension*8.0+t*1.5)*cos(dimension*5.0-t*0.8)*0.3; return vec4(vec3(rifts+quantum*0.4+membrane)*vec3(sin(dimension*2.2+t), cos(dimension*3.3-t*1.3), sin(dimension*1.2+t*0.9)), 1.0);', 3.2, 0.28, 11.0);

window.gl025h = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; float complexity=0.0; vec2 z=p; for(float iter=0.0; iter<12.0; iter++) { float chaos=sin(t*0.15+iter*0.3)*0.15; z=abs(z)/dot(z,z)-vec2(0.72+sin(t*0.22+chaos)*0.28, 0.58+cos(t*0.31+chaos)*0.32); float portal=exp(-length(z-p)*2.2); dimension+=portal/(iter+1.0); complexity+=length(z)*0.1; vec2 fold=z; float dist=length(fold); float phase=atan(fold.y,fold.x)+t*0.1; if(dist>0.5+sin(phase*4.0)*0.2) fold*=0.85; if(dist<0.3+cos(phase*3.0)*0.15) fold*=1.2; float spiral=phase+dist*2.0+t*0.2; if(sin(spiral)>0.2) fold=vec2(fold.x*cos(0.3)-fold.y*sin(0.3), fold.x*sin(0.3)+fold.y*cos(0.3)); float organic=sin(iter*0.4+t*0.25+complexity+dist)*0.12; float morph=cos(iter*0.6+t*0.35+dimension-phase)*0.08; fold=mat2(cos(organic+morph),sin(organic+morph),-sin(organic+morph),cos(organic+morph))*fold; z=fold*(1.32+sin(iter*0.2+dist)*0.03); } float rifts=(sin(dimension*i2+t)*0.5+0.5); float quantum=sin(p.x*dimension*6.5)*cos(p.y*dimension*6.5)*exp(-length(p)*1.9); float membrane=sin(dimension*9.0+t*1.6)*cos(dimension*5.5-t*0.9)*0.35; float neural=sin(complexity*4.0+t*2.0)*exp(-length(p-vec2(sin(t*0.1),cos(t*0.15)))*3.0)*0.25; return vec4(vec3(rifts+quantum*0.45+membrane+neural)*vec3(sin(dimension*2.4+t+complexity*0.5), cos(dimension*3.5-t*1.4+complexity*0.3), sin(dimension*1.3+t*0.95+complexity*0.4)), 1.0);', 3.4, 0.26, 12.0);

window.gl025i = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; float complexity=0.0; float flow=0.0; vec2 z=p; for(float iter=0.0; iter<14.0; iter++) { float vortex=sin(t*0.12+iter*0.25)*cos(t*0.18+iter*0.35)*0.18; float chaos=sin(t*0.19+iter*0.28+vortex)*0.16; z=abs(z)/dot(z,z)-vec2(0.68+sin(t*0.24+chaos+vortex)*0.32, 0.52+cos(t*0.33+chaos-vortex)*0.38); float portal=exp(-length(z-p)*2.5); dimension+=portal/(iter+1.0); complexity+=length(z)*0.12; flow+=dot(z,z)*0.05; vec2 fold=z; float r=length(fold); float a=atan(fold.y,fold.x); float wave=sin(a*5.0+r*3.0+t+flow)*0.3; if(r>0.4+wave) fold=fold*(0.7+sin(a*2.0+t)*0.1); if(r<0.2+cos(a*3.0+t*0.7)*0.1) fold=fold*1.3; float helix=a+r*4.0+t*0.3+complexity; if(cos(helix)>0.1) fold=vec2(fold.x*cos(0.2+sin(t)*0.1)-fold.y*sin(0.2+sin(t)*0.1), fold.x*sin(0.2+sin(t)*0.1)+fold.y*cos(0.2+sin(t)*0.1)); float organic=sin(iter*0.35+t*0.28+complexity+flow+r)*0.14; float morph=cos(iter*0.55+t*0.38+dimension-flow-a)*0.09; float enzyme=sin(iter*0.45+t*0.22+vortex+wave)*0.06; fold=mat2(cos(organic+morph+enzyme),sin(organic+morph+enzyme),-sin(organic+morph+enzyme),cos(organic+morph+enzyme))*fold; z=fold*(1.28+sin(iter*0.18+flow+r)*0.04); } float rifts=(sin(dimension*i2+t)*0.5+0.5); float quantum=sin(p.x*dimension*7.0+flow)*cos(p.y*dimension*7.0-flow)*exp(-length(p)*2.0); float membrane=sin(dimension*10.0+t*1.7+complexity)*cos(dimension*6.0-t*1.0+flow)*0.38; float neural=sin(complexity*4.5+t*2.2+flow)*exp(-length(p-vec2(sin(t*0.08+flow),cos(t*0.12-flow)))*3.2)*0.28; float vessel=cos(flow*6.0+t*1.8)*sin(dimension*4.0+complexity)*exp(-length(p)*2.8)*0.22; return vec4(vec3(rifts+quantum*0.5+membrane+neural+vessel)*vec3(sin(dimension*2.6+t+complexity*0.6+flow*0.4), cos(dimension*3.7-t*1.5+complexity*0.4-flow*0.3), sin(dimension*1.4+t*1.05+complexity*0.5+flow*0.6)), 1.0);', 3.6, 0.24, 13.0);

window.gl025j = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; vec2 z=p; for(float iter=0.0; iter<9.0; iter++) { float phase=sin(t*0.16+iter*0.4)*0.2; z=abs(z)/dot(z,z)-vec2(0.78+sin(t*0.21+phase)*0.22, 0.62+cos(t*0.29+phase)*0.28); float portal=exp(-length(z-p)*1.6); dimension+=portal/(iter+1.0); vec2 fold=z; float d=length(fold); float theta=atan(fold.y,fold.x); float petal=sin(theta*6.0+t+d*2.0)*0.2; if(d>0.5+petal) fold=fold*0.8; if(d<0.25+cos(theta*4.0+t*0.8)*0.1) fold=fold*1.25; float bloom=theta*2.0+d*3.0+t*0.5+phase; if(sin(bloom)>0.3) { float rot=0.4+sin(t+iter)*0.1; fold=vec2(fold.x*cos(rot)-fold.y*sin(rot), fold.x*sin(rot)+fold.y*cos(rot)); } float mutation=sin(iter*0.3+t*0.32+phase+d)*0.08; fold=mat2(cos(mutation),sin(mutation),-sin(mutation),cos(mutation))*fold; z=fold*1.38; } float rifts=(sin(dimension*i2+t)*0.5+0.5); float quantum=sin(p.x*dimension*5.5)*cos(p.y*dimension*5.5)*exp(-length(p)*1.7); float bio=sin(dimension*7.0+t*1.3)*cos(dimension*4.5-t*0.7)*0.32; return vec4(vec3(rifts+quantum*0.38+bio)*vec3(sin(dimension*2.1+t), cos(dimension*3.2-t*1.25), sin(dimension*1.15+t*0.85)), 1.0);', 3.1, 0.29, 10.5);

window.gl025k = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; float energy=0.0; vec2 z=p; for(float iter=0.0; iter<16.0; iter++) { float storm=sin(t*0.11+iter*0.22)*cos(t*0.16+iter*0.31)*0.19; float turbulence=sin(t*0.13+iter*0.26+storm)*0.17; float vortex=cos(t*0.09+iter*0.19-storm)*0.21; z=abs(z)/dot(z,z)-vec2(0.65+sin(t*0.26+turbulence+vortex)*0.35, 0.48+cos(t*0.34+turbulence-vortex)*0.42); float portal=exp(-length(z-p)*2.8); dimension+=portal/(iter+1.0); energy+=dot(z,z)*0.08; vec2 fold=z; float radius=length(fold); float angle=atan(fold.y,fold.x); float mandala=sin(angle*8.0+radius*5.0+t+energy)*0.25; float galaxy=cos(angle*3.0+radius*2.0+t*0.6+storm)*0.2; if(radius>0.35+mandala) fold=fold*(0.75+sin(angle*2.0+t)*0.05); if(radius<0.15+galaxy) fold=fold*(1.4+cos(angle*4.0+t*0.7)*0.1); float nebula=angle*3.0+radius*6.0+t*0.4+turbulence; if(sin(nebula)>0.2) { float spin=0.3+sin(t*0.5+energy)*0.08; fold=vec2(fold.x*cos(spin)-fold.y*sin(spin), fold.x*sin(spin)+fold.y*cos(spin)); } float organic=sin(iter*0.32+t*0.31+energy+storm+radius)*0.15; float morph=cos(iter*0.52+t*0.41+dimension-turbulence-angle)*0.11; float enzyme=sin(iter*0.42+t*0.25+vortex+energy+mandala)*0.07; float plasma=cos(iter*0.38+t*0.29-storm+dimension+galaxy)*0.09; fold=mat2(cos(organic+morph+enzyme+plasma),sin(organic+morph+enzyme+plasma),-sin(organic+morph+enzyme+plasma),cos(organic+morph+enzyme+plasma))*fold; z=fold*(1.25+sin(iter*0.15+energy+turbulence+radius)*0.05); } float rifts=(sin(dimension*i2+t)*0.5+0.5); float quantum=sin(p.x*dimension*7.5+energy)*cos(p.y*dimension*7.5-energy)*exp(-length(p)*2.1); float membrane=sin(dimension*11.0+t*1.8+energy)*cos(dimension*6.5-t*1.1+energy)*0.4; float neural=sin(energy*5.0+t*2.4)*exp(-length(p-vec2(sin(t*0.06+energy),cos(t*0.09-energy)))*3.5)*0.3; float vessel=cos(energy*6.5+t*1.9)*sin(dimension*4.5+energy)*exp(-length(p)*3.0)*0.25; float quantum_field=sin(dimension*8.0+energy*3.0+t*2.8)*cos(energy*4.0-dimension*2.0+t*1.6)*0.35; return vec4(vec3(rifts+quantum*0.55+membrane+neural+vessel+quantum_field)*vec3(sin(dimension*2.8+t+energy*0.7), cos(dimension*3.9-t*1.6+energy*0.5), sin(dimension*1.5+t*1.1+energy*0.8)), 1.0);', 3.8, 0.22, 14.0);


window.gl025l = () => glsl('vec2 p=_st*i0-0.5*i0; float t=time*i1; float dimension=0.0; float energy=0.0; vec2 z=p; for(float iter=0.0; iter<16.0; iter++) { float storm=sin(t*0.11+iter*0.22)*cos(t*0.16+iter*0.31)*0.19; float turbulence=sin(t*0.13+iter*0.26+storm)*0.17; float vortex=cos(t*0.09+iter*0.19-storm)*0.21; z=abs(z)/dot(z,z)-vec2(0.65+sin(t*0.26+turbulence+vortex)*0.35, 0.48+cos(t*0.34+turbulence-vortex)*0.42); float portal=exp(-length(z-p)*2.8); dimension+=portal/(iter+1.0); energy+=dot(z,z)*0.08; vec2 fold=z; float radius=length(fold); float angle=atan(fold.y,fold.x); float mandala=sin(angle*8.0+radius*5.0+t+energy)*0.25; float galaxy=cos(angle*3.0+radius*2.0+t*0.6+storm)*0.2; if(radius>0.35+mandala) fold=fold*(0.75+sin(angle*2.0+t)*0.05); if(radius<0.15+galaxy) fold=fold*(1.4+cos(angle*4.0+t*0.7)*0.1); float nebula=angle*3.0+radius*6.0+t*0.4+turbulence; if(sin(nebula)>0.2) { float spin=0.3+sin(t*0.5+energy)*0.08; fold=vec2(fold.x*cos(spin)-fold.y*sin(spin), fold.x*sin(spin)+fold.y*cos(spin)); } float organic=sin(iter*0.32+t*0.31+energy+storm+radius)*0.15; float morph=cos(iter*0.52+t*0.41+dimension-turbulence-angle)*0.11; float enzyme=sin(iter*0.42+t*0.25+vortex+energy+mandala)*0.07; float plasma=cos(iter*0.38+t*0.29-storm+dimension+galaxy)*0.09; fold=mat2(cos(organic+morph+enzyme+plasma),sin(organic+morph+enzyme+plasma),-sin(organic+morph+enzyme+plasma),cos(organic+morph+enzyme+plasma))*fold; z=fold*(1.25+sin(iter*0.15+energy+turbulence+radius)*0.05); } float rifts=(sin(dimension*i2+t)*0.5+0.5); float quantum=sin(p.x*dimension*7.5+energy)*cos(p.y*dimension*7.5-energy)*exp(-length(p)*2.1); float membrane=sin(dimension*11.0+t*1.8+energy)*cos(dimension*6.5-t*1.1+energy)*0.4; float neural=sin(energy*5.0+t*2.4)*exp(-length(p-vec2(sin(t*0.06+energy),cos(t*0.09-energy)))*3.5)*0.3; float vessel=cos(energy*6.5+t*1.9)*sin(dimension*4.5+energy)*exp(-length(p)*3.0)*0.25; float quantum_field=sin(dimension*8.0+energy*3.0+t*2.8)*cos(energy*4.0-dimension*2.0+t*1.6)*0.35; return vec4(vec3(rifts+quantum*0.55+membrane+neural+vessel+quantum_field)*vec3(sin(dimension*2.8+t+energy*0.7), cos(dimension*3.9-t*1.6+energy*0.5), sin(dimension*1.5+t*1.1+energy*0.8)), 1.0);', 3.8, 0.22, 14.0);


// gl026 - Créature bioluminescente avec tentacules (VERSION 2 - équilibré)
window.gl026 = () =>
    glsl('vec2 p=_st-0.5; float t=time*i0; float creature=0.15; vec2 center=vec2(sin(t*0.3)*0.1, cos(t*0.4)*0.1); float body=exp(-length(p-center)*i1)*0.4; creature+=body; for(float tent=0.0; tent<8.0; tent++) { float angle=tent*0.785+t*0.2; vec2 base=center+vec2(cos(angle), sin(angle))*0.15; vec2 tip=base+vec2(cos(angle+sin(t+tent)*0.5), sin(angle+cos(t*1.2+tent)*0.5))*0.3; vec2 closest=base; for(float seg=0.0; seg<6.0; seg++) { vec2 segment=mix(base, tip, seg/6.0); segment+=vec2(sin(t*2.0+seg+tent)*0.02, cos(t*1.8+seg*1.2+tent)*0.02); float dist=length(p-segment); if(dist<length(p-closest)) closest=segment; } float tentacle=exp(-length(p-closest)*20.0)*0.5; float pulse=sin(t*3.0+tent*2.0+length(p-closest)*10.0)*0.3+0.5; creature+=tentacle*pulse*0.25; } float biolum=sin(length(p-center)*25.0-t*5.0)*exp(-length(p-center)*3.0)*0.15; creature+=biolum; float eyes=exp(-length(p-center-vec2(-0.05,0.05))*50.0)+exp(-length(p-center-vec2(0.05,0.05))*50.0); creature+=eyes*(sin(t*4.0)*0.2+0.4)*0.3; return vec4(vec3(creature*i2)*vec3(0.3+sin(t*0.7)*0.2, 0.6+cos(t*0.9)*0.2, 0.5+sin(t*1.1)*0.3), 1.0);', 0.4, 4.0, 0.8)
    .add(src(o0).scale(1.005).rotate(0.001), 0.9)
    .glslColor('vec4(c0.gbr*vec3(0.9,1.1,1.0), 1.0)')
    .glslCombineCoord('uv+vec2(sin(c0.g*6.28),cos(c0.b*6.28))*0.008', o1);


// gl027 - Réseau organique quantique avec croissance biologique (VERSION ORGANIQUE)
window.gl027 = () =>
    glsl('vec2 p=_st*i0; float t=time*i1; vec2 cell=floor(p*6.0); vec2 local=fract(p*6.0)-0.5; float organism=0.4; float growth=sin(t*0.3)*0.3+0.7; for(float x=-1.0; x<=1.0; x++) { for(float y=-1.0; y<=1.0; y++) { vec2 neighbor=cell+vec2(x,y); float dna=fract(sin(dot(neighbor, vec2(127.1, 311.7)))*43758.5); float age=fract(dna*137.5+t*0.05); vec2 cellPos=local-vec2(x,y); float size=mix(0.2, 0.4, age*growth); float membrane=1.0-smoothstep(size-0.05, size+0.05, length(cellPos)); float mitosis=sin(age*6.28+t*1.5)*0.2+0.8; organism+=membrane*mitosis*0.3; vec2 flow=vec2(sin(neighbor.x*0.7+t*0.4), cos(neighbor.y*0.9+t*0.6))*0.1; vec2 organelle=cellPos+flow; float nucleus=exp(-length(organelle)*15.0)*age; organism+=nucleus*0.25; float connection=0.0; for(float dir=0.0; dir<6.28; dir+=1.57) { vec2 branch=cellPos+vec2(cos(dir), sin(dir))*0.3*age; float link=exp(-length(branch)*8.0)*sin(t*2.0+dir)*0.5+0.5; connection+=link*0.1; } organism+=connection; } } float metabolism=sin(length(p)*8.0+t*1.2)*0.15; float neural=sin(p.x*20.0+organism*5.0)*cos(p.y*15.0-t*2.0)*0.1; organism=0.4+organism*0.2+metabolism+neural; return vec4(vec3(organism)*vec3(0.6+sin(t*0.8+organism)*0.3, 0.8+cos(t*1.1-organism*2.0)*0.2, 0.5+sin(t*0.6+organism*3.0)*0.4), 1.0);', 2.5, 0.4, 5.0)
    .modulate(noise(4, 0.1), 0.05)
    .colorama(0.3)
    .glslColor('vec4(c0.brg*vec3(1.0,0.9,1.2), 1.0)')
    .glslCoord('xy+=sin(xy*6.0+time)*0.003; return xy');


// gl028 - Tempête électrique avec éclairs fractals (CORRIGÉ - moins lumineux)
window.gl028 = () =>
    glsl('vec2 p=_st-0.5; float t=time*i0; float storm=0.0; float clouds=sin(p.x*3.0+t*0.5)*cos(p.y*2.0-t*0.3)+sin(length(p)*5.0+t*0.7); clouds=smoothstep(-0.5, 0.5, clouds)*0.15; storm+=clouds; for(float bolt=0.0; bolt<3.0; bolt++) { float flash=step(0.985, sin(t*2.0+bolt*2.1))*0.7; if(flash>0.0) { vec2 start=vec2(sin(bolt*3.7)*0.4, 0.5); vec2 end=vec2(sin(bolt*3.7+t)*0.3, -0.5); vec2 current=start; float lightning=0.0; for(float seg=0.0; seg<20.0; seg++) { vec2 next=mix(start, end, (seg+1.0)/20.0); next.x+=sin(seg*2.0+t*10.0)*i1*exp(-seg*0.15); vec2 ray=next-current; vec2 toPoint=p-current; float proj=clamp(dot(toPoint, ray)/dot(ray, ray), 0.0, 1.0); vec2 closest=current+ray*proj; float dist=length(p-closest); lightning+=exp(-dist*i2*0.8)*flash*0.6; current=next; } storm+=lightning; for(float branch=0.0; branch<4.0; branch++) { vec2 branchStart=mix(start, end, (branch+5.0)/20.0); vec2 branchDir=vec2(sin(branch*1.7+t*5.0)*0.15, -0.08); float branchLight=exp(-length(p-branchStart-branchDir)*35.0)*flash*0.3; storm+=branchLight; } } } float energy=sin(storm*8.0+t*3.0)*exp(-abs(storm-0.3)*3.0)*0.1; float darkness=0.1+storm*0.6; return vec4(vec3(darkness+energy)*vec3(0.4+sin(t)*0.2, 0.5+cos(t*1.2)*0.1, 0.7), 1.0);', 0.8, 0.02, 60.0)
    .mult(src(o0).scale(0.985), 0.92)
    .glslColor('vec4(c0.rgb*vec3(0.8,0.9,1.2)*1.2, 1.0)')
    .glslCombine('return mix(c0*0.9, c1*0.8, 0.7)', o1);


// gl029 - Métamorphose organique avec croissance cellulaire (VERSION FINALE - simplifiée)
window.gl029 = () =>
    glsl('vec2 p=_st*i0; float t=time*i1; vec2 cell=floor(p); vec2 local=fract(p)-0.5; float organism=0.4; for(float x=-1.0; x<=1.0; x++) { for(float y=-1.0; y<=1.0; y++) { vec2 neighbor=cell+vec2(x,y); float dna=fract(sin(dot(neighbor, vec2(12.9898, 78.233)))*43758.5453); float age=fract(dna+t*0.1)*0.6; vec2 cellPos=local-vec2(x,y); float membrane=1.0-smoothstep(0.15, 0.2, length(cellPos)); organism+=membrane*age*0.4; float nucleus=exp(-length(cellPos)*i2)*0.3; organism+=nucleus; } } float pulse=sin(t*2.0+length(local)*10.0)*0.1; organism=0.35+organism*0.2+pulse; return vec4(vec3(organism)*vec3(0.7, 0.8, 0.6), 1.0);', 3.5, 0.5, 8.0)
    .contrast(1.2)
    .glslColor('vec4(c0.grb*vec3(1.1,1.2,1.0), 1.0)')
    .glslCombineCoord('uv+vec2(c0.r-0.5,c0.g-0.5)*0.008*sin(time*0.4)', o1);


// gl030 - Océan fractal avec vagues tridimensionnelles (NOUVEAU CONCEPT - basé sur gl024 mais différent)
window.gl030 = () =>
    glsl('vec2 p=_st-0.5; float t=time*i0; vec3 ocean=vec3(p.x, p.y, 0.0); float waves=0.0; for(float layer=0.0; layer<4.0; layer++) { float freq=pow(2.0, layer); float amp=pow(0.5, layer); vec2 dir1=vec2(cos(layer*0.7), sin(layer*0.7)); vec2 dir2=vec2(cos(layer*1.3+1.57), sin(layer*1.3+1.57)); float wave1=sin(dot(p*freq, dir1)*10.0-t*2.0+layer)*amp; float wave2=cos(dot(p*freq, dir2)*8.0+t*1.5+layer*0.5)*amp*0.7; ocean.z+=wave1+wave2; waves+=wave1+wave2; vec2 grad=vec2(cos(dot(p*freq, dir1)*10.0-t*2.0), cos(dot(p*freq, dir2)*8.0+t*1.5))*amp*0.1; p+=grad; } float depth=1.0/(abs(ocean.z)+0.5); float foam=smoothstep(0.6, 0.8, abs(waves))*exp(-length(p)*2.0); float caustics=sin(p.x*20.0+waves*5.0)*sin(p.y*20.0-waves*3.0)*depth*0.2; float turbulence=sin(length(p)*30.0-t*3.0+waves*10.0)*0.1; float underwater=exp(-abs(ocean.z)*i1)*0.3; return vec4(vec3(depth*0.3+foam*0.2+caustics+turbulence+underwater)*vec3(0.3+sin(t+waves)*0.2, 0.5+cos(t*0.8)*0.3, 0.7+sin(t*1.2-waves)*0.2), 1.0);', 0.5, 3.0, 0.2)
    .mult(src(o0).scale(0.995).rotate(0.001), 0.93)
    .glslColor('vec4(c0.bgr*vec3(0.8,1.0,1.2), 1.0)')
    .glslCoord('xy+=vec2(sin(xy.y*8.0+time*0.5),cos(xy.x*8.0-time*0.7))*0.008; return xy')
    .glslCombine('return mix(c0, c1*vec4(0.7,0.9,1.1,1.0), 0.85)', o1);


// ========================================
// GL031 - Mirror Fractal Raymarcher (inspired by "Happy Accident" shader)
// ========================================

//  GL031: organisme bioélectrique avec battements cardiaques, respiration, circulation sanguine, système nerveux, aura et chakras - 18 itérations
window.gl031 = () => glsl('vec2 p=_st*3.0; p=abs(p)-0.5; p*=1.2; p=abs(p)-0.3; p*=1.1; float d=length(p)-0.2; vec3 c=0.5+0.5*sin(time+vec3(0,2,4)); return vec4(c/(1.0+abs(d)*5.0),1.0);');


window.gl031b = () => glsl('vec2 p=_st*2.0; vec3 q=vec3(p,time*0.2); q=abs(fract(q)-0.5); float d=min(length(q.xy)-0.1,q.x+q.y-0.2); vec3 c=sin(q*6.0+time+vec3(0,2,4)); return vec4(c*exp(-d*5.0),1.0);');


window.gl031c = () => glsl('vec2 p=_st*2.0-1.0; float t=time*0.3; float r=length(p); float a=atan(p.y,p.x); vec3 col=vec3(0.0); for(int i=0;i<3;i++){float freq=float(i+1)*2.0; float phase=t*freq+sin(r*10.0)*0.5; float spiral=sin(a*freq+phase)*exp(-r*0.5); col[i]=0.5+0.5*spiral*sin(r*5.0-t*3.0);} col*=1.0/(1.0+r*r); vec4(col*vec3(i0,i1,i2),1.0)', 2.0, 0.8, 1.5);


window.gl031d = () => glsl('vec2 p=_st*3.0-1.5; float t=time*0.2; float r=length(p); float a=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p; for(int i=0;i<5;i++){float fi=float(i); z=abs(z)/dot(z,z)-vec2(0.8+sin(t*0.5)*0.2,0.6+cos(t*0.3)*0.2); float spiral=sin(a*3.0+t*2.0+fi)*exp(-r*0.3); float fractal=length(z)*0.1; col+=vec3(sin(fractal*8.0+t+fi),sin(fractal*12.0+t+fi+2.0),sin(fractal*16.0+t+fi+4.0))*spiral*(1.0-fi*0.15);} col=pow(col*0.3,vec3(0.8)); col*=vec3(i0,i1,i2)*(1.0+sin(r*4.0-t*3.0)*0.3); vec4(col,1.0)', 1.5, 2.2, 0.9);


window.gl031e = () => glsl('vec2 p=_st*4.0-2.0; float t=time*0.15; float r=length(p); float a=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p; vec2 c=vec2(0.7*cos(t*0.3),-0.4*sin(t*0.2)); for(int i=0;i<8;i++){float fi=float(i)*0.3; z=vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y)+c+vec2(sin(t*0.8+fi)*0.1,cos(t*0.5+fi)*0.1); if(dot(z,z)>4.0) break; float d=length(z); vec3 hue=0.5+0.5*sin(vec3(d*5.0+t*2.0+fi,d*7.0+t*1.5+fi+2.0,d*9.0+t*1.8+fi+4.0)); col+=hue*exp(-d*0.5)*(1.0-fi*0.08); float ripple=sin(d*12.0-t*6.0)*exp(-abs(d-1.5)*2.0)*0.2; col*=(1.0+ripple);} col=pow(col*0.25,vec3(0.85)); float glow=exp(-r*0.8)*sin(a*4.0+t*3.0)*0.3; col*=vec3(i0,i1,i2)*(0.8+glow); vec4(col,1.0)', 1.8, 1.4, 2.1);


window.gl031f = () => glsl('vec2 p=_st*5.0-2.5; float t=time*0.12; float r=length(p); float a=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p; vec2 c=vec2(0.7*cos(t*0.3),-0.4*sin(t*0.2)); for(int i=0;i<12;i++){float fi=float(i)*0.25; mat2 rot=mat2(cos(t*0.1+fi*0.3),sin(t*0.1+fi*0.3),-sin(t*0.1+fi*0.3),cos(t*0.1+fi*0.3)); z=rot*z; z=vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y)+c+vec2(sin(t*0.8+fi)*0.15,cos(t*0.5+fi)*0.12); if(dot(z,z)>6.0) break; float d=length(z); vec3 hue1=0.5+0.5*sin(vec3(d*6.0+t*2.5+fi,d*8.0+t*1.8+fi+1.5,d*10.0+t*2.2+fi+3.0)); vec3 hue2=0.5+0.5*cos(vec3(d*4.0+t*1.5+fi+2.0,d*7.0+t*2.0+fi+4.0,d*9.0+t*1.2+fi+1.0)); vec3 blend=mix(hue1,hue2,sin(t*3.0+fi)*0.5+0.5); col+=blend*exp(-d*0.4)*(1.0-fi*0.06); float ripple1=sin(d*15.0-t*8.0+fi)*exp(-abs(d-1.8)*3.0)*0.25; float ripple2=cos(d*20.0-t*12.0+fi*2.0)*exp(-abs(d-1.2)*2.5)*0.15; col*=(1.0+ripple1+ripple2); float spiral=sin(a*6.0+d*3.0+t*4.0+fi)*exp(-r*0.3)*0.2; col+= spiral*blend*0.3;} col=pow(col*0.2,vec3(0.82)); float aurora=sin(a*3.0+t*2.0)*sin(r*8.0-t*5.0)*exp(-r*0.6)*0.4; col*=vec3(i0,i1,i2)*(0.7+aurora); vec4(col,1.0)', 2.2, 1.6, 1.9);


window.gl031g = () => glsl('vec2 p=_st*6.0-3.0; float t=time*0.08; float r=length(p); float a=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p; float chaos=sin(t*0.7)*0.3+cos(t*0.4)*0.2; vec2 c=vec2(0.6+chaos*sin(t*0.15),-0.3+chaos*cos(t*0.23)); for(int i=0;i<15;i++){float fi=float(i)*0.2; float noise1=sin(z.x*3.0+t*1.2+fi)*cos(z.y*2.5+t*0.8+fi)*0.08; float noise2=cos(z.x*4.0+t*0.9+fi)*sin(z.y*3.5+t*1.5+fi)*0.06; vec2 turbulence=vec2(noise1,noise2); float phase=t*0.05+fi*0.4+length(z)*0.1; mat2 morph=mat2(cos(phase)+noise1*0.3,sin(phase)+noise2*0.2,-sin(phase)+noise2*0.15,cos(phase)+noise1*0.25); z=morph*z+turbulence; z=vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y)+c+vec2(sin(t*0.6+fi+noise1*5.0)*0.18,cos(t*0.4+fi+noise2*4.0)*0.15); if(dot(z,z)>8.0) break; float d=length(z); float organic=sin(d*8.0+t*3.0+fi)*cos(d*6.0+t*2.0+fi)*0.4; vec3 bio1=0.5+0.5*sin(vec3(d*7.0+t*1.8+fi+organic,d*9.0+t*1.4+fi+organic+1.8,d*11.0+t*2.1+fi+organic+3.2)); vec3 bio2=0.5+0.5*cos(vec3(d*5.0+t*2.2+fi+organic*2.0,d*8.0+t*1.6+fi+organic*1.5+2.5,d*10.0+t*1.9+fi+organic*1.8+4.1)); vec3 mutation=mix(bio1,bio2,sin(t*2.5+fi+organic*3.0)*0.5+0.5); col+=mutation*exp(-d*0.35)*(0.95-fi*0.04); float membrane=sin(d*18.0-t*6.0+fi+organic*2.0)*exp(-abs(d-2.2+organic*0.5)*2.8)*0.3; float pulse=cos(d*25.0-t*10.0+fi*1.5+organic*3.0)*exp(-abs(d-1.6+organic*0.3)*3.2)*0.2; col*=(1.0+membrane+pulse); float dendrite=sin(a*8.0+d*4.0+t*3.5+fi+organic)*exp(-r*0.25)*0.25; float synapse=cos(a*12.0+d*2.5+t*4.8+fi*2.0+organic*1.5)*exp(-r*0.35)*0.15; col+=dendrite*mutation*0.4+synapse*bio1*0.3;} col=pow(col*0.15,vec3(0.78)); float neural=sin(a*5.0+t*1.5)*cos(r*12.0-t*4.0)*exp(-r*0.5)*0.5; float plasma=sin(a*7.0+r*8.0+t*2.8)*cos(a*3.0+r*15.0-t*6.5)*exp(-r*0.7)*0.3; col*=vec3(i0,i1,i2)*(0.6+neural+plasma); vec4(col,1.0)', 2.4, 1.8, 1.6);


window.gl031h = () => glsl('vec2 p=_st*7.2-3.6; float t=time*0.09; float r=length(p); float a=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p; float chaos=sin(t*0.85)*0.38+cos(t*0.52)*0.24; float vortex=sin(t*1.1)*cos(t*0.75)*0.18; float storm=cos(t*0.48)*sin(t*0.92)*0.31; vec2 c=vec2(0.62+chaos*sin(t*0.18),-0.28+chaos*cos(t*0.29)); for(int i=0;i<18;i++){float fi=float(i)*0.17; float noise1=sin(z.x*3.8+t*1.5+fi)*cos(z.y*3.2+t*1.0+fi)*0.095; float noise2=cos(z.x*4.8+t*1.2+fi)*sin(z.y*4.2+t*1.8+fi)*0.075; float noise3=sin(z.x*2.5+t*1.35+fi+vortex)*cos(z.y*3.8+t*1.15+fi+storm)*0.068; float noise4=cos(z.x*5.5+t*0.75+fi+storm)*sin(z.y*5.0+t*2.2+fi+chaos)*0.052; vec2 turbulence=vec2(noise1+noise3*0.7,noise2+noise4*0.6); float phase=t*0.065+fi*0.48+length(z)*0.12; float morph_chaos=sin(phase*1.25+vortex)*cos(phase*0.85+storm)*0.095; float spiral=sin(phase*2.1+chaos)*0.04; mat2 morph=mat2(cos(phase)+noise1*0.35+morph_chaos,sin(phase)+noise2*0.28+spiral,-sin(phase)+noise3*0.22+spiral*1.3,cos(phase)+noise4*0.32+morph_chaos*0.8); z=morph*z+turbulence; float enzyme=sin(z.x*5.5+t*1.65+fi+vortex)*cos(z.y*4.8+t*1.25+fi+storm)*0.048; float metabolite=cos(z.x*6.2+t*1.45+fi+chaos)*sin(z.y*5.8+t*1.85+fi+vortex)*0.038; vec2 biochem=vec2(enzyme*sin(fi*2.2)+metabolite*cos(fi*1.9),enzyme*cos(fi*2.0)+metabolite*sin(fi*1.7))*0.82; z=vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y)+c+vec2(sin(t*0.75+fi+noise1*6.5+enzyme*3.2)*0.22,cos(t*0.55+fi+noise2*5.8+metabolite*2.8)*0.18)+biochem; if(dot(z,z)>9.5) break; float d=length(z); float organic=sin(d*9.5+t*3.8+fi)*cos(d*7.2+t*2.6+fi)*sin(d*5.8+t*2.9+fi+vortex)*0.48; vec3 bio1=0.5+0.5*sin(vec3(d*8.5+t*2.2+fi+organic,d*10.5+t*1.8+fi+organic+2.1,d*13.2+t*2.5+fi+organic+3.8)); vec3 bio2=0.5+0.5*cos(vec3(d*6.8+t*2.8+fi+organic*2.2+vortex,d*9.8+t*2.0+fi+organic*1.8+storm+2.9,d*11.8+t*2.4+fi+organic*2.1+enzyme+4.5)); vec3 bio3=0.5+0.5*sin(vec3(d*7.5+t*2.6+fi+organic*2.0+storm+1.8,d*11.2+t*2.1+fi+organic*1.6+chaos+4.2,d*13.8+t*1.9+fi+organic*2.4+metabolite+6.1)); vec3 bio4=0.5+0.5*cos(vec3(d*8.8+t*1.7+fi+organic*2.5+chaos+2.3,d*10.0+t*2.9+fi+organic*1.9+vortex+3.6,d*12.5+t*1.5+fi+organic*2.3+storm+5.8)); vec3 mutation=mix(mix(bio1,bio2,sin(t*3.2+fi+organic*3.8)*0.5+0.5),mix(bio3,bio4,cos(t*2.8+fi+organic*3.2+vortex)*0.5+0.5),sin(t*2.2+storm)*0.5+0.5); col+=mutation*exp(-d*0.38)*(0.98-fi*0.042); float membrane=sin(d*22.0-t*7.5+fi+organic*2.5)*exp(-abs(d-2.5+organic*0.6)*3.2)*0.38; float pulse=cos(d*30.0-t*12.5+fi*1.8+organic*3.8)*exp(-abs(d-1.8+organic*0.4)*3.8)*0.28; float vessel=sin(d*35.0-t*14.2+fi*1.4+organic*3.2+vortex)*exp(-abs(d-1.3+vortex*0.5)*4.1)*0.19; float capillary=cos(d*42.0-t*16.8+fi*1.1+organic*2.9+storm)*exp(-abs(d-0.9+storm*0.35)*4.5)*0.12; col*=(1.0+membrane+pulse+vessel+capillary); float dendrite=sin(a*10.0+d*5.2+t*4.2+fi+organic)*exp(-r*0.28)*0.32; float synapse=cos(a*15.0+d*3.8+t*5.8+fi*2.5+organic*1.8)*exp(-r*0.38)*0.22; float axon=sin(a*18.0+d*4.5+t*6.5+fi*1.6+vortex*2.2)*exp(-r*0.32)*0.16; float neuron=cos(a*22.0+d*3.2+t*7.8+fi*2.1+storm*1.9)*exp(-r*0.42)*0.11; col+=dendrite*mutation*0.52+synapse*bio1*0.38+axon*bio2*0.28+neuron*bio3*0.18;} col=pow(col*0.125,vec3(0.74)); float neural=sin(a*6.5+t*1.9)*cos(r*15.0-t*5.2)*exp(-r*0.52)*0.62; float plasma=sin(a*8.5+r*10.5+t*3.5)*cos(a*4.2+r*18.5-t*8.2)*exp(-r*0.75)*0.38; float field=sin(a*11.0+r*7.8+t*3.8)*cos(a*5.5+r*22.0-t*9.5)*exp(-r*0.88)*0.22; float quantum=cos(a*13.5+r*6.2+t*4.5)*sin(a*7.8+r*25.5-t*11.2)*exp(-r*1.05)*0.15; col*=vec3(i0,i1,i2)*(0.52+neural+plasma+field+quantum); vec4(col,1.0)', 2.8, 2.1, 1.9);


window.gl031i = () => glsl('vec2 p=_st*7.0-3.5; float t=time*0.09; float r=length(p); float a=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p; float chaos=sin(t*0.9)*0.35+cos(t*0.6)*0.25; float vortex=sin(t*1.2)*cos(t*0.8)*0.22; float storm=cos(t*0.55)*sin(t*1.0)*0.32; vec2 c=vec2(0.65+chaos*sin(t*0.2),-0.26+chaos*cos(t*0.3)); for(int i=0;i<19;i++){float fi=float(i)*0.16; float noise1=sin(z.x*4.2+t*1.8+fi)*cos(z.y*3.8+t*1.2+fi)*0.1; float noise2=cos(z.x*5.0+t*1.5+fi)*sin(z.y*4.5+t*2.0+fi)*0.08; float noise3=sin(z.x*2.8+t*1.6+fi+vortex)*cos(z.y*4.0+t*1.4+fi+storm)*0.07; vec2 turbulence=vec2(noise1+noise3*0.7,noise2+noise3*0.6); float phase=t*0.07+fi*0.5+length(z)*0.12; float morph=sin(phase*1.3+vortex)*cos(phase*1.0+storm)*0.1; mat2 transform=mat2(cos(phase)+noise1*0.35+morph,sin(phase)+noise2*0.3,-sin(phase)+noise3*0.25,cos(phase)+noise1*0.3+morph*0.8); z=transform*z+turbulence; float enzyme=sin(z.x*5.8+t*1.9+fi+vortex)*cos(z.y*5.2+t*1.6+fi+storm)*0.05; float metabolite=cos(z.x*6.5+t*1.7+fi+chaos)*sin(z.y*6.0+t*2.3+fi+vortex)*0.04; vec2 biochem=vec2(enzyme*sin(fi*2.5)+metabolite*cos(fi*2.0),enzyme*cos(fi*2.2)+metabolite*sin(fi*1.8))*0.8; z=vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y)+c+vec2(sin(t*0.8+fi+noise1*7.0+enzyme*3.5)*0.25,cos(t*0.6+fi+noise2*6.5+metabolite*3.0)*0.2)+biochem; if(dot(z,z)>10.0) break; float d=length(z); float organic=sin(d*10.0+t*4.0+fi)*cos(d*7.5+t*3.0+fi)*sin(d*6.0+t*3.5+fi+vortex)*0.5; vec3 bio1=0.5+0.5*sin(vec3(d*9.0+t*2.5+fi+organic,d*11.0+t*2.0+fi+organic+2.2,d*13.5+t*2.8+fi+organic+3.8)); vec3 bio2=0.5+0.5*cos(vec3(d*7.5+t*3.0+fi+organic*2.2+vortex,d*10.5+t*2.3+fi+organic*1.8+storm+2.8,d*13.0+t*2.6+fi+organic*2.5+enzyme+4.5)); vec3 bio3=0.5+0.5*sin(vec3(d*8.2+t*2.8+fi+organic*2.0+storm+1.8,d*12.0+t*2.4+fi+organic*1.6+chaos+4.0,d*14.5+t*2.2+fi+organic*2.8+metabolite+6.0)); vec3 mutation=mix(mix(bio1,bio2,sin(t*3.5+fi+organic*4.0)*0.5+0.5),bio3,cos(t*3.0+fi+organic*3.5+vortex)*0.5+0.5); col+=mutation*exp(-d*0.4)*(1.0-fi*0.045); float membrane=sin(d*22.0-t*8.0+fi+organic*2.8)*exp(-abs(d-2.8+organic*0.7)*3.5)*0.4; float pulse=cos(d*32.0-t*13.0+fi*1.8+organic*4.2)*exp(-abs(d-2.0+organic*0.4)*4.0)*0.3; float vessel=sin(d*40.0-t*16.0+fi*1.5+organic*3.8+vortex)*exp(-abs(d-1.4+vortex*0.6)*4.8)*0.2; col*=(1.0+membrane+pulse+vessel); float dendrite=sin(a*10.0+d*5.5+t*4.5+fi+organic)*exp(-r*0.3)*0.35; float synapse=cos(a*15.0+d*4.2+t*6.0+fi*2.5+organic*2.0)*exp(-r*0.4)*0.25; float axon=sin(a*20.0+d*4.8+t*7.2+fi*1.8+vortex*2.5)*exp(-r*0.35)*0.2; col+=dendrite*mutation*0.55+synapse*bio1*0.4+axon*bio2*0.3;} col=pow(col*0.12,vec3(0.72)); float neural=sin(a*7.0+t*2.2)*cos(r*15.0-t*5.8)*exp(-r*0.55)*0.65; float plasma=sin(a*9.5+r*11.0+t*3.8)*cos(a*4.5+r*18.0-t*8.5)*exp(-r*0.75)*0.4; float field=sin(a*12.0+r*8.5+t*4.2)*cos(a*6.0+r*22.0-t*10.5)*exp(-r*0.9)*0.25; col*=vec3(i0,i1,i2)*(0.5+neural+plasma+field); vec4(col,1.0)', 2.9, 2.2, 2.0);


window.gl031j = () => glsl('vec2 p=_st*6.0-3.0; float t=time*0.06; vec3 col=vec3(0.0); vec2 z=p; vec2 c=vec2(0.6,-0.3); for(int i=0;i<15;i++){float fi=float(i)*0.2; z=vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y)+c; if(dot(z,z)>4.0) break; float d=length(z); vec3 bio=0.5+0.5*sin(vec3(d*4.0+t*0.8+fi,d*5.0+t*0.6+fi+1.2,d*6.0+t*1.0+fi+2.4)); col+=bio*exp(-d*0.2)*(0.8-fi*0.04);} col=pow(col*0.2,vec3(0.85)); col*=vec3(i0,i1,i2); vec4(col,1.0)', 2.0, 1.5, 1.2).mult(osc(10,0.15,3).kaleid(6).rotate(()=>time*0.12)).add(src(o0).scale(1.015).rotate(0.015).brightness(-0.025),0.88).blur(()=>Math.sin(time*0.8)*0.012+0.008).saturate(1.5).contrast(1.25).modulate(noise(4,0.25).rotate(()=>time*0.08),0.05).diff(src(o0).scale(0.985).rotate(-0.008),0.06).add(osc(15,0.05,1.5).mult(noise(2,0.1)).brightness(0.3).contrast(0.8),0.15).modulate(src(o0).scale(0.98).rotate(0.02),0.03);


// ========================================
// GL032 - Happy Accident avec éclairage miroir
// ========================================

// GL032: écosystème cellulaire avec croissance, reproduction, mitose, flagelles, noyaux, chromatine, communication, conscience - 12 itérations

window.gl032 = () => glsl('vec2 p=_st*3.0; float t=time*0.1; vec3 pos=vec3(p,t); pos=abs(fract(pos*2.0)-0.5); pos*=mat3(cos(t),sin(t),0.0,-sin(t),cos(t),0.0,0.0,0.0,1.0); float d=min(length(pos.xy)-0.15,min(pos.x,pos.y)+0.01); vec3 c=0.5+0.5*sin(pos*8.0+t*2.0+vec3(0,2,4)); return vec4(c/(1.0+d*d*20.0),1.0);');


window.gl032b = () => glsl('vec2 p=_st*2.0; vec3 pos=vec3(p,time*0.1); pos=abs(fract(pos)-0.5); float d=min(length(pos.xy)-0.2,min(pos.x,pos.y)); vec3 c=0.5+0.5*sin(pos.z*5.0+vec3(0,2,4)+time); return vec4(c/(1.0+abs(d)*8.0),1.0);');


window.gl032c = () => glsl('vec2 p=(_st-0.5)*4.0; float t=time*0.4; vec3 col=vec3(0.0); float r=length(p); float noise=sin(p.x*3.0+t)*sin(p.y*3.0+t*1.2)*0.3; vec2 q=p+vec2(cos(t+r*2.0),sin(t*1.3+r*2.0))*noise; float plasma=sin(q.x*2.0+t)*sin(q.y*2.0+t*0.8)*sin((q.x+q.y)*1.5+t*1.5); col.r=0.5+0.5*sin(plasma*3.0+t); col.g=0.5+0.5*sin(plasma*3.0+t+2.0); col.b=0.5+0.5*sin(plasma*3.0+t+4.0); col*=(1.0-smoothstep(1.0,2.0,r)); vec4(col*vec3(i0,i1,i2),1.0)', 1.2, 0.9, 1.1);


window.gl032d = () => glsl('vec2 p=(_st-0.5)*5.0; float t=time*0.3; vec3 col=vec3(0.0); vec2 uv=p; for(int i=0;i<4;i++){float fi=float(i)*0.5; uv=abs(uv*1.3)-vec2(1.0+sin(t*0.7+fi)*0.3,0.8+cos(t*0.5+fi)*0.2); float d=min(uv.x,uv.y); float tunnel=exp(-abs(d)*3.0); vec2 flow=vec2(sin(uv.x*2.0+t*2.0+fi),cos(uv.y*2.0+t*1.5+fi))*tunnel*0.4; uv+=flow; float plasma=sin(length(uv)*4.0+t*3.0+fi)*tunnel; col+=vec3(sin(plasma*2.0+fi),sin(plasma*2.0+fi+2.0),sin(plasma*2.0+fi+4.0))*tunnel*(1.0-fi*0.2);} col=pow(col*0.4,vec3(0.9)); float vortex=atan(p.y,p.x)*3.0+length(p)*2.0-t*4.0; col*=vec3(i0,i1,i2)*(0.8+sin(vortex)*0.3); vec4(col,1.0)', 2.1, 1.3, 0.7);


window.gl032e = () => glsl('vec2 p=(_st-0.5)*6.0; float t=time*0.25; vec3 col=vec3(0.0); vec2 uv=p; float angle=atan(p.y,p.x); for(int i=0;i<6;i++){float fi=float(i)*0.4; mat2 rot=mat2(cos(t*0.3+fi),sin(t*0.3+fi),-sin(t*0.3+fi),cos(t*0.3+fi)); uv=rot*uv; uv=abs(uv*1.2)-vec2(0.9+sin(t*0.6+fi)*0.3,0.7+cos(t*0.4+fi)*0.2); float box=max(abs(uv.x)-0.1,abs(uv.y)-0.1); float energy=exp(-abs(box)*4.0); vec2 wave=vec2(sin(uv.x*3.0+t*2.5+fi),cos(uv.y*3.0+t*1.8+fi))*energy*0.3; uv+=wave; float field=sin(length(uv)*5.0+t*4.0+fi)*energy; vec3 spectrum=vec3(sin(field*1.5+fi),sin(field*1.5+fi+2.1),sin(field*1.5+fi+4.2))*0.5+0.5; col+=spectrum*energy*(0.9-fi*0.12); float pulse=sin(angle*2.0+t*3.0+length(uv)*2.0)*0.2+0.8; col*=pulse;} col=pow(col*0.3,vec3(0.88)); col*=vec3(i0,i1,i2); vec4(col,1.0)', 1.6, 0.9, 1.8);


window.gl032f = () => glsl('vec2 p=(_st-0.5)*7.0; float t=time*0.2; vec3 col=vec3(0.0); vec2 uv=p; float angle=atan(p.y,p.x); float r=length(p); for(int i=0;i<8;i++){float fi=float(i)*0.35; float phase=t*0.4+fi*1.2; mat2 rot1=mat2(cos(phase),sin(phase),-sin(phase),cos(phase)); mat2 rot2=mat2(cos(-phase*0.7),sin(-phase*0.7),-sin(-phase*0.7),cos(-phase*0.7)); uv=rot1*uv; uv=abs(uv*1.25)-vec2(0.8+sin(t*0.7+fi)*0.4,0.6+cos(t*0.5+fi)*0.3); uv=rot2*uv; float box=max(abs(uv.x)-0.08,abs(uv.y)-0.08); float circle=length(uv)-0.15; float shape=min(box,circle); float energy=exp(-abs(shape)*5.0); vec2 flow1=vec2(sin(uv.x*4.0+t*3.0+fi),cos(uv.y*4.0+t*2.2+fi))*energy*0.25; vec2 flow2=vec2(cos(uv.x*2.5+t*1.8+fi*2.0),sin(uv.y*2.5+t*2.8+fi*1.5))*energy*0.15; uv+=flow1+flow2; float field1=sin(length(uv)*6.0+t*5.0+fi)*energy; float field2=cos(length(uv)*8.0+t*3.5+fi*1.5)*energy; vec3 spec1=vec3(sin(field1*2.0+fi),sin(field1*2.0+fi+2.1),sin(field1*2.0+fi+4.2))*0.5+0.5; vec3 spec2=vec3(cos(field2*1.5+fi+1.0),cos(field2*1.5+fi+3.1),cos(field2*1.5+fi+5.2))*0.5+0.5; vec3 blend=mix(spec1,spec2,sin(t*2.0+fi)*0.5+0.5); col+=blend*energy*(0.85-fi*0.08); float pulse1=sin(angle*3.0+t*4.0+length(uv)*3.0)*0.15+0.85; float pulse2=cos(angle*2.0+t*2.5+r*5.0)*0.1+0.9; col*=pulse1*pulse2; float interference=sin(uv.x*12.0+uv.y*8.0+t*6.0)*energy*0.2; col+=interference*blend*0.4;} col=pow(col*0.25,vec3(0.85)); float plasma=sin(angle*4.0+r*6.0+t*3.0)*exp(-r*0.4)*0.3; col*=vec3(i0,i1,i2)*(0.8+plasma); vec4(col,1.0)', 1.8, 1.1, 2.0);


window.gl032g = () => glsl('vec2 p=(_st-0.5)*8.0; float t=time*0.15; vec3 col=vec3(0.0); vec2 uv=p; float angle=atan(p.y,p.x); float r=length(p); float chaos1=sin(t*0.6)*cos(t*0.8)*0.4; float chaos2=cos(t*0.4)*sin(t*1.1)*0.3; for(int i=0;i<10;i++){float fi=float(i)*0.3; float drift=sin(t*0.2+fi)*0.15; vec2 cell=vec2(sin(uv.x*2.0+t*0.8+fi)*cos(uv.y*1.8+t*0.6+fi),cos(uv.x*1.5+t*1.2+fi)*sin(uv.y*2.2+t*0.9+fi))*0.12; uv+=cell; float morph1=t*0.3+fi*1.1+chaos1*2.0; float morph2=t*0.5+fi*0.8+chaos2*1.5; mat2 fluid1=mat2(cos(morph1)+cell.x*0.4,sin(morph1)+cell.y*0.3,-sin(morph1)+cell.y*0.2,cos(morph1)+cell.x*0.35); mat2 fluid2=mat2(cos(morph2*0.6)+cell.y*0.25,sin(morph2*0.6)+cell.x*0.2,-sin(morph2*0.6)+cell.x*0.15,cos(morph2*0.6)+cell.y*0.3); uv=fluid1*uv; uv=abs(uv*1.15)-vec2(0.7+sin(t*0.9+fi+chaos1)*0.5,0.5+cos(t*0.7+fi+chaos2)*0.4); uv=fluid2*uv; float amoeba=length(uv)-0.12-sin(uv.x*5.0+uv.y*4.0+t*4.0+fi)*0.04; float tentacle=max(abs(uv.x*0.8+uv.y*0.6)-0.06,abs(uv.y*0.9-uv.x*0.4)-0.08); float organism=min(amoeba,tentacle)+sin(length(uv)*8.0+t*6.0+fi)*0.02; float life=exp(-abs(organism)*6.0); vec2 current1=vec2(sin(uv.x*5.0+t*2.8+fi+chaos1*3.0),cos(uv.y*4.5+t*2.1+fi+chaos2*2.5))*life*0.2; vec2 current2=vec2(cos(uv.x*3.5+t*1.9+fi*1.8+chaos2*2.0),sin(uv.y*3.0+t*3.2+fi*1.3+chaos1*1.8))*life*0.15; vec2 vortex=vec2(sin(angle*3.0+r*4.0+t*3.5+fi),cos(angle*2.5+r*3.5+t*2.8+fi))*life*0.1; uv+=current1+current2+vortex; float bio1=sin(length(uv)*7.0+t*4.5+fi)*life; float bio2=cos(length(uv)*9.0+t*3.2+fi*1.4)*life; vec3 dna1=vec3(sin(bio1*2.5+fi+chaos1),sin(bio1*2.5+fi+chaos1+2.3),sin(bio1*2.5+fi+chaos1+4.6))*0.5+0.5; vec3 dna2=vec3(cos(bio2*2.0+fi+chaos2+1.2),cos(bio2*2.0+fi+chaos2+3.5),cos(bio2*2.0+fi+chaos2+5.8))*0.5+0.5; vec3 enzyme=mix(dna1,dna2,sin(t*1.8+fi+chaos1*2.0+chaos2*1.5)*0.5+0.5); col+=enzyme*life*(0.8-fi*0.06); float mitosis=sin(angle*4.0+t*3.8+length(uv)*4.0+chaos1*3.0)*0.12+0.88; float cytoplasm=cos(angle*3.5+t*2.6+r*6.0+chaos2*2.5)*0.08+0.92; col*=mitosis*cytoplasm; float symbiosis=sin(uv.x*15.0+uv.y*12.0+t*7.0+fi+chaos1*4.0)*cos(uv.x*10.0-uv.y*8.0+t*5.5+fi+chaos2*3.0)*life*0.25; col+=symbiosis*enzyme*0.5;} col=pow(col*0.2,vec3(0.8)); float ecosystem=sin(angle*6.0+r*5.0+t*2.2+chaos1*2.0)*cos(angle*4.0+r*8.0-t*4.8+chaos2*1.8)*exp(-r*0.3)*0.4; col*=vec3(i0,i1,i2)*(0.7+ecosystem); vec4(col,1.0)', 2.0, 1.4, 1.7);


window.gl032h = () => glsl('vec2 p=(_st-0.5)*9.0; float t=time*0.18; vec3 col=vec3(0.0); vec2 uv=p; float angle=atan(p.y,p.x); float r=length(p); float chaos1=sin(t*0.7)*cos(t*0.95)*0.45; float chaos2=cos(t*0.5)*sin(t*1.3)*0.35; float chaos3=sin(t*0.3)*cos(t*1.7)*0.28; for(int i=0;i<14;i++){float fi=float(i)*0.25; float drift=sin(t*0.25+fi)*0.18; vec2 cell=vec2(sin(uv.x*2.5+t*1.0+fi)*cos(uv.y*2.2+t*0.8+fi),cos(uv.x*1.8+t*1.5+fi)*sin(uv.y*2.8+t*1.2+fi))*0.15; vec2 nucleus=vec2(sin(uv.x*3.2+t*1.8+fi*1.5)*cos(uv.y*3.0+t*1.3+fi*1.2),cos(uv.x*2.8+t*2.2+fi*0.8)*sin(uv.y*3.5+t*1.7+fi*1.1))*0.08; uv+=cell+nucleus*0.6; float morph1=t*0.35+fi*1.3+chaos1*2.5; float morph2=t*0.6+fi*0.9+chaos2*1.8; float morph3=t*0.45+fi*1.1+chaos3*2.2; mat2 fluid1=mat2(cos(morph1)+cell.x*0.5,sin(morph1)+cell.y*0.35,-sin(morph1)+cell.y*0.25,cos(morph1)+cell.x*0.4); mat2 fluid2=mat2(cos(morph2*0.7)+cell.y*0.3,sin(morph2*0.7)+cell.x*0.25,-sin(morph2*0.7)+cell.x*0.2,cos(morph2*0.7)+cell.y*0.35); mat2 fluid3=mat2(cos(morph3*0.5)+nucleus.x*0.2,sin(morph3*0.5)+nucleus.y*0.15,-sin(morph3*0.5)+nucleus.y*0.1,cos(morph3*0.5)+nucleus.x*0.25); uv=fluid1*uv; uv=abs(uv*1.2)-vec2(0.75+sin(t*1.1+fi+chaos1)*0.55,0.55+cos(t*0.85+fi+chaos2)*0.45); uv=fluid2*uv; uv=abs(uv*0.95)+vec2(sin(t*0.7+fi*1.2+chaos3)*0.3,cos(t*0.9+fi*0.8+chaos1)*0.25); uv=fluid3*uv; float amoeba=length(uv)-0.14-sin(uv.x*6.0+uv.y*5.0+t*5.0+fi)*0.05; float tentacle=max(abs(uv.x*0.9+uv.y*0.7)-0.07,abs(uv.y*1.0-uv.x*0.45)-0.09); float virus=length(uv-vec2(sin(fi*2.0)*0.4,cos(fi*1.8)*0.35))-0.06-sin(length(uv)*12.0+t*8.0+fi*2.5)*0.02; float bacteria=min(abs(uv.x*1.2)-0.05,abs(uv.y*1.1)-0.04)+cos(length(uv)*10.0+t*7.0+fi*1.8)*0.015; float organism=min(min(amoeba,tentacle),min(virus,bacteria))+sin(length(uv)*9.0+t*7.0+fi)*0.025; float life=exp(-abs(organism)*7.5); vec2 current1=vec2(sin(uv.x*6.0+t*3.2+fi+chaos1*3.5),cos(uv.y*5.5+t*2.5+fi+chaos2*3.0))*life*0.25; vec2 current2=vec2(cos(uv.x*4.5+t*2.3+fi*2.0+chaos2*2.5),sin(uv.y*4.0+t*3.8+fi*1.5+chaos1*2.2))*life*0.18; vec2 current3=vec2(sin(uv.x*7.0+t*4.0+fi*0.7+chaos3*2.8),cos(uv.y*6.5+t*3.5+fi*1.3+chaos3*2.0))*life*0.12; vec2 vortex=vec2(sin(angle*3.5+r*5.0+t*4.2+fi),cos(angle*3.0+r*4.5+t*3.5+fi))*life*0.12; vec2 spiral=vec2(sin(angle*5.0+r*3.5+t*5.5+fi*1.5),cos(angle*4.5+r*4.0+t*4.8+fi*1.2))*life*0.08; uv+=current1+current2+current3+vortex+spiral; float bio1=sin(length(uv)*8.0+t*5.2+fi)*life; float bio2=cos(length(uv)*10.5+t*3.8+fi*1.6)*life; float bio3=sin(length(uv)*12.0+t*4.5+fi*0.9)*life; vec3 dna1=vec3(sin(bio1*3.0+fi+chaos1),sin(bio1*3.0+fi+chaos1+2.5),sin(bio1*3.0+fi+chaos1+5.0))*0.5+0.5; vec3 dna2=vec3(cos(bio2*2.5+fi+chaos2+1.5),cos(bio2*2.5+fi+chaos2+4.0),cos(bio2*2.5+fi+chaos2+6.5))*0.5+0.5; vec3 rna=vec3(sin(bio3*2.2+fi+chaos3+0.8),cos(bio3*2.2+fi+chaos3+3.3),sin(bio3*2.2+fi+chaos3+5.8))*0.5+0.5; vec3 enzyme=mix(mix(dna1,dna2,sin(t*2.2+fi+chaos1*2.5+chaos2*2.0)*0.5+0.5),rna,cos(t*1.8+fi+chaos3*2.2)*0.5+0.5); float protein=sin(length(uv)*15.0+t*6.5+fi*2.2+chaos1*3.5)*cos(length(uv)*12.0+t*5.0+fi*1.8+chaos2*2.8)*life*0.3; vec3 cell_color=enzyme*(1.0+protein); col+=cell_color*life*(0.85-fi*0.055); float mitosis=sin(angle*5.0+t*4.5+length(uv)*5.0+chaos1*3.5)*0.15+0.85; float cytoplasm=cos(angle*4.5+t*3.2+r*7.5+chaos2*3.0)*0.1+0.9; float membrane=sin(angle*6.0+t*5.8+r*9.0+chaos3*2.5)*0.08+0.92; col*=mitosis*cytoplasm*membrane; float symbiosis=sin(uv.x*18.0+uv.y*15.0+t*8.5+fi+chaos1*5.0)*cos(uv.x*12.0-uv.y*10.0+t*6.8+fi+chaos2*4.0)*life*0.3; float metabolism=cos(uv.x*20.0+uv.y*17.0+t*9.2+fi*1.5+chaos3*4.5)*sin(uv.x*14.0-uv.y*11.0+t*7.5+fi*0.8+chaos1*3.8)*life*0.2; col+=symbiosis*enzyme*0.6+metabolism*rna*0.4; float neural=sin(r*12.0+angle*8.0+t*6.0+chaos1*3.0)*exp(-r*0.4)*life*0.35; col+=neural*dna2*0.3;} col=pow(col*0.18,vec3(0.75)); float ecosystem=sin(angle*7.0+r*6.0+t*2.8+chaos1*2.5)*cos(angle*5.0+r*9.5-t*5.5+chaos2*2.2)*exp(-r*0.35)*0.5; float biosphere=cos(angle*9.0+r*7.5+t*3.5+chaos3*2.0)*sin(angle*6.5+r*11.0-t*6.2+chaos1*1.8)*exp(-r*0.4)*0.3; col*=vec3(i0,i1,i2)*(0.65+ecosystem+biosphere); vec4(col,1.0)', 2.3, 1.6, 1.9);


window.gl032i = () => glsl('vec2 p=(_st-0.5)*10.5; p=mat2(cos(0.1),-sin(0.1),sin(0.1),cos(0.1))*p; float t=time*0.22; vec3 col=vec3(0.0); vec2 uv=p; float angle=atan(p.y,p.x)+sin(t*0.2)*0.15; float r=length(p)+cos(t*0.3)*0.2; float chaos1=sin(t*0.85)*cos(t*1.15)*0.52; float chaos2=cos(t*0.62)*sin(t*1.55)*0.42; float chaos3=sin(t*0.38)*cos(t*2.1)*0.35; float chaos4=cos(t*0.28)*sin(t*1.85)*0.28; float chaos5=sin(t*0.95)*cos(t*0.72)*0.22; for(int j=0;j<2;j++){float fj=float(j)*3.5; vec2 layer=uv*pow(0.75,fj); for(int i=0;i<12;i++){float fi=float(i)*0.28+fj*0.15; float pulse=sin(t*0.32+fi+fj)*0.22; vec2 cell=vec2(sin(layer.x*3.2+t*1.3+fi)*cos(layer.y*2.8+t*1.1+fi),cos(layer.x*2.2+t*1.8+fi)*sin(layer.y*3.5+t*1.5+fi))*0.18; vec2 nucleus=vec2(sin(layer.x*4.0+t*2.2+fi*1.8)*cos(layer.y*3.8+t*1.7+fi*1.5),cos(layer.x*3.5+t*2.7+fi*1.2)*sin(layer.y*4.2+t*2.1+fi*1.4))*0.12; vec2 mitochondria=vec2(sin(layer.x*5.5+t*3.1+fi*0.8)*cos(layer.y*5.0+t*2.5+fi*0.6),cos(layer.x*4.8+t*3.5+fi*1.0)*sin(layer.y*5.8+t*2.9+fi*0.9))*0.08; layer+=cell+nucleus*0.7+mitochondria*0.5; float morph1=t*0.42+fi*1.5+chaos1*3.0+fj*0.5; float morph2=t*0.72+fi*1.1+chaos2*2.2+fj*0.3; float morph3=t*0.55+fi*1.3+chaos3*2.7+fj*0.4; float morph4=t*0.38+fi*0.9+chaos4*2.0+fj*0.6; mat2 fluid1=mat2(cos(morph1)+cell.x*0.6,sin(morph1)+cell.y*0.42,-sin(morph1)+cell.y*0.32,cos(morph1)+cell.x*0.48); mat2 fluid2=mat2(cos(morph2*0.8)+nucleus.y*0.35,sin(morph2*0.8)+nucleus.x*0.28,-sin(morph2*0.8)+nucleus.x*0.22,cos(morph2*0.8)+nucleus.y*0.38); mat2 fluid3=mat2(cos(morph3*0.6)+mitochondria.x*0.25,sin(morph3*0.6)+mitochondria.y*0.18,-sin(morph3*0.6)+mitochondria.y*0.15,cos(morph3*0.6)+mitochondria.x*0.3); mat2 fluid4=mat2(cos(morph4*1.2)+pulse*0.15,sin(morph4*1.2)+pulse*0.12,-sin(morph4*1.2)+pulse*0.1,cos(morph4*1.2)+pulse*0.18); layer=fluid1*layer; layer=vec2(abs(layer.x*1.3)-0.82+sin(t*1.3+fi+chaos1)*0.62,abs(layer.y*1.25)-0.65+cos(t*1.05+fi+chaos2)*0.52); layer=fluid2*layer; layer=vec2(abs(layer.x*0.98)+sin(t*0.85+fi*1.4+chaos3)*0.35,abs(layer.y*1.02)+cos(t*1.1+fi*1.1+chaos4)*0.32); layer=fluid3*layer; layer=fluid4*(layer+vec2(sin(angle*2.5+r*3.0+t*2.8+fi),cos(angle*3.2+r*2.5+t*2.2+fi))*0.1); float amoeba=length(layer)-0.16-sin(layer.x*7.5+layer.y*6.5+t*6.2+fi)*0.065; float tentacle=max(abs(layer.x*1.05+layer.y*0.82)-0.085,abs(layer.y*1.15-layer.x*0.52)-0.105); float virus=length(layer-vec2(sin(fi*2.5+fj)*0.48,cos(fi*2.2+fj)*0.42))-0.075-sin(length(layer)*15.0+t*10.0+fi*3.0)*0.025; float bacteria=min(abs(layer.x*1.4)-0.062,abs(layer.y*1.3)-0.052)+cos(length(layer)*12.5+t*8.5+fi*2.2)*0.018; float parasite=length(layer-vec2(cos(fi*3.0+t)*0.35,sin(fi*2.8+t)*0.3))-0.045-cos(length(layer)*18.0+t*11.0+fi*2.5)*0.015; float organism=min(min(min(amoeba,tentacle),min(virus,bacteria)),parasite)+sin(length(layer)*11.0+t*8.5+fi)*0.032; float life=exp(-abs(organism)*9.5); vec2 current1=vec2(sin(layer.x*7.5+t*3.8+fi+chaos1*4.2),cos(layer.y*7.0+t*3.2+fi+chaos2*3.8))*life*0.32; vec2 current2=vec2(cos(layer.x*5.5+t*2.8+fi*2.3+chaos2*3.2),sin(layer.y*5.0+t*4.5+fi*1.8+chaos1*2.8))*life*0.22; vec2 current3=vec2(sin(layer.x*8.5+t*4.8+fi*0.9+chaos3*3.5),cos(layer.y*8.0+t*4.2+fi*1.5+chaos3*2.5))*life*0.15; vec2 current4=vec2(cos(layer.x*6.5+t*3.5+fi*1.2+chaos4*3.0),sin(layer.y*6.0+t*5.2+fi*1.7+chaos4*2.2))*life*0.1; vec2 vortex=vec2(sin(angle*4.2+r*6.0+t*5.0+fi+fj),cos(angle*3.8+r*5.5+t*4.2+fi+fj))*life*0.15; vec2 spiral=vec2(sin(angle*6.0+r*4.5+t*6.5+fi*1.8+fj),cos(angle*5.5+r*5.0+t*5.8+fi*1.5+fj))*life*0.1; vec2 whirlpool=vec2(sin(angle*7.5+r*3.8+t*7.2+fi*0.7+chaos5),cos(angle*7.0+r*4.2+t*6.8+fi*0.9+chaos5))*life*0.08; layer+=current1+current2+current3+current4+vortex+spiral+whirlpool; float bio1=sin(length(layer)*9.5+t*6.2+fi+fj)*life; float bio2=cos(length(layer)*12.5+t*4.8+fi*1.9+fj)*life; float bio3=sin(length(layer)*14.5+t*5.5+fi*1.2+fj)*life; float bio4=cos(length(layer)*11.0+t*6.8+fi*0.8+fj)*life; vec3 dna1=vec3(sin(bio1*3.5+fi+chaos1),sin(bio1*3.5+fi+chaos1+2.8),sin(bio1*3.5+fi+chaos1+5.5))*0.5+0.5; vec3 dna2=vec3(cos(bio2*3.0+fi+chaos2+1.8),cos(bio2*3.0+fi+chaos2+4.5),cos(bio2*3.0+fi+chaos2+7.2))*0.5+0.5; vec3 rna=vec3(sin(bio3*2.8+fi+chaos3+1.2),cos(bio3*2.8+fi+chaos3+4.0),sin(bio3*2.8+fi+chaos3+6.8))*0.5+0.5; vec3 mrna=vec3(cos(bio4*2.5+fi+chaos4+0.5),sin(bio4*2.5+fi+chaos4+3.2),cos(bio4*2.5+fi+chaos4+6.0))*0.5+0.5; vec3 enzyme=mix(mix(dna1,dna2,sin(t*2.8+fi+chaos1*3.0+chaos2*2.5)*0.5+0.5),mix(rna,mrna,cos(t*2.2+fi+chaos3*2.8+chaos4*2.2)*0.5+0.5),sin(t*1.5+chaos5*2.0)*0.5+0.5); float protein=sin(length(layer)*18.0+t*7.8+fi*2.5+chaos1*4.2)*cos(length(layer)*15.0+t*6.2+fi*2.0+chaos2*3.5)*life*0.38; float lipid=cos(length(layer)*20.0+t*8.5+fi*1.5+chaos3*3.8)*sin(length(layer)*16.5+t*7.0+fi*1.8+chaos4*3.2)*life*0.25; vec3 cell_color=enzyme*(1.0+protein+lipid*0.5); col+=cell_color*life*(0.9-fi*0.06)*pow(0.8,fj); float division=sin(angle*6.0+t*5.5+length(layer)*6.0+chaos1*4.0)*0.18+0.82; float cytoplasm=cos(angle*5.5+t*4.0+r*9.0+chaos2*3.5)*0.12+0.88; float membrane=sin(angle*7.0+t*6.8+r*11.0+chaos3*3.0)*0.1+0.9; float wall=cos(angle*8.0+t*7.5+r*13.0+chaos4*2.5)*0.08+0.92; col*=division*cytoplasm*membrane*wall; float symbiosis=sin(layer.x*22.0+layer.y*19.0+t*10.5+fi+chaos1*6.0)*cos(layer.x*15.0-layer.y*13.0+t*8.2+fi+chaos2*5.0)*life*0.35; float metabolism=cos(layer.x*25.0+layer.y*21.0+t*11.2+fi*1.8+chaos3*5.5)*sin(layer.x*17.0-layer.y*14.0+t*9.0+fi*1.2+chaos1*4.5)*life*0.25; float photosynthesis=sin(layer.x*28.0+layer.y*24.0+t*12.0+fi*0.8+chaos4*6.0)*cos(layer.x*19.0-layer.y*16.0+t*9.8+fi*1.5+chaos5*4.0)*life*0.15; col+=symbiosis*enzyme*0.7+metabolism*rna*0.5+photosynthesis*mrna*0.3; float neural=sin(r*15.0+angle*10.0+t*7.5+chaos1*3.8)*exp(-r*0.45)*life*0.42; float synaptic=cos(r*18.0+angle*12.0+t*8.2+chaos2*3.5)*exp(-r*0.5)*life*0.28; col+=neural*dna2*0.35+synaptic*rna*0.25;}} col=pow(col*0.15,vec3(0.7)); float ecosystem=sin(angle*8.5+r*7.5+t*3.5+chaos1*3.0)*cos(angle*6.5+r*11.5-t*6.8+chaos2*2.8)*exp(-r*0.38)*0.6; float biosphere=cos(angle*10.5+r*9.0+t*4.2+chaos3*2.5)*sin(angle*7.5+r*13.0-t*7.5+chaos1*2.2)*exp(-r*0.42)*0.35; float atmosphere=sin(angle*12.0+r*6.5+t*5.0+chaos4*2.2)*cos(angle*9.0+r*10.0-t*8.2+chaos5*2.0)*exp(-r*0.48)*0.2; col*=vec3(i0,i1,i2)*(0.55+ecosystem+biosphere+atmosphere); col=mix(col,vec3(length(col))*0.3,0.02); vec4(col,1.0)', 2.5, 1.8, 2.1);


window.gl032j = () => glsl('vec2 p=(_st-0.5)*10.5; p=mat2(cos(0.1),-sin(0.1),sin(0.1),cos(0.1))*p; float t=time*0.22; vec3 col=vec3(0.0); vec2 uv=p; float angle=atan(p.y,p.x)+sin(t*0.2)*0.15; float r=length(p)+cos(t*0.3)*0.2; float chaos1=sin(t*0.85)*cos(t*1.15)*0.52; float chaos2=cos(t*0.62)*sin(t*1.55)*0.42; float chaos3=sin(t*0.38)*cos(t*2.1)*0.35; float chaos4=cos(t*0.28)*sin(t*1.85)*0.28; float chaos5=sin(t*0.95)*cos(t*0.72)*0.22; for(int j=0;j<2;j++){float fj=float(j)*3.5; vec2 layer=uv*pow(0.75,fj); for(int i=0;i<12;i++){float fi=float(i)*0.28+fj*0.15; float pulse=sin(t*0.32+fi+fj)*0.22; vec2 cell=vec2(sin(layer.x*3.2+t*1.3+fi)*cos(layer.y*2.8+t*1.1+fi),cos(layer.x*2.2+t*1.8+fi)*sin(layer.y*3.5+t*1.5+fi))*0.18; vec2 nucleus=vec2(sin(layer.x*4.0+t*2.2+fi*1.8)*cos(layer.y*3.8+t*1.7+fi*1.5),cos(layer.x*3.5+t*2.7+fi*1.2)*sin(layer.y*4.2+t*2.1+fi*1.4))*0.12; vec2 mitochondria=vec2(sin(layer.x*5.5+t*3.1+fi*0.8)*cos(layer.y*5.0+t*2.5+fi*0.6),cos(layer.x*4.8+t*3.5+fi*1.0)*sin(layer.y*5.8+t*2.9+fi*0.9))*0.08; layer+=cell+nucleus*0.7+mitochondria*0.5; float morph1=t*0.42+fi*1.5+chaos1*3.0+fj*0.5; float morph2=t*0.72+fi*1.1+chaos2*2.2+fj*0.3; float morph3=t*0.55+fi*1.3+chaos3*2.7+fj*0.4; float morph4=t*0.38+fi*0.9+chaos4*2.0+fj*0.6; mat2 fluid1=mat2(cos(morph1)+cell.x*0.6,sin(morph1)+cell.y*0.42,-sin(morph1)+cell.y*0.32,cos(morph1)+cell.x*0.48); mat2 fluid2=mat2(cos(morph2*0.8)+nucleus.y*0.35,sin(morph2*0.8)+nucleus.x*0.28,-sin(morph2*0.8)+nucleus.x*0.22,cos(morph2*0.8)+nucleus.y*0.38); mat2 fluid3=mat2(cos(morph3*0.6)+mitochondria.x*0.25,sin(morph3*0.6)+mitochondria.y*0.18,-sin(morph3*0.6)+mitochondria.y*0.15,cos(morph3*0.6)+mitochondria.x*0.3); mat2 fluid4=mat2(cos(morph4*1.2)+pulse*0.15,sin(morph4*1.2)+pulse*0.12,-sin(morph4*1.2)+pulse*0.1,cos(morph4*1.2)+pulse*0.18); layer=fluid1*layer; layer=vec2(abs(layer.x*1.3)-0.82+sin(t*1.3+fi+chaos1)*0.62,abs(layer.y*1.25)-0.65+cos(t*1.05+fi+chaos2)*0.52); layer=fluid2*layer; layer=vec2(abs(layer.x*0.98)+sin(t*0.85+fi*1.4+chaos3)*0.35,abs(layer.y*1.02)+cos(t*1.1+fi*1.1+chaos4)*0.32); layer=fluid3*layer; layer=fluid4*(layer+vec2(sin(angle*2.5+r*3.0+t*2.8+fi),cos(angle*3.2+r*2.5+t*2.2+fi))*0.1); float amoeba=length(layer)-0.16-sin(layer.x*7.5+layer.y*6.5+t*6.2+fi)*0.065; float tentacle=max(abs(layer.x*1.05+layer.y*0.82)-0.085,abs(layer.y*1.15-layer.x*0.52)-0.105); float virus=length(layer-vec2(sin(fi*2.5+fj)*0.48,cos(fi*2.2+fj)*0.42))-0.075-sin(length(layer)*15.0+t*10.0+fi*3.0)*0.025; float bacteria=min(abs(layer.x*1.4)-0.062,abs(layer.y*1.3)-0.052)+cos(length(layer)*12.5+t*8.5+fi*2.2)*0.018; float parasite=length(layer-vec2(cos(fi*3.0+t)*0.35,sin(fi*2.8+t)*0.3))-0.045-cos(length(layer)*18.0+t*11.0+fi*2.5)*0.015; float organism=min(min(min(amoeba,tentacle),min(virus,bacteria)),parasite)+sin(length(layer)*11.0+t*8.5+fi)*0.032; float life=exp(-abs(organism)*9.5); vec2 current1=vec2(sin(layer.x*7.5+t*3.8+fi+chaos1*4.2),cos(layer.y*7.0+t*3.2+fi+chaos2*3.8))*life*0.32; vec2 current2=vec2(cos(layer.x*5.5+t*2.8+fi*2.3+chaos2*3.2),sin(layer.y*5.0+t*4.5+fi*1.8+chaos1*2.8))*life*0.22; vec2 current3=vec2(sin(layer.x*8.5+t*4.8+fi*0.9+chaos3*3.5),cos(layer.y*8.0+t*4.2+fi*1.5+chaos3*2.5))*life*0.15; vec2 current4=vec2(cos(layer.x*6.5+t*3.5+fi*1.2+chaos4*3.0),sin(layer.y*6.0+t*5.2+fi*1.7+chaos4*2.2))*life*0.1; vec2 vortex=vec2(sin(angle*4.2+r*6.0+t*5.0+fi+fj),cos(angle*3.8+r*5.5+t*4.2+fi+fj))*life*0.15; vec2 spiral=vec2(sin(angle*6.0+r*4.5+t*6.5+fi*1.8+fj),cos(angle*5.5+r*5.0+t*5.8+fi*1.5+fj))*life*0.1; vec2 whirlpool=vec2(sin(angle*7.5+r*3.8+t*7.2+fi*0.7+chaos5),cos(angle*7.0+r*4.2+t*6.8+fi*0.9+chaos5))*life*0.08; layer+=current1+current2+current3+current4+vortex+spiral+whirlpool; float bio1=sin(length(layer)*9.5+t*6.2+fi+fj)*life; float bio2=cos(length(layer)*12.5+t*4.8+fi*1.9+fj)*life; float bio3=sin(length(layer)*14.5+t*5.5+fi*1.2+fj)*life; float bio4=cos(length(layer)*11.0+t*6.8+fi*0.8+fj)*life; vec3 dna1=vec3(sin(bio1*3.5+fi+chaos1),sin(bio1*3.5+fi+chaos1+2.8),sin(bio1*3.5+fi+chaos1+5.5))*0.5+0.5; vec3 dna2=vec3(cos(bio2*3.0+fi+chaos2+1.8),cos(bio2*3.0+fi+chaos2+4.5),cos(bio2*3.0+fi+chaos2+7.2))*0.5+0.5; vec3 rna=vec3(sin(bio3*2.8+fi+chaos3+1.2),cos(bio3*2.8+fi+chaos3+4.0),sin(bio3*2.8+fi+chaos3+6.8))*0.5+0.5; vec3 mrna=vec3(cos(bio4*2.5+fi+chaos4+0.5),sin(bio4*2.5+fi+chaos4+3.2),cos(bio4*2.5+fi+chaos4+6.0))*0.5+0.5; vec3 enzyme=mix(mix(dna1,dna2,sin(t*2.8+fi+chaos1*3.0+chaos2*2.5)*0.5+0.5),mix(rna,mrna,cos(t*2.2+fi+chaos3*2.8+chaos4*2.2)*0.5+0.5),sin(t*1.5+chaos5*2.0)*0.5+0.5); float protein=sin(length(layer)*18.0+t*7.8+fi*2.5+chaos1*4.2)*cos(length(layer)*15.0+t*6.2+fi*2.0+chaos2*3.5)*life*0.38; float lipid=cos(length(layer)*20.0+t*8.5+fi*1.5+chaos3*3.8)*sin(length(layer)*16.5+t*7.0+fi*1.8+chaos4*3.2)*life*0.25; vec3 cell_color=enzyme*(1.0+protein+lipid*0.5); col+=cell_color*life*(0.9-fi*0.06)*pow(0.8,fj); float division=sin(angle*6.0+t*5.5+length(layer)*6.0+chaos1*4.0)*0.18+0.82; float cytoplasm=cos(angle*5.5+t*4.0+r*9.0+chaos2*3.5)*0.12+0.88; float membrane=sin(angle*7.0+t*6.8+r*11.0+chaos3*3.0)*0.1+0.9; float wall=cos(angle*8.0+t*7.5+r*13.0+chaos4*2.5)*0.08+0.92; col*=division*cytoplasm*membrane*wall; float symbiosis=sin(layer.x*22.0+layer.y*19.0+t*10.5+fi+chaos1*6.0)*cos(layer.x*15.0-layer.y*13.0+t*8.2+fi+chaos2*5.0)*life*0.35; float metabolism=cos(layer.x*25.0+layer.y*21.0+t*11.2+fi*1.8+chaos3*5.5)*sin(layer.x*17.0-layer.y*14.0+t*9.0+fi*1.2+chaos1*4.5)*life*0.25; float photosynthesis=sin(layer.x*28.0+layer.y*24.0+t*12.0+fi*0.8+chaos4*6.0)*cos(layer.x*19.0-layer.y*16.0+t*9.8+fi*1.5+chaos5*4.0)*life*0.15; col+=symbiosis*enzyme*0.7+metabolism*rna*0.5+photosynthesis*mrna*0.3; float neural=sin(r*15.0+angle*10.0+t*7.5+chaos1*3.8)*exp(-r*0.45)*life*0.42; float synaptic=cos(r*18.0+angle*12.0+t*8.2+chaos2*3.5)*exp(-r*0.5)*life*0.28; col+=neural*dna2*0.35+synaptic*rna*0.25;}} col=pow(col*0.15,vec3(0.7)); float ecosystem=sin(angle*8.5+r*7.5+t*3.5+chaos1*3.0)*cos(angle*6.5+r*11.5-t*6.8+chaos2*2.8)*exp(-r*0.38)*0.6; float biosphere=cos(angle*10.5+r*9.0+t*4.2+chaos3*2.5)*sin(angle*7.5+r*13.0-t*7.5+chaos1*2.2)*exp(-r*0.42)*0.35; float atmosphere=sin(angle*12.0+r*6.5+t*5.0+chaos4*2.2)*cos(angle*9.0+r*10.0-t*8.2+chaos5*2.0)*exp(-r*0.48)*0.2; col*=vec3(i0,i1,i2)*(0.55+ecosystem+biosphere+atmosphere); col=mix(col,vec3(length(col))*0.3,0.02); vec4(col,1.0)', 2.5, 1.8, 2.1);


window.gl032k = () => glsl('vec2 p=(_st-0.5)*10.2; float warp=sin(p.x*0.6)*0.35+cos(p.y*0.45)*0.3; p.x+=sin(p.y*2.5+time*0.4)*0.5+warp; p.y+=cos(p.x*2.2+time*0.5)*0.45+warp; p=mat2(cos(0.25+sin(time*0.12)*0.2),-sin(0.25+cos(time*0.1)*0.18),sin(0.25+sin(time*0.14)*0.2),cos(0.25+cos(time*0.11)*0.15))*p; float t=time*0.2; vec3 col=vec3(0.0); vec2 uv=p; float angle=atan(p.y,p.x)+sin(t*0.25)*0.2; float r=length(p)+cos(t*0.35)*0.25; float chaos1=sin(t*0.85)*cos(t*1.15)*0.55; float chaos2=cos(t*0.65)*sin(t*1.45)*0.48; float chaos3=sin(t*0.42)*cos(t*1.9)*0.42; float chaos4=cos(t*0.32)*sin(t*1.75)*0.38; float chaos5=sin(t*0.95)*cos(t*0.75)*0.32; for(int j=0;j<2;j++){float fj=float(j)*3.0; vec2 layer=uv*pow(0.8,fj); for(int i=0;i<10;i++){float fi=float(i)*0.28+fj*0.15; float pulse=sin(t*0.38+fi+fj)*0.28; vec2 cell=vec2(sin(layer.x*3.8+t*1.6+fi)*cos(layer.y*3.2+t*1.3+fi),cos(layer.x*2.8+t*1.9+fi)*sin(layer.y*4.0+t*1.6+fi))*0.2; vec2 nucleus=vec2(sin(layer.x*4.5+t*2.5+fi*1.7)*cos(layer.y*4.2+t*2.0+fi*1.4),cos(layer.x*3.8+t*2.8+fi*1.1)*sin(layer.y*4.8+t*2.3+fi*1.3))*0.14; vec2 mitochondria=vec2(sin(layer.x*5.8+t*3.2+fi*0.8)*cos(layer.y*5.2+t*2.8+fi*0.6),cos(layer.x*5.0+t*3.6+fi*1.0)*sin(layer.y*6.0+t*3.2+fi*0.9))*0.09; vec2 ribosome=vec2(sin(layer.x*6.8+t*4.0+fi*0.55)*cos(layer.y*6.2+t*3.5+fi*0.7),cos(layer.x*6.0+t*4.3+fi*0.8)*sin(layer.y*7.0+t*3.8+fi*0.65))*0.07; layer+=cell+nucleus*0.75+mitochondria*0.55+ribosome*0.35; float morph1=t*0.48+fi*1.6+chaos1*3.2+fj*0.5; float morph2=t*0.75+fi*1.2+chaos2*2.8+fj*0.35; float morph3=t*0.58+fi*1.4+chaos3*3.0+fj*0.45; float morph4=t*0.42+fi*1.0+chaos4*2.5+fj*0.6; mat2 fluid1=mat2(cos(morph1)+cell.x*0.7,sin(morph1)+cell.y*0.5,-sin(morph1)+cell.y*0.45,cos(morph1)+cell.x*0.6); mat2 fluid2=mat2(cos(morph2*0.85)+nucleus.y*0.45,sin(morph2*0.85)+nucleus.x*0.35,-sin(morph2*0.85)+nucleus.x*0.3,cos(morph2*0.85)+nucleus.y*0.5); mat2 fluid3=mat2(cos(morph3*0.65)+mitochondria.x*0.3,sin(morph3*0.65)+mitochondria.y*0.25,-sin(morph3*0.65)+mitochondria.y*0.22,cos(morph3*0.65)+mitochondria.x*0.35); mat2 fluid4=mat2(cos(morph4*1.1)+pulse*0.18,sin(morph4*1.1)+pulse*0.15,-sin(morph4*1.1)+pulse*0.12,cos(morph4*1.1)+pulse*0.2); layer=fluid1*layer; layer=vec2(abs(layer.x*1.3)-0.85+sin(t*1.4+fi+chaos1)*0.65,abs(layer.y*1.25)-0.7+cos(t*1.15+fi+chaos2)*0.58); layer=fluid2*layer; layer=vec2(abs(layer.x*1.05)+sin(t*0.95+fi*1.4+chaos3)*0.42,abs(layer.y*1.1)+cos(t*1.2+fi*1.1+chaos4)*0.38); layer=fluid3*layer; layer=fluid4*(layer+vec2(sin(angle*3.0+r*3.5+t*3.2+fi),cos(angle*3.8+r*3.0+t*2.8+fi))*0.12); float amoeba=length(layer)-0.18-sin(layer.x*8.5+layer.y*7.5+t*6.5+fi)*0.075; float tentacle=max(abs(layer.x*1.1+layer.y*0.85)-0.095,abs(layer.y*1.15-layer.x*0.55)-0.11); float virus=length(layer-vec2(sin(fi*3.0+fj)*0.6,cos(fi*2.8+fj)*0.55))-0.085-sin(length(layer)*16.0+t*10.5+fi*3.0)*0.03; float bacteria=min(abs(layer.x*1.45)-0.075,abs(layer.y*1.35)-0.065)+cos(length(layer)*13.5+t*9.0+fi*2.5)*0.022; float parasite=length(layer-vec2(cos(fi*3.5+t)*0.4,sin(fi*3.2+t)*0.35))-0.058-cos(length(layer)*19.0+t*11.5+fi*2.8)*0.018; float fungus=min(abs(layer.x*1.15+layer.y*0.75)-0.052,abs(layer.y*1.2-layer.x*0.65)-0.062)+sin(length(layer)*22.0+t*14.0+fi*3.5)*0.015; float organism=min(min(min(min(amoeba,tentacle),min(virus,bacteria)),min(parasite,fungus)),length(layer)-0.16)+sin(length(layer)*11.5+t*9.5+fi)*0.038; float life=exp(-abs(organism)*10.5); vec2 current1=vec2(sin(layer.x*8.5+t*4.2+fi+chaos1*4.5),cos(layer.y*8.0+t*3.8+fi+chaos2*4.2))*life*0.38; vec2 current2=vec2(cos(layer.x*6.8+t*3.5+fi*2.5+chaos2*3.8),sin(layer.y*6.2+t*4.8+fi*2.0+chaos1*3.2))*life*0.28; vec2 current3=vec2(sin(layer.x*9.5+t*5.2+fi*1.0+chaos3*4.0),cos(layer.y*9.0+t*4.8+fi*1.5+chaos3*3.2))*life*0.22; vec2 current4=vec2(cos(layer.x*7.5+t*4.0+fi*1.3+chaos4*3.5),sin(layer.y*7.0+t*5.5+fi*1.9+chaos4*2.8))*life*0.16; vec2 vortex=vec2(sin(angle*4.5+r*6.2+t*5.5+fi+fj),cos(angle*4.0+r*5.8+t*4.8+fi+fj))*life*0.18; vec2 spiral=vec2(sin(angle*6.2+r*4.8+t*6.8+fi*2.0+fj),cos(angle*5.8+r*5.2+t*6.2+fi*1.6+fj))*life*0.13; vec2 whirlpool=vec2(sin(angle*7.5+r*4.2+t*7.5+fi*0.8+chaos5),cos(angle*7.0+r*4.6+t*7.0+fi*1.0+chaos5))*life*0.1; layer+=current1+current2+current3+current4+vortex+spiral+whirlpool; float bio1=sin(length(layer)*10.5+t*6.5+fi+fj)*life; float bio2=cos(length(layer)*13.0+t*5.2+fi*2.0+fj)*life; float bio3=sin(length(layer)*15.0+t*5.8+fi*1.3+fj)*life; float bio4=cos(length(layer)*11.8+t*7.0+fi*0.8+fj)*life; vec3 dna1=vec3(sin(bio1*4.0+fi+chaos1),sin(bio1*4.0+fi+chaos1+2.8),sin(bio1*4.0+fi+chaos1+5.8))*0.5+0.5; vec3 dna2=vec3(cos(bio2*3.5+fi+chaos2+1.6),cos(bio2*3.5+fi+chaos2+4.5),cos(bio2*3.5+fi+chaos2+7.5))*0.5+0.5; vec3 rna=vec3(sin(bio3*3.0+fi+chaos3+1.2),cos(bio3*3.0+fi+chaos3+4.2),sin(bio3*3.0+fi+chaos3+7.2))*0.5+0.5; vec3 mrna=vec3(cos(bio4*2.6+fi+chaos4+0.6),sin(bio4*2.6+fi+chaos4+3.5),cos(bio4*2.6+fi+chaos4+6.5))*0.5+0.5; vec3 enzyme=mix(mix(dna1,dna2,sin(t*2.8+fi+chaos1*3.2+chaos2*2.8)*0.5+0.5),mix(rna,mrna,cos(t*2.2+fi+chaos3*2.8+chaos4*2.2)*0.5+0.5),sin(t*1.5+chaos5*2.0)*0.5+0.5); float protein=sin(length(layer)*20.0+t*8.8+fi*2.8+chaos1*4.5)*cos(length(layer)*16.5+t*7.5+fi*2.2+chaos2*3.8)*life*0.42; float lipid=cos(length(layer)*22.0+t*9.5+fi*1.8+chaos3*4.2)*sin(length(layer)*17.8+t*8.0+fi*2.0+chaos4*3.5)*life*0.3; vec3 cell_color=enzyme*(1.0+protein+lipid*0.5); col+=cell_color*life*(0.9-fi*0.06)*pow(0.82,fj); float division=sin(angle*6.5+t*6.0+length(layer)*6.5+chaos1*4.2)*0.18+0.82; float cytoplasm=cos(angle*6.0+t*4.5+r*10.0+chaos2*3.8)*0.12+0.88; float membrane=sin(angle*7.2+t*6.5+r*12.0+chaos3*3.5)*0.1+0.9; col*=division*cytoplasm*membrane; float symbiosis=sin(layer.x*25.0+layer.y*21.0+t*11.2+fi+chaos1*6.0)*cos(layer.x*17.0-layer.y*14.5+t*9.5+fi+chaos2*5.2)*life*0.4; float metabolism=cos(layer.x*28.0+layer.y*24.0+t*12.0+fi*2.0+chaos3*5.8)*sin(layer.x*19.0-layer.y*16.0+t*10.2+fi*1.3+chaos1*4.8)*life*0.3; col+=symbiosis*enzyme*0.65+metabolism*rna*0.45; float neural=sin(r*16.5+angle*11.0+t*7.8+chaos1*4.2)*exp(-r*0.48)*life*0.45; float synaptic=cos(r*19.0+angle*13.0+t*8.5+chaos2*3.8)*exp(-r*0.55)*life*0.32; col+=neural*dna2*0.38+synaptic*rna*0.28;}} col=pow(col*0.14,vec3(0.72)); float ecosystem=sin(angle*9.5+r*8.5+t*4.0+chaos1*3.5)*cos(angle*7.5+r*12.5-t*7.2+chaos2*3.2)*exp(-r*0.42)*0.65; float biosphere=cos(angle*11.5+r*10.0+t*4.8+chaos3*2.8)*sin(angle*8.5+r*14.0-t*8.0+chaos1*2.5)*exp(-r*0.48)*0.42; float atmosphere=sin(angle*13.0+r*7.8+t*5.5+chaos4*2.5)*cos(angle*10.0+r*11.2-t*8.8+chaos5*2.2)*exp(-r*0.55)*0.28; col*=vec3(i0,i1,i2)*(0.58+ecosystem+biosphere+atmosphere); col=mix(col,vec3(length(col))*0.25,0.02); vec4(col,1.0)', 2.8, 2.0, 2.5);


window.gl032l = () => glsl('vec2 p=(_st-0.5)*11.5; float warp1=sin(p.x*0.8+time*0.15)*0.45+cos(p.y*0.65+time*0.22)*0.4; float warp2=cos(p.x*1.2-time*0.18)*0.35+sin(p.y*0.85-time*0.28)*0.38; p.x+=sin(p.y*3.2+time*0.52)*0.68+warp1+warp2*0.6; p.y+=cos(p.x*2.8+time*0.65)*0.62+warp1*0.8+warp2; vec2 drift=vec2(sin(time*0.08)*0.15,cos(time*0.12)*0.18); p+=drift; p=mat2(cos(0.35+sin(time*0.18)*0.32),-sin(0.35+cos(time*0.15)*0.28),sin(0.35+sin(time*0.22)*0.3),cos(0.35+cos(time*0.16)*0.25))*p; float t=time*0.22; vec3 col=vec3(0.0); vec2 uv=p; float angle=atan(p.y,p.x)+sin(t*0.32)*0.28; float r=length(p)+cos(t*0.45)*0.35; float chaos1=sin(t*1.05)*cos(t*1.35)*0.72; float chaos2=cos(t*0.78)*sin(t*1.65)*0.65; float chaos3=sin(t*0.52)*cos(t*2.15)*0.58; float chaos4=cos(t*0.42)*sin(t*1.95)*0.52; float chaos5=sin(t*1.15)*cos(t*0.85)*0.45; float chaos6=cos(t*0.68)*sin(t*1.25)*0.42; for(int j=0;j<2;j++){float fj=float(j)*3.5; vec2 layer=uv*pow(0.75,fj); for(int i=0;i<12;i++){float fi=float(i)*0.25+fj*0.12; float pulse1=sin(t*0.45+fi+fj)*0.35; float pulse2=cos(t*0.38+fi*1.5+fj*0.8)*0.28; float pulse3=sin(t*0.52+fi*0.7+fj*1.2)*0.22; vec2 cell=vec2(sin(layer.x*4.5+t*1.85+fi)*cos(layer.y*3.8+t*1.55+fi),cos(layer.x*3.2+t*2.15+fi)*sin(layer.y*4.8+t*1.85+fi))*0.25; vec2 nucleus=vec2(sin(layer.x*5.5+t*2.85+fi*1.8)*cos(layer.y*5.0+t*2.35+fi*1.6),cos(layer.x*4.2+t*3.15+fi*1.2)*sin(layer.y*5.8+t*2.65+fi*1.4))*0.18; vec2 mitochondria=vec2(sin(layer.x*6.8+t*3.65+fi*0.9)*cos(layer.y*6.2+t*3.15+fi*0.7),cos(layer.x*5.8+t*4.05+fi*1.1)*sin(layer.y*7.2+t*3.65+fi*1.0))*0.12; vec2 ribosome=vec2(sin(layer.x*7.8+t*4.45+fi*0.6)*cos(layer.y*7.2+t*3.95+fi*0.8),cos(layer.x*6.8+t*4.85+fi*0.9)*sin(layer.y*8.2+t*4.35+fi*0.7))*0.09; vec2 lysosome=vec2(sin(layer.x*8.5+t*5.2+fi*0.5)*cos(layer.y*8.0+t*4.8+fi*0.65),cos(layer.x*7.8+t*5.6+fi*0.8)*sin(layer.y*9.0+t*5.2+fi*0.75))*0.07; vec2 plastid=vec2(sin(layer.x*9.2+t*5.8+fi*0.45)*cos(layer.y*8.8+t*5.4+fi*0.6),cos(layer.x*8.5+t*6.2+fi*0.7)*sin(layer.y*9.8+t*5.8+fi*0.65))*0.055; layer+=cell+nucleus*0.85+mitochondria*0.65+ribosome*0.45+lysosome*0.3+plastid*0.2; float morph1=t*0.58+fi*1.9+chaos1*4.2+fj*0.65; float morph2=t*0.85+fi*1.5+chaos2*3.8+fj*0.45; float morph3=t*0.68+fi*1.7+chaos3*3.5+fj*0.55; float morph4=t*0.52+fi*1.2+chaos4*3.0+fj*0.75; float morph5=t*0.75+fi*1.1+chaos5*3.3+fj*0.35; float morph6=t*0.62+fi*1.6+chaos6*2.8+fj*0.65; mat2 fluid1=mat2(cos(morph1)+cell.x*0.85,sin(morph1)+cell.y*0.65,-sin(morph1)+cell.y*0.55,cos(morph1)+cell.x*0.75); mat2 fluid2=mat2(cos(morph2*0.9)+nucleus.y*0.55,sin(morph2*0.9)+nucleus.x*0.45,-sin(morph2*0.9)+nucleus.x*0.4,cos(morph2*0.9)+nucleus.y*0.6); mat2 fluid3=mat2(cos(morph3*0.75)+mitochondria.x*0.4,sin(morph3*0.75)+mitochondria.y*0.32,-sin(morph3*0.75)+mitochondria.y*0.28,cos(morph3*0.75)+mitochondria.x*0.45); mat2 fluid4=mat2(cos(morph4*1.2)+pulse1*0.25,sin(morph4*1.2)+pulse1*0.2,-sin(morph4*1.2)+pulse1*0.18,cos(morph4*1.2)+pulse1*0.28); mat2 fluid5=mat2(cos(morph5*0.7)+ribosome.x*0.35,sin(morph5*0.7)+ribosome.y*0.28,-sin(morph5*0.7)+ribosome.y*0.24,cos(morph5*0.7)+ribosome.x*0.38); mat2 fluid6=mat2(cos(morph6*1.15)+lysosome.y*0.3,sin(morph6*1.15)+lysosome.x*0.25,-sin(morph6*1.15)+lysosome.x*0.22,cos(morph6*1.15)+lysosome.y*0.33); layer=fluid1*layer; layer=vec2(abs(layer.x*1.45)-0.95+sin(t*1.6+fi+chaos1)*0.8,abs(layer.y*1.35)-0.8+cos(t*1.35+fi+chaos2)*0.72); layer=fluid2*layer; layer=vec2(abs(layer.x*1.15)+sin(t*1.15+fi*1.6+chaos3)*0.52,abs(layer.y*1.25)+cos(t*1.45+fi*1.3+chaos4)*0.48); layer=fluid3*layer; layer=vec2(abs(layer.x*0.95)+sin(t*1.05+fi*1.8+chaos5)*0.45,abs(layer.y*1.05)+cos(t*1.25+fi*1.4+chaos6)*0.42); layer=fluid4*layer; layer=fluid5*(layer+vec2(sin(angle*3.8+r*4.5+t*3.8+fi),cos(angle*4.5+r*3.8+t*3.2+fi))*0.18); layer=fluid6*layer; float amoeba=length(layer)-0.22-sin(layer.x*10.5+layer.y*9.5+t*7.8+fi)*0.095; float tentacle=max(abs(layer.x*1.25+layer.y*0.95)-0.115,abs(layer.y*1.35-layer.x*0.65)-0.135); float virus=length(layer-vec2(sin(fi*3.5+fj)*0.7,cos(fi*3.2+fj)*0.65))-0.105-sin(length(layer)*19.0+t*12.5+fi*3.5)*0.045; float bacteria=min(abs(layer.x*1.65)-0.095,abs(layer.y*1.55)-0.085)+cos(length(layer)*16.5+t*11.0+fi*2.8)*0.035; float parasite=length(layer-vec2(cos(fi*4.2+t)*0.5,sin(fi*3.8+t)*0.45))-0.078-cos(length(layer)*22.0+t*14.5+fi*3.2)*0.028; float fungus=min(abs(layer.x*1.35+layer.y*0.85)-0.068,abs(layer.y*1.45-layer.x*0.75)-0.082)+sin(length(layer)*25.0+t*16.5+fi*3.8)*0.025; float prion=length(layer-vec2(sin(fi*5.0+fj)*0.32,cos(fi*4.8+fj)*0.28))-0.058-sin(length(layer)*28.0+t*19.0+fi*4.2)*0.022; float organism=min(min(min(min(min(amoeba,tentacle),min(virus,bacteria)),min(parasite,fungus)),prion),length(layer)-0.19)+sin(length(layer)*13.5+t*11.5+fi)*0.048; float life=exp(-abs(organism)*11.5); vec2 current1=vec2(sin(layer.x*10.5+t*5.2+fi+chaos1*5.8),cos(layer.y*10.0+t*4.8+fi+chaos2*5.5))*life*0.48; vec2 current2=vec2(cos(layer.x*8.2+t*4.2+fi*2.8+chaos2*4.8),sin(layer.y*7.5+t*5.8+fi*2.3+chaos1*4.2))*life*0.38; vec2 current3=vec2(sin(layer.x*11.5+t*6.2+fi*1.2+chaos3*5.2),cos(layer.y*11.0+t*5.8+fi*1.8+chaos3*4.5))*life*0.32; vec2 current4=vec2(cos(layer.x*9.0+t*4.8+fi*1.5+chaos4*4.5),sin(layer.y*8.5+t*6.5+fi*2.2+chaos4*3.8))*life*0.25; vec2 current5=vec2(sin(layer.x*12.2+t*6.8+fi*0.9+chaos5*4.8),cos(layer.y*12.0+t*6.2+fi*1.4+chaos5*4.2))*life*0.22; vec2 current6=vec2(cos(layer.x*13.0+t*7.5+fi*1.9+chaos6*4.2),sin(layer.y*12.8+t*7.0+fi*1.1+chaos6*3.8))*life*0.18; vec2 vortex=vec2(sin(angle*5.2+r*7.2+t*6.5+fi+fj),cos(angle*4.8+r*6.8+t*5.8+fi+fj))*life*0.28; vec2 spiral=vec2(sin(angle*7.2+r*5.8+t*8.2+fi*2.3+fj),cos(angle*6.8+r*6.2+t*7.5+fi*1.8+fj))*life*0.22; vec2 whirlpool=vec2(sin(angle*8.5+r*5.2+t*9.0+fi*0.9+chaos5),cos(angle*8.0+r*5.6+t*8.5+fi*1.2+chaos5))*life*0.18; vec2 cyclone=vec2(sin(angle*9.8+r*4.8+t*9.8+fi*1.6+chaos6),cos(angle*9.2+r*5.0+t*9.2+fi*1.9+chaos6))*life*0.15; vec2 typhoon=vec2(sin(angle*11.0+r*4.2+t*10.5+fi*0.7+chaos1),cos(angle*10.5+r*4.6+t*10.0+fi*1.0+chaos2))*life*0.12; layer+=current1+current2+current3+current4+current5+current6+vortex+spiral+whirlpool+cyclone+typhoon; float bio1=sin(length(layer)*12.5+t*7.8+fi+fj)*life; float bio2=cos(length(layer)*15.5+t*6.2+fi*2.3+fj)*life; float bio3=sin(length(layer)*17.5+t*6.8+fi*1.5+fj)*life; float bio4=cos(length(layer)*13.8+t*8.2+fi*0.9+fj)*life; float bio5=sin(length(layer)*19.5+t*9.0+fi*1.8+fj)*life; float bio6=cos(length(layer)*21.0+t*9.8+fi*1.3+fj)*life; vec3 dna1=vec3(sin(bio1*4.8+fi+chaos1),sin(bio1*4.8+fi+chaos1+3.2),sin(bio1*4.8+fi+chaos1+6.5))*0.5+0.5; vec3 dna2=vec3(cos(bio2*4.2+fi+chaos2+1.8),cos(bio2*4.2+fi+chaos2+5.0),cos(bio2*4.2+fi+chaos2+8.2))*0.5+0.5; vec3 rna=vec3(sin(bio3*3.8+fi+chaos3+1.4),cos(bio3*3.8+fi+chaos3+4.8),sin(bio3*3.8+fi+chaos3+8.0))*0.5+0.5; vec3 mrna=vec3(cos(bio4*3.2+fi+chaos4+0.8),sin(bio4*3.2+fi+chaos4+4.0),cos(bio4*3.2+fi+chaos4+7.5))*0.5+0.5; vec3 trna=vec3(sin(bio5*3.6+fi+chaos5+2.5),cos(bio5*3.6+fi+chaos5+5.8),sin(bio5*3.6+fi+chaos5+9.2))*0.5+0.5; vec3 rrna=vec3(cos(bio6*4.5+fi+chaos6+1.5),sin(bio6*4.5+fi+chaos6+4.8),cos(bio6*4.5+fi+chaos6+8.5))*0.5+0.5; vec3 enzyme=mix(mix(mix(dna1,dna2,sin(t*3.2+fi+chaos1*4.0+chaos2*3.5)*0.5+0.5),mix(rna,mrna,cos(t*2.8+fi+chaos3*3.8+chaos4*3.2)*0.5+0.5),sin(t*2.2+chaos5*2.8)*0.5+0.5),mix(trna,rrna,cos(t*2.6+chaos6*3.2+chaos1*2.5)*0.5+0.5),sin(t*1.9+chaos2*3.0)*0.5+0.5); float protein=sin(length(layer)*24.0+t*10.8+fi*3.5+chaos1*5.8)*cos(length(layer)*20.0+t*9.2+fi*3.0+chaos2*5.2)*life*0.55; float lipid=cos(length(layer)*26.0+t*11.5+fi*2.2+chaos3*5.5)*sin(length(layer)*21.5+t*9.8+fi*2.5+chaos4*4.8)*life*0.42; float carb=sin(length(layer)*28.0+t*12.2+fi*1.8+chaos5*5.2)*cos(length(layer)*23.0+t*10.5+fi*2.0+chaos6*4.5)*life*0.35; float steroid=cos(length(layer)*30.0+t*13.0+fi*1.5+chaos1*4.8)*sin(length(layer)*25.0+t*11.2+fi*2.8+chaos2*4.2)*life*0.28; vec3 cell_color=enzyme*(1.0+protein+lipid*0.7+carb*0.5+steroid*0.4); col+=cell_color*life*(0.95-fi*0.05)*pow(0.85,fj); float division=sin(angle*7.5+t*7.0+length(layer)*7.5+chaos1*5.2)*0.25+0.88; float cytoplasm=cos(angle*7.0+t*5.5+r*12.0+chaos2*4.8)*0.18+0.85; float membrane=sin(angle*8.2+t*7.8+r*14.0+chaos3*4.5)*0.15+0.88; float wall=cos(angle*8.8+t*8.5+r*16.0+chaos4*4.2)*0.12+0.9; float plastid_env=sin(angle*8.0+t*7.2+r*13.0+chaos5*4.0)*0.1+0.92; float vacuole=cos(angle*9.2+t*8.0+r*15.0+chaos6*3.8)*0.08+0.94; col*=division*cytoplasm*membrane*wall*plastid_env*vacuole; float symbiosis=sin(layer.x*32.0+layer.y*28.0+t*14.5+fi+chaos1*7.5)*cos(layer.x*22.0-layer.y*18.0+t*12.2+fi+chaos2*6.8)*life*0.52; float metabolism=cos(layer.x*35.0+layer.y*31.0+t*15.2+fi*2.5+chaos3*7.2)*sin(layer.x*24.0-layer.y*20.0+t*13.0+fi*1.8+chaos1*6.2)*life*0.42; float photosynthesis=sin(layer.x*38.0+layer.y*34.0+t*16.0+fi*1.2+chaos4*6.8)*cos(layer.x*26.0-layer.y*22.0+t*13.8+fi*2.2+chaos5*5.8)*life*0.35; col+=symbiosis*enzyme*0.8+metabolism*rna*0.6+photosynthesis*mrna*0.5; float neural=sin(r*19.5+angle*13.0+t*9.5+chaos1*5.2)*exp(-r*0.52)*life*0.58; float synaptic=cos(r*22.0+angle*15.0+t*10.2+chaos2*4.8)*exp(-r*0.58)*life*0.45; float dendritic=sin(r*25.0+angle*17.0+t*11.0+chaos3*4.5)*exp(-r*0.65)*life*0.35; col+=neural*dna2*0.48+synaptic*rna*0.38+dendritic*mrna*0.3;}} col=pow(col*0.13,vec3(0.75)); float ecosystem=sin(angle*11.5+r*10.5+t*5.0+chaos1*4.2)*cos(angle*9.5+r*15.5-t*8.8+chaos2*3.8)*exp(-r*0.48)*0.82; float biosphere=cos(angle*13.5+r*12.0+t*5.8+chaos3*3.5)*sin(angle*10.5+r*17.0-t*9.5+chaos1*3.2)*exp(-r*0.55)*0.58; float atmosphere=sin(angle*15.0+r*9.8+t*6.5+chaos4*3.2)*cos(angle*12.0+r*13.2-t*10.2+chaos5*2.8)*exp(-r*0.62)*0.42; float hydrosphere=cos(angle*16.5+r*11.5+t*7.2+chaos6*2.8)*sin(angle*13.5+r*15.5-t*11.0+chaos2*2.5)*exp(-r*0.68)*0.32; col*=vec3(i0,i1,i2)*(0.65+ecosystem+biosphere+atmosphere+hydrosphere); col=mix(col,vec3(length(col))*0.32,0.03); vec4(col,1.0)', 3.2, 2.2, 2.8);


window.gl032m = () => glsl('vec2 p=(_st-0.5)*11.5; float warp1=sin(p.x*0.8+time*0.15)*0.45+cos(p.y*0.65+time*0.22)*0.4; float warp2=cos(p.x*1.2-time*0.18)*0.35+sin(p.y*0.85-time*0.28)*0.38; p.x+=sin(p.y*3.2+time*0.52)*0.68+warp1+warp2*0.6; p.y+=cos(p.x*2.8+time*0.65)*0.62+warp1*0.8+warp2; vec2 drift=vec2(sin(time*0.08)*0.15,cos(time*0.12)*0.18); p+=drift; p=mat2(cos(0.35+sin(time*0.18)*0.32),-sin(0.35+cos(time*0.15)*0.28),sin(0.35+sin(time*0.22)*0.3),cos(0.35+cos(time*0.16)*0.25))*p; float t=time*0.22; vec3 col=vec3(0.15); vec2 uv=p; float angle=atan(p.y,p.x)+sin(t*0.32)*0.28; float r=length(p)+cos(t*0.45)*0.35; float chaos1=sin(t*1.05)*cos(t*1.35)*0.72; float chaos2=cos(t*0.78)*sin(t*1.65)*0.65; float chaos3=sin(t*0.52)*cos(t*2.15)*0.58; float chaos4=cos(t*0.42)*sin(t*1.95)*0.52; float chaos5=sin(t*1.15)*cos(t*0.85)*0.45; float chaos6=cos(t*0.68)*sin(t*1.25)*0.42; for(int j=0;j<2;j++){float fj=float(j)*3.5; vec2 layer=uv*pow(0.75,fj); for(int i=0;i<12;i++){float fi=float(i)*0.25+fj*0.12; float pulse1=sin(t*0.45+fi+fj)*0.35; float pulse2=cos(t*0.38+fi*1.5+fj*0.8)*0.28; float pulse3=sin(t*0.52+fi*0.7+fj*1.2)*0.22; vec2 cell=vec2(sin(layer.x*4.5+t*1.85+fi)*cos(layer.y*3.8+t*1.55+fi),cos(layer.x*3.2+t*2.15+fi)*sin(layer.y*4.8+t*1.85+fi))*0.25; vec2 nucleus=vec2(sin(layer.x*5.5+t*2.85+fi*1.8)*cos(layer.y*5.0+t*2.35+fi*1.6),cos(layer.x*4.2+t*3.15+fi*1.2)*sin(layer.y*5.8+t*2.65+fi*1.4))*0.18; vec2 mitochondria=vec2(sin(layer.x*6.8+t*3.65+fi*0.9)*cos(layer.y*6.2+t*3.15+fi*0.7),cos(layer.x*5.8+t*4.05+fi*1.1)*sin(layer.y*7.2+t*3.65+fi*1.0))*0.12; vec2 ribosome=vec2(sin(layer.x*7.8+t*4.45+fi*0.6)*cos(layer.y*7.2+t*3.95+fi*0.8),cos(layer.x*6.8+t*4.85+fi*0.9)*sin(layer.y*8.2+t*4.35+fi*0.7))*0.09; vec2 lysosome=vec2(sin(layer.x*8.5+t*5.2+fi*0.5)*cos(layer.y*8.0+t*4.8+fi*0.65),cos(layer.x*7.8+t*5.6+fi*0.8)*sin(layer.y*9.0+t*5.2+fi*0.75))*0.07; vec2 plastid=vec2(sin(layer.x*9.2+t*5.8+fi*0.45)*cos(layer.y*8.8+t*5.4+fi*0.6),cos(layer.x*8.5+t*6.2+fi*0.7)*sin(layer.y*9.8+t*5.8+fi*0.65))*0.055; layer+=cell+nucleus*0.85+mitochondria*0.65+ribosome*0.45+lysosome*0.3+plastid*0.2; float morph1=t*0.58+fi*1.9+chaos1*4.2+fj*0.65; float morph2=t*0.85+fi*1.5+chaos2*3.8+fj*0.45; float morph3=t*0.68+fi*1.7+chaos3*3.5+fj*0.55; float morph4=t*0.52+fi*1.2+chaos4*3.0+fj*0.75; float morph5=t*0.75+fi*1.1+chaos5*3.3+fj*0.35; float morph6=t*0.62+fi*1.6+chaos6*2.8+fj*0.65; mat2 fluid1=mat2(cos(morph1)+cell.x*0.85,sin(morph1)+cell.y*0.65,-sin(morph1)+cell.y*0.55,cos(morph1)+cell.x*0.75); mat2 fluid2=mat2(cos(morph2*0.9)+nucleus.y*0.55,sin(morph2*0.9)+nucleus.x*0.45,-sin(morph2*0.9)+nucleus.x*0.4,cos(morph2*0.9)+nucleus.y*0.6); mat2 fluid3=mat2(cos(morph3*0.75)+mitochondria.x*0.4,sin(morph3*0.75)+mitochondria.y*0.32,-sin(morph3*0.75)+mitochondria.y*0.28,cos(morph3*0.75)+mitochondria.x*0.45); mat2 fluid4=mat2(cos(morph4*1.2)+pulse1*0.25,sin(morph4*1.2)+pulse1*0.2,-sin(morph4*1.2)+pulse1*0.18,cos(morph4*1.2)+pulse1*0.28); mat2 fluid5=mat2(cos(morph5*0.7)+ribosome.x*0.35,sin(morph5*0.7)+ribosome.y*0.28,-sin(morph5*0.7)+ribosome.y*0.24,cos(morph5*0.7)+ribosome.x*0.38); mat2 fluid6=mat2(cos(morph6*1.15)+lysosome.y*0.3,sin(morph6*1.15)+lysosome.x*0.25,-sin(morph6*1.15)+lysosome.x*0.22,cos(morph6*1.15)+lysosome.y*0.33); layer=fluid1*layer; layer=vec2(abs(layer.x*1.45)-0.95+sin(t*1.6+fi+chaos1)*0.8,abs(layer.y*1.35)-0.8+cos(t*1.35+fi+chaos2)*0.72); layer=fluid2*layer; layer=vec2(abs(layer.x*1.15)+sin(t*1.15+fi*1.6+chaos3)*0.52,abs(layer.y*1.25)+cos(t*1.45+fi*1.3+chaos4)*0.48); layer=fluid3*layer; layer=vec2(abs(layer.x*0.95)+sin(t*1.05+fi*1.8+chaos5)*0.45,abs(layer.y*1.05)+cos(t*1.25+fi*1.4+chaos6)*0.42); layer=fluid4*layer; layer=fluid5*(layer+vec2(sin(angle*3.8+r*4.5+t*3.8+fi),cos(angle*4.5+r*3.8+t*3.2+fi))*0.18); layer=fluid6*layer; float amoeba=length(layer)-0.22-sin(layer.x*10.5+layer.y*9.5+t*7.8+fi)*0.095; float tentacle=max(abs(layer.x*1.25+layer.y*0.95)-0.115,abs(layer.y*1.35-layer.x*0.65)-0.135); float virus=length(layer-vec2(sin(fi*3.5+fj)*0.7,cos(fi*3.2+fj)*0.65))-0.105-sin(length(layer)*19.0+t*12.5+fi*3.5)*0.045; float bacteria=min(abs(layer.x*1.65)-0.095,abs(layer.y*1.55)-0.085)+cos(length(layer)*16.5+t*11.0+fi*2.8)*0.035; float parasite=length(layer-vec2(cos(fi*4.2+t)*0.5,sin(fi*3.8+t)*0.45))-0.078-cos(length(layer)*22.0+t*14.5+fi*3.2)*0.028; float fungus=min(abs(layer.x*1.35+layer.y*0.85)-0.068,abs(layer.y*1.45-layer.x*0.75)-0.082)+sin(length(layer)*25.0+t*16.5+fi*3.8)*0.025; float prion=length(layer-vec2(sin(fi*5.0+fj)*0.32,cos(fi*4.8+fj)*0.28))-0.058-sin(length(layer)*28.0+t*19.0+fi*4.2)*0.022; float organism=min(min(min(min(min(amoeba,tentacle),min(virus,bacteria)),min(parasite,fungus)),prion),length(layer)-0.19)+sin(length(layer)*13.5+t*11.5+fi)*0.048; float life=exp(-abs(organism)*8.5); float glow=exp(-abs(organism)*4.5)*0.8; vec2 current1=vec2(sin(layer.x*10.5+t*5.2+fi+chaos1*5.8),cos(layer.y*10.0+t*4.8+fi+chaos2*5.5))*life*0.48; vec2 current2=vec2(cos(layer.x*8.2+t*4.2+fi*2.8+chaos2*4.8),sin(layer.y*7.5+t*5.8+fi*2.3+chaos1*4.2))*life*0.38; vec2 current3=vec2(sin(layer.x*11.5+t*6.2+fi*1.2+chaos3*5.2),cos(layer.y*11.0+t*5.8+fi*1.8+chaos3*4.5))*life*0.32; vec2 current4=vec2(cos(layer.x*9.0+t*4.8+fi*1.5+chaos4*4.5),sin(layer.y*8.5+t*6.5+fi*2.2+chaos4*3.8))*life*0.25; vec2 current5=vec2(sin(layer.x*12.2+t*6.8+fi*0.9+chaos5*4.8),cos(layer.y*12.0+t*6.2+fi*1.4+chaos5*4.2))*life*0.22; vec2 current6=vec2(cos(layer.x*13.0+t*7.5+fi*1.9+chaos6*4.2),sin(layer.y*12.8+t*7.0+fi*1.1+chaos6*3.8))*life*0.18; vec2 vortex=vec2(sin(angle*5.2+r*7.2+t*6.5+fi+fj),cos(angle*4.8+r*6.8+t*5.8+fi+fj))*life*0.28; vec2 spiral=vec2(sin(angle*7.2+r*5.8+t*8.2+fi*2.3+fj),cos(angle*6.8+r*6.2+t*7.5+fi*1.8+fj))*life*0.22; vec2 whirlpool=vec2(sin(angle*8.5+r*5.2+t*9.0+fi*0.9+chaos5),cos(angle*8.0+r*5.6+t*8.5+fi*1.2+chaos5))*life*0.18; vec2 cyclone=vec2(sin(angle*9.8+r*4.8+t*9.8+fi*1.6+chaos6),cos(angle*9.2+r*5.0+t*9.2+fi*1.9+chaos6))*life*0.15; vec2 typhoon=vec2(sin(angle*11.0+r*4.2+t*10.5+fi*0.7+chaos1),cos(angle*10.5+r*4.6+t*10.0+fi*1.0+chaos2))*life*0.12; layer+=current1+current2+current3+current4+current5+current6+vortex+spiral+whirlpool+cyclone+typhoon; float bio1=sin(length(layer)*12.5+t*7.8+fi+fj)*life; float bio2=cos(length(layer)*15.5+t*6.2+fi*2.3+fj)*life; float bio3=sin(length(layer)*17.5+t*6.8+fi*1.5+fj)*life; float bio4=cos(length(layer)*13.8+t*8.2+fi*0.9+fj)*life; float bio5=sin(length(layer)*19.5+t*9.0+fi*1.8+fj)*life; float bio6=cos(length(layer)*21.0+t*9.8+fi*1.3+fj)*life; vec3 dna1=vec3(sin(bio1*4.8+fi+chaos1)*0.3+0.7,sin(bio1*4.8+fi+chaos1+3.2)*0.3+0.7,sin(bio1*4.8+fi+chaos1+6.5)*0.3+0.7); vec3 dna2=vec3(cos(bio2*4.2+fi+chaos2+1.8)*0.3+0.7,cos(bio2*4.2+fi+chaos2+5.0)*0.3+0.7,cos(bio2*4.2+fi+chaos2+8.2)*0.3+0.7); vec3 rna=vec3(sin(bio3*3.8+fi+chaos3+1.4)*0.35+0.65,cos(bio3*3.8+fi+chaos3+4.8)*0.35+0.65,sin(bio3*3.8+fi+chaos3+8.0)*0.35+0.65); vec3 mrna=vec3(cos(bio4*3.2+fi+chaos4+0.8)*0.35+0.65,sin(bio4*3.2+fi+chaos4+4.0)*0.35+0.65,cos(bio4*3.2+fi+chaos4+7.5)*0.35+0.65); vec3 trna=vec3(sin(bio5*3.6+fi+chaos5+2.5)*0.3+0.7,cos(bio5*3.6+fi+chaos5+5.8)*0.3+0.7,sin(bio5*3.6+fi+chaos5+9.2)*0.3+0.7); vec3 rrna=vec3(cos(bio6*4.5+fi+chaos6+1.5)*0.3+0.7,sin(bio6*4.5+fi+chaos6+4.8)*0.3+0.7,cos(bio6*4.5+fi+chaos6+8.5)*0.3+0.7); vec3 enzyme=mix(mix(mix(dna1,dna2,sin(t*3.2+fi+chaos1*4.0+chaos2*3.5)*0.4+0.6),mix(rna,mrna,cos(t*2.8+fi+chaos3*3.8+chaos4*3.2)*0.4+0.6),sin(t*2.2+chaos5*2.8)*0.4+0.6),mix(trna,rrna,cos(t*2.6+chaos6*3.2+chaos1*2.5)*0.4+0.6),sin(t*1.9+chaos2*3.0)*0.4+0.6); float protein=sin(length(layer)*24.0+t*10.8+fi*3.5+chaos1*5.8)*cos(length(layer)*20.0+t*9.2+fi*3.0+chaos2*5.2)*life*0.75; float lipid=cos(length(layer)*26.0+t*11.5+fi*2.2+chaos3*5.5)*sin(length(layer)*21.5+t*9.8+fi*2.5+chaos4*4.8)*life*0.65; float carb=sin(length(layer)*28.0+t*12.2+fi*1.8+chaos5*5.2)*cos(length(layer)*23.0+t*10.5+fi*2.0+chaos6*4.5)*life*0.55; float steroid=cos(length(layer)*30.0+t*13.0+fi*1.5+chaos1*4.8)*sin(length(layer)*25.0+t*11.2+fi*2.8+chaos2*4.2)*life*0.45; vec3 cell_color=enzyme*(1.2+protein+lipid*0.8+carb*0.6+steroid*0.5)+vec3(glow*0.5,glow*0.4,glow*0.6); col+=cell_color*life*(1.1-fi*0.04)*pow(0.92,fj); float division=sin(angle*7.5+t*7.0+length(layer)*7.5+chaos1*5.2)*0.2+1.05; float cytoplasm=cos(angle*7.0+t*5.5+r*12.0+chaos2*4.8)*0.15+1.0; float membrane=sin(angle*8.2+t*7.8+r*14.0+chaos3*4.5)*0.12+1.05; float wall=cos(angle*8.8+t*8.5+r*16.0+chaos4*4.2)*0.1+1.02; float plastid_env=sin(angle*8.0+t*7.2+r*13.0+chaos5*4.0)*0.08+1.04; float vacuole=cos(angle*9.2+t*8.0+r*15.0+chaos6*3.8)*0.06+1.03; col*=division*cytoplasm*membrane*wall*plastid_env*vacuole; float symbiosis=sin(layer.x*32.0+layer.y*28.0+t*14.5+fi+chaos1*7.5)*cos(layer.x*22.0-layer.y*18.0+t*12.2+fi+chaos2*6.8)*life*0.65; float metabolism=cos(layer.x*35.0+layer.y*31.0+t*15.2+fi*2.5+chaos3*7.2)*sin(layer.x*24.0-layer.y*20.0+t*13.0+fi*1.8+chaos1*6.2)*life*0.55; float photosynthesis=sin(layer.x*38.0+layer.y*34.0+t*16.0+fi*1.2+chaos4*6.8)*cos(layer.x*26.0-layer.y*22.0+t*13.8+fi*2.2+chaos5*5.8)*life*0.45; col+=symbiosis*enzyme*1.0+metabolism*rna*0.75+photosynthesis*mrna*0.65; float neural=sin(r*19.5+angle*13.0+t*9.5+chaos1*5.2)*exp(-r*0.42)*life*0.75; float synaptic=cos(r*22.0+angle*15.0+t*10.2+chaos2*4.8)*exp(-r*0.48)*life*0.62; float dendritic=sin(r*25.0+angle*17.0+t*11.0+chaos3*4.5)*exp(-r*0.55)*life*0.48; col+=neural*dna2*0.65+synaptic*rna*0.52+dendritic*mrna*0.42; float lightBurst=sin(t*4.5+fi*2.0)*cos(t*3.8+fi*1.5)*glow*0.35; col+=vec3(lightBurst*1.2,lightBurst*1.0,lightBurst*1.4);}} col=pow(col*0.28,vec3(0.65)); float ecosystem=sin(angle*11.5+r*10.5+t*5.0+chaos1*4.2)*cos(angle*9.5+r*15.5-t*8.8+chaos2*3.8)*exp(-r*0.38)*1.1; float biosphere=cos(angle*13.5+r*12.0+t*5.8+chaos3*3.5)*sin(angle*10.5+r*17.0-t*9.5+chaos1*3.2)*exp(-r*0.45)*0.85; float atmosphere=sin(angle*15.0+r*9.8+t*6.5+chaos4*3.2)*cos(angle*12.0+r*13.2-t*10.2+chaos5*2.8)*exp(-r*0.52)*0.65; float hydrosphere=cos(angle*16.5+r*11.5+t*7.2+chaos6*2.8)*sin(angle*13.5+r*15.5-t*11.0+chaos2*2.5)*exp(-r*0.58)*0.48; col*=vec3(i0,i1,i2)*(0.85+ecosystem+biosphere+atmosphere+hydrosphere); col=mix(col,vec3(length(col))*0.45,0.02); col+=vec3(0.08,0.06,0.1); vec4(col,1.0)', 3.2, 2.2, 2.8);


window.gl032n = () => glsl('vec2 p=(_st-0.5)*11.5; float warp1=sin(p.x*0.8+time*0.15)*0.45+cos(p.y*0.65+time*0.22)*0.4; float warp2=cos(p.x*1.2-time*0.18)*0.35+sin(p.y*0.85-time*0.28)*0.38; p.x+=sin(p.y*3.2+time*0.52)*0.68+warp1+warp2*0.6; p.y+=cos(p.x*2.8+time*0.65)*0.62+warp1*0.8+warp2; vec2 drift=vec2(sin(time*0.08)*0.15,cos(time*0.12)*0.18); p+=drift; p=mat2(cos(0.35+sin(time*0.18)*0.32),-sin(0.35+cos(time*0.15)*0.28),sin(0.35+sin(time*0.22)*0.3),cos(0.35+cos(time*0.16)*0.25))*p; float t=time*0.22; vec3 col=vec3(0.2,0.15,0.25); vec2 uv=p; float angle=atan(p.y,p.x)+sin(t*0.32)*0.28; float r=length(p)+cos(t*0.45)*0.35; float chaos1=sin(t*1.05)*cos(t*1.35)*0.72; float chaos2=cos(t*0.78)*sin(t*1.65)*0.65; float chaos3=sin(t*0.52)*cos(t*2.15)*0.58; float chaos4=cos(t*0.42)*sin(t*1.95)*0.52; float chaos5=sin(t*1.15)*cos(t*0.85)*0.45; float chaos6=cos(t*0.68)*sin(t*1.25)*0.42; float rainbow=sin(t*0.35+r*2.0)*0.5+0.5; for(int j=0;j<2;j++){float fj=float(j)*3.5; vec2 layer=uv*pow(0.75,fj); for(int i=0;i<12;i++){float fi=float(i)*0.25+fj*0.12; float pulse1=sin(t*0.45+fi+fj)*0.35; float pulse2=cos(t*0.38+fi*1.5+fj*0.8)*0.28; float pulse3=sin(t*0.52+fi*0.7+fj*1.2)*0.22; vec2 cell=vec2(sin(layer.x*4.5+t*1.85+fi)*cos(layer.y*3.8+t*1.55+fi),cos(layer.x*3.2+t*2.15+fi)*sin(layer.y*4.8+t*1.85+fi))*0.25; vec2 nucleus=vec2(sin(layer.x*5.5+t*2.85+fi*1.8)*cos(layer.y*5.0+t*2.35+fi*1.6),cos(layer.x*4.2+t*3.15+fi*1.2)*sin(layer.y*5.8+t*2.65+fi*1.4))*0.18; vec2 mitochondria=vec2(sin(layer.x*6.8+t*3.65+fi*0.9)*cos(layer.y*6.2+t*3.15+fi*0.7),cos(layer.x*5.8+t*4.05+fi*1.1)*sin(layer.y*7.2+t*3.65+fi*1.0))*0.12; vec2 ribosome=vec2(sin(layer.x*7.8+t*4.45+fi*0.6)*cos(layer.y*7.2+t*3.95+fi*0.8),cos(layer.x*6.8+t*4.85+fi*0.9)*sin(layer.y*8.2+t*4.35+fi*0.7))*0.09; vec2 lysosome=vec2(sin(layer.x*8.5+t*5.2+fi*0.5)*cos(layer.y*8.0+t*4.8+fi*0.65),cos(layer.x*7.8+t*5.6+fi*0.8)*sin(layer.y*9.0+t*5.2+fi*0.75))*0.07; vec2 plastid=vec2(sin(layer.x*9.2+t*5.8+fi*0.45)*cos(layer.y*8.8+t*5.4+fi*0.6),cos(layer.x*8.5+t*6.2+fi*0.7)*sin(layer.y*9.8+t*5.8+fi*0.65))*0.055; layer+=cell+nucleus*0.85+mitochondria*0.65+ribosome*0.45+lysosome*0.3+plastid*0.2; float morph1=t*0.58+fi*1.9+chaos1*4.2+fj*0.65; float morph2=t*0.85+fi*1.5+chaos2*3.8+fj*0.45; float morph3=t*0.68+fi*1.7+chaos3*3.5+fj*0.55; float morph4=t*0.52+fi*1.2+chaos4*3.0+fj*0.75; float morph5=t*0.75+fi*1.1+chaos5*3.3+fj*0.35; float morph6=t*0.62+fi*1.6+chaos6*2.8+fj*0.65; mat2 fluid1=mat2(cos(morph1)+cell.x*0.85,sin(morph1)+cell.y*0.65,-sin(morph1)+cell.y*0.55,cos(morph1)+cell.x*0.75); mat2 fluid2=mat2(cos(morph2*0.9)+nucleus.y*0.55,sin(morph2*0.9)+nucleus.x*0.45,-sin(morph2*0.9)+nucleus.x*0.4,cos(morph2*0.9)+nucleus.y*0.6); mat2 fluid3=mat2(cos(morph3*0.75)+mitochondria.x*0.4,sin(morph3*0.75)+mitochondria.y*0.32,-sin(morph3*0.75)+mitochondria.y*0.28,cos(morph3*0.75)+mitochondria.x*0.45); mat2 fluid4=mat2(cos(morph4*1.2)+pulse1*0.25,sin(morph4*1.2)+pulse1*0.2,-sin(morph4*1.2)+pulse1*0.18,cos(morph4*1.2)+pulse1*0.28); mat2 fluid5=mat2(cos(morph5*0.7)+ribosome.x*0.35,sin(morph5*0.7)+ribosome.y*0.28,-sin(morph5*0.7)+ribosome.y*0.24,cos(morph5*0.7)+ribosome.x*0.38); mat2 fluid6=mat2(cos(morph6*1.15)+lysosome.y*0.3,sin(morph6*1.15)+lysosome.x*0.25,-sin(morph6*1.15)+lysosome.x*0.22,cos(morph6*1.15)+lysosome.y*0.33); layer=fluid1*layer; layer=vec2(abs(layer.x*1.45)-0.95+sin(t*1.6+fi+chaos1)*0.8,abs(layer.y*1.35)-0.8+cos(t*1.35+fi+chaos2)*0.72); layer=fluid2*layer; layer=vec2(abs(layer.x*1.15)+sin(t*1.15+fi*1.6+chaos3)*0.52,abs(layer.y*1.25)+cos(t*1.45+fi*1.3+chaos4)*0.48); layer=fluid3*layer; layer=vec2(abs(layer.x*0.95)+sin(t*1.05+fi*1.8+chaos5)*0.45,abs(layer.y*1.05)+cos(t*1.25+fi*1.4+chaos6)*0.42); layer=fluid4*layer; layer=fluid5*(layer+vec2(sin(angle*3.8+r*4.5+t*3.8+fi),cos(angle*4.5+r*3.8+t*3.2+fi))*0.18); layer=fluid6*layer; float amoeba=length(layer)-0.22-sin(layer.x*10.5+layer.y*9.5+t*7.8+fi)*0.095; float tentacle=max(abs(layer.x*1.25+layer.y*0.95)-0.115,abs(layer.y*1.35-layer.x*0.65)-0.135); float virus=length(layer-vec2(sin(fi*3.5+fj)*0.7,cos(fi*3.2+fj)*0.65))-0.105-sin(length(layer)*19.0+t*12.5+fi*3.5)*0.045; float bacteria=min(abs(layer.x*1.65)-0.095,abs(layer.y*1.55)-0.085)+cos(length(layer)*16.5+t*11.0+fi*2.8)*0.035; float parasite=length(layer-vec2(cos(fi*4.2+t)*0.5,sin(fi*3.8+t)*0.45))-0.078-cos(length(layer)*22.0+t*14.5+fi*3.2)*0.028; float fungus=min(abs(layer.x*1.35+layer.y*0.85)-0.068,abs(layer.y*1.45-layer.x*0.75)-0.082)+sin(length(layer)*25.0+t*16.5+fi*3.8)*0.025; float prion=length(layer-vec2(sin(fi*5.0+fj)*0.32,cos(fi*4.8+fj)*0.28))-0.058-sin(length(layer)*28.0+t*19.0+fi*4.2)*0.022; float organism=min(min(min(min(min(amoeba,tentacle),min(virus,bacteria)),min(parasite,fungus)),prion),length(layer)-0.19)+sin(length(layer)*13.5+t*11.5+fi)*0.048; float life=exp(-abs(organism)*7.5); float glow=exp(-abs(organism)*3.5)*0.95; float sparkle=exp(-abs(organism)*2.5)*0.7; vec2 current1=vec2(sin(layer.x*10.5+t*5.2+fi+chaos1*5.8),cos(layer.y*10.0+t*4.8+fi+chaos2*5.5))*life*0.48; vec2 current2=vec2(cos(layer.x*8.2+t*4.2+fi*2.8+chaos2*4.8),sin(layer.y*7.5+t*5.8+fi*2.3+chaos1*4.2))*life*0.38; vec2 current3=vec2(sin(layer.x*11.5+t*6.2+fi*1.2+chaos3*5.2),cos(layer.y*11.0+t*5.8+fi*1.8+chaos3*4.5))*life*0.32; vec2 current4=vec2(cos(layer.x*9.0+t*4.8+fi*1.5+chaos4*4.5),sin(layer.y*8.5+t*6.5+fi*2.2+chaos4*3.8))*life*0.25; vec2 current5=vec2(sin(layer.x*12.2+t*6.8+fi*0.9+chaos5*4.8),cos(layer.y*12.0+t*6.2+fi*1.4+chaos5*4.2))*life*0.22; vec2 current6=vec2(cos(layer.x*13.0+t*7.5+fi*1.9+chaos6*4.2),sin(layer.y*12.8+t*7.0+fi*1.1+chaos6*3.8))*life*0.18; vec2 vortex=vec2(sin(angle*5.2+r*7.2+t*6.5+fi+fj),cos(angle*4.8+r*6.8+t*5.8+fi+fj))*life*0.28; vec2 spiral=vec2(sin(angle*7.2+r*5.8+t*8.2+fi*2.3+fj),cos(angle*6.8+r*6.2+t*7.5+fi*1.8+fj))*life*0.22; vec2 whirlpool=vec2(sin(angle*8.5+r*5.2+t*9.0+fi*0.9+chaos5),cos(angle*8.0+r*5.6+t*8.5+fi*1.2+chaos5))*life*0.18; vec2 cyclone=vec2(sin(angle*9.8+r*4.8+t*9.8+fi*1.6+chaos6),cos(angle*9.2+r*5.0+t*9.2+fi*1.9+chaos6))*life*0.15; vec2 typhoon=vec2(sin(angle*11.0+r*4.2+t*10.5+fi*0.7+chaos1),cos(angle*10.5+r*4.6+t*10.0+fi*1.0+chaos2))*life*0.12; layer+=current1+current2+current3+current4+current5+current6+vortex+spiral+whirlpool+cyclone+typhoon; float bio1=sin(length(layer)*12.5+t*7.8+fi+fj)*life; float bio2=cos(length(layer)*15.5+t*6.2+fi*2.3+fj)*life; float bio3=sin(length(layer)*17.5+t*6.8+fi*1.5+fj)*life; float bio4=cos(length(layer)*13.8+t*8.2+fi*0.9+fj)*life; float bio5=sin(length(layer)*19.5+t*9.0+fi*1.8+fj)*life; float bio6=cos(length(layer)*21.0+t*9.8+fi*1.3+fj)*life; float spectrum=sin(t*1.2+fi*3.0+fj*2.5)*0.5+0.5; vec3 dna1=vec3(sin(bio1*5.2+fi+chaos1+1.0)*0.4+0.6,cos(bio1*4.8+fi+chaos1+2.5)*0.45+0.55,sin(bio1*5.5+fi+chaos1+4.2)*0.35+0.65); vec3 dna2=vec3(cos(bio2*4.5+fi+chaos2+0.5)*0.35+0.65,sin(bio2*4.2+fi+chaos2+3.8)*0.4+0.6,cos(bio2*4.8+fi+chaos2+6.5)*0.45+0.55); vec3 rna=vec3(sin(bio3*4.0+fi+chaos3+2.2)*0.45+0.55,cos(bio3*3.8+fi+chaos3+4.0)*0.35+0.65,sin(bio3*4.2+fi+chaos3+7.5)*0.4+0.6); vec3 mrna=vec3(cos(bio4*3.5+fi+chaos4+1.5)*0.4+0.6,sin(bio4*3.2+fi+chaos4+5.2)*0.45+0.55,cos(bio4*3.8+fi+chaos4+8.0)*0.35+0.65); vec3 trna=vec3(sin(bio5*3.8+fi+chaos5+0.8)*0.35+0.65,cos(bio5*3.6+fi+chaos5+3.5)*0.45+0.55,sin(bio5*4.0+fi+chaos5+6.8)*0.4+0.6); vec3 rrna=vec3(cos(bio6*4.8+fi+chaos6+2.0)*0.4+0.6,sin(bio6*4.5+fi+chaos6+4.8)*0.35+0.65,cos(bio6*5.0+fi+chaos6+7.2)*0.45+0.55); vec3 enzyme=mix(mix(mix(dna1,dna2,sin(t*3.2+fi+chaos1*4.0+chaos2*3.5)*0.5+0.5),mix(rna,mrna,cos(t*2.8+fi+chaos3*3.8+chaos4*3.2)*0.5+0.5),sin(t*2.2+chaos5*2.8)*0.5+0.5),mix(trna,rrna,cos(t*2.6+chaos6*3.2+chaos1*2.5)*0.5+0.5),sin(t*1.9+chaos2*3.0)*0.5+0.5); enzyme*=vec3(1.0+spectrum*0.5,1.0+spectrum*0.3,1.0+spectrum*0.4); float protein=sin(length(layer)*24.0+t*10.8+fi*3.5+chaos1*5.8)*cos(length(layer)*20.0+t*9.2+fi*3.0+chaos2*5.2)*life*0.85; float lipid=cos(length(layer)*26.0+t*11.5+fi*2.2+chaos3*5.5)*sin(length(layer)*21.5+t*9.8+fi*2.5+chaos4*4.8)*life*0.75; float carb=sin(length(layer)*28.0+t*12.2+fi*1.8+chaos5*5.2)*cos(length(layer)*23.0+t*10.5+fi*2.0+chaos6*4.5)*life*0.65; float steroid=cos(length(layer)*30.0+t*13.0+fi*1.5+chaos1*4.8)*sin(length(layer)*25.0+t*11.2+fi*2.8+chaos2*4.2)*life*0.55; vec3 cell_color=enzyme*(1.35+protein+lipid*0.9+carb*0.7+steroid*0.6); vec3 glowColor=vec3(glow*0.8+sin(t*2.5+fi)*0.2,glow*0.6+cos(t*2.8+fi*1.2)*0.25,glow*0.9+sin(t*3.2+fi*0.8)*0.3); vec3 sparkleColor=vec3(sparkle*cos(t*5.0+fi*2.0),sparkle*sin(t*4.5+fi*1.8),sparkle*cos(t*5.5+fi*2.2)); cell_color+=glowColor+sparkleColor*0.5; cell_color*=vec3(1.2+rainbow*0.3,1.1+rainbow*0.2,1.3+rainbow*0.4); col+=cell_color*life*(1.2-fi*0.03)*pow(0.94,fj); float division=sin(angle*7.5+t*7.0+length(layer)*7.5+chaos1*5.2)*0.25+1.1; float cytoplasm=cos(angle*7.0+t*5.5+r*12.0+chaos2*4.8)*0.2+1.05; float membrane=sin(angle*8.2+t*7.8+r*14.0+chaos3*4.5)*0.15+1.1; float wall=cos(angle*8.8+t*8.5+r*16.0+chaos4*4.2)*0.12+1.05; float plastid_env=sin(angle*8.0+t*7.2+r*13.0+chaos5*4.0)*0.1+1.08; float vacuole=cos(angle*9.2+t*8.0+r*15.0+chaos6*3.8)*0.08+1.06; col*=division*cytoplasm*membrane*wall*plastid_env*vacuole; float symbiosis=sin(layer.x*32.0+layer.y*28.0+t*14.5+fi+chaos1*7.5)*cos(layer.x*22.0-layer.y*18.0+t*12.2+fi+chaos2*6.8)*life*0.75; float metabolism=cos(layer.x*35.0+layer.y*31.0+t*15.2+fi*2.5+chaos3*7.2)*sin(layer.x*24.0-layer.y*20.0+t*13.0+fi*1.8+chaos1*6.2)*life*0.65; float photosynthesis=sin(layer.x*38.0+layer.y*34.0+t*16.0+fi*1.2+chaos4*6.8)*cos(layer.x*26.0-layer.y*22.0+t*13.8+fi*2.2+chaos5*5.8)*life*0.55; vec3 metabolicColor=vec3(symbiosis*1.5,metabolism*1.3,photosynthesis*1.4); col+=metabolicColor*enzyme*1.2+metabolism*rna*0.85+photosynthesis*mrna*0.75; float neural=sin(r*19.5+angle*13.0+t*9.5+chaos1*5.2)*exp(-r*0.35)*life*0.85; float synaptic=cos(r*22.0+angle*15.0+t*10.2+chaos2*4.8)*exp(-r*0.42)*life*0.72; float dendritic=sin(r*25.0+angle*17.0+t*11.0+chaos3*4.5)*exp(-r*0.48)*life*0.58; vec3 neuralColor=vec3(neural*1.3,synaptic*1.1,dendritic*1.2); col+=neuralColor*dna2*0.75+synaptic*rna*0.62+dendritic*mrna*0.52; float lightBurst=sin(t*4.5+fi*2.0)*cos(t*3.8+fi*1.5)*glow*0.45; float colorBurst=cos(t*3.2+fi*1.8)*sin(t*5.5+fi*2.5)*sparkle*0.35; col+=vec3(lightBurst*1.4+colorBurst*0.8,lightBurst*1.2+colorBurst*1.0,lightBurst*1.6+colorBurst*0.6); float prism=sin(angle*20.0+r*8.0+t*12.0)*cos(angle*18.0+r*10.0+t*10.0)*0.15; col+=vec3(prism*1.2,prism*0.8,prism*1.5)*life;}} col=pow(col*0.35,vec3(0.58)); float ecosystem=sin(angle*11.5+r*10.5+t*5.0+chaos1*4.2)*cos(angle*9.5+r*15.5-t*8.8+chaos2*3.8)*exp(-r*0.32)*1.25; float biosphere=cos(angle*13.5+r*12.0+t*5.8+chaos3*3.5)*sin(angle*10.5+r*17.0-t*9.5+chaos1*3.2)*exp(-r*0.38)*1.0; float atmosphere=sin(angle*15.0+r*9.8+t*6.5+chaos4*3.2)*cos(angle*12.0+r*13.2-t*10.2+chaos5*2.8)*exp(-r*0.45)*0.8; float hydrosphere=cos(angle*16.5+r*11.5+t*7.2+chaos6*2.8)*sin(angle*13.5+r*15.5-t*11.0+chaos2*2.5)*exp(-r*0.52)*0.6; vec3 environmentColor=vec3(ecosystem*1.1+rainbow*0.3,biosphere*1.0+rainbow*0.2,atmosphere*1.2+rainbow*0.4); col*=vec3(i0,i1,i2)*(1.0+ecosystem+biosphere+atmosphere+hydrosphere); col+=environmentColor*0.15; col=mix(col,vec3(length(col))*0.55,0.015); col+=vec3(0.12,0.08,0.15); col=clamp(col,0.0,2.5); vec4(col,1.0)', 3.2, 2.2, 2.8);


window.gl032o = () => glsl('vec2 p=(_st-0.5)*11.5; float warp1=sin(p.x*1.2+time*0.25)*0.6+cos(p.y*0.95+time*0.35)*0.55; float warp2=cos(p.x*1.8-time*0.3)*0.5+sin(p.y*1.25-time*0.45)*0.52; p.x+=sin(p.y*4.2+time*0.75)*0.85+warp1+warp2*0.8; p.y+=cos(p.x*3.8+time*0.9)*0.8+warp1*1.1+warp2; vec2 drift=vec2(sin(time*0.12)*0.25,cos(time*0.18)*0.28); p+=drift; p=mat2(cos(0.5+sin(time*0.28)*0.45),-sin(0.5+cos(time*0.22)*0.4),sin(0.5+sin(time*0.32)*0.42),cos(0.5+cos(time*0.25)*0.35))*p; float t=time*0.35; vec3 col=vec3(0.05); vec2 uv=p; float angle=atan(p.y,p.x)+sin(t*0.48)*0.4; float r=length(p)+cos(t*0.65)*0.5; float chaos1=sin(t*1.5)*cos(t*1.8)*0.9; float chaos2=cos(t*1.1)*sin(t*2.2)*0.85; float chaos3=sin(t*0.75)*cos(t*2.8)*0.8; float chaos4=cos(t*0.65)*sin(t*2.5)*0.75; float chaos5=sin(t*1.8)*cos(t*1.2)*0.7; float chaos6=cos(t*0.95)*sin(t*1.9)*0.65; float rainbow1=sin(t*0.5+r*3.0+angle*2.0); float rainbow2=sin(t*0.7+r*2.5+angle*3.0+2.1); float rainbow3=sin(t*0.9+r*4.0+angle*1.5+4.2); for(int j=0;j<2;j++){float fj=float(j)*3.5; vec2 layer=uv*pow(0.75,fj); for(int i=0;i<12;i++){float fi=float(i)*0.25+fj*0.12; float pulse1=sin(t*0.65+fi+fj)*0.5; float pulse2=cos(t*0.55+fi*1.8+fj*1.1)*0.42; float pulse3=sin(t*0.75+fi*0.9+fj*1.6)*0.35; vec2 cell=vec2(sin(layer.x*5.5+t*2.5+fi)*cos(layer.y*4.8+t*2.1+fi),cos(layer.x*4.2+t*2.9+fi)*sin(layer.y*5.8+t*2.5+fi))*0.35; vec2 nucleus=vec2(sin(layer.x*6.5+t*3.8+fi*2.1)*cos(layer.y*6.0+t*3.2+fi*1.9),cos(layer.x*5.2+t*4.2+fi*1.5)*sin(layer.y*6.8+t*3.6+fi*1.7))*0.28; vec2 mitochondria=vec2(sin(layer.x*7.8+t*4.9+fi*1.2)*cos(layer.y*7.2+t*4.2+fi*0.9),cos(layer.x*6.8+t*5.4+fi*1.4)*sin(layer.y*8.2+t*4.9+fi*1.3))*0.18; vec2 ribosome=vec2(sin(layer.x*8.8+t*5.9+fi*0.8)*cos(layer.y*8.2+t*5.3+fi*1.1),cos(layer.x*7.8+t*6.4+fi*1.2)*sin(layer.y*9.2+t*5.8+fi*0.9))*0.14; vec2 lysosome=vec2(sin(layer.x*9.5+t*6.9+fi*0.7)*cos(layer.y*9.0+t*6.4+fi*0.9),cos(layer.x*8.8+t*7.4+fi*1.1)*sin(layer.y*10.0+t*6.9+fi*1.0))*0.11; vec2 plastid=vec2(sin(layer.x*10.2+t*7.7+fi*0.6)*cos(layer.y*9.8+t*7.1+fi*0.8),cos(layer.x*9.5+t*8.2+fi*0.9)*sin(layer.y*10.8+t*7.7+fi*0.85))*0.085; layer+=cell+nucleus*1.0+mitochondria*0.8+ribosome*0.6+lysosome*0.4+plastid*0.3; float morph1=t*0.8+fi*2.5+chaos1*5.5+fj*0.9; float morph2=t*1.15+fi*2.0+chaos2*5.0+fj*0.65; float morph3=t*0.95+fi*2.3+chaos3*4.8+fj*0.8; float morph4=t*0.72+fi*1.6+chaos4*4.2+fj*1.0; float morph5=t*1.05+fi*1.4+chaos5*4.6+fj*0.5; float morph6=t*0.85+fi*2.1+chaos6*3.9+fj*0.9; mat2 fluid1=mat2(cos(morph1)+cell.x*1.1,sin(morph1)+cell.y*0.9,-sin(morph1)+cell.y*0.8,cos(morph1)+cell.x*1.0); mat2 fluid2=mat2(cos(morph2*1.1)+nucleus.y*0.8,sin(morph2*1.1)+nucleus.x*0.65,-sin(morph2*1.1)+nucleus.x*0.6,cos(morph2*1.1)+nucleus.y*0.85); mat2 fluid3=mat2(cos(morph3*0.9)+mitochondria.x*0.6,sin(morph3*0.9)+mitochondria.y*0.48,-sin(morph3*0.9)+mitochondria.y*0.42,cos(morph3*0.9)+mitochondria.x*0.65); mat2 fluid4=mat2(cos(morph4*1.5)+pulse1*0.4,sin(morph4*1.5)+pulse1*0.32,-sin(morph4*1.5)+pulse1*0.28,cos(morph4*1.5)+pulse1*0.45); mat2 fluid5=mat2(cos(morph5*0.8)+ribosome.x*0.5,sin(morph5*0.8)+ribosome.y*0.4,-sin(morph5*0.8)+ribosome.y*0.36,cos(morph5*0.8)+ribosome.x*0.55); mat2 fluid6=mat2(cos(morph6*1.4)+lysosome.y*0.45,sin(morph6*1.4)+lysosome.x*0.38,-sin(morph6*1.4)+lysosome.x*0.34,cos(morph6*1.4)+lysosome.y*0.48); layer=fluid1*layer; layer=vec2(abs(layer.x*1.8)-1.2+sin(t*2.2+fi+chaos1)*1.0,abs(layer.y*1.7)-1.0+cos(t*1.9+fi+chaos2)*0.9); layer=fluid2*layer; layer=vec2(abs(layer.x*1.4)+sin(t*1.6+fi*2.1+chaos3)*0.7,abs(layer.y*1.5)+cos(t*1.9+fi*1.7+chaos4)*0.65); layer=fluid3*layer; layer=vec2(abs(layer.x*1.15)+sin(t*1.4+fi*2.3+chaos5)*0.6,abs(layer.y*1.25)+cos(t*1.7+fi*1.9+chaos6)*0.58); layer=fluid4*layer; layer=fluid5*(layer+vec2(sin(angle*5.0+r*6.0+t*5.0+fi),cos(angle*5.8+r*5.2+t*4.2+fi))*0.28); layer=fluid6*layer; float amoeba=length(layer)-0.32-sin(layer.x*14.0+layer.y*12.5+t*10.5+fi)*0.15; float tentacle=max(abs(layer.x*1.6+layer.y*1.2)-0.18,abs(layer.y*1.7-layer.x*0.9)-0.21); float virus=length(layer-vec2(sin(fi*4.5+fj)*0.9,cos(fi*4.0+fj)*0.85))-0.16-sin(length(layer)*24.0+t*16.8+fi*4.5)*0.07; float bacteria=min(abs(layer.x*2.1)-0.15,abs(layer.y*1.95)-0.13)+cos(length(layer)*21.0+t*14.8+fi*3.5)*0.055; float parasite=length(layer-vec2(cos(fi*5.5+t)*0.7,sin(fi*5.0+t)*0.65))-0.12-cos(length(layer)*28.0+t*19.5+fi*4.0)*0.045; float fungus=min(abs(layer.x*1.8+layer.y*1.1)-0.105,abs(layer.y*1.9-layer.x*1.0)-0.13)+sin(length(layer)*32.0+t*22.2+fi*4.8)*0.04; float prion=length(layer-vec2(sin(fi*6.5+fj)*0.45,cos(fi*6.0+fj)*0.4))-0.09-sin(length(layer)*36.0+t*25.5+fi*5.5)*0.035; float organism=min(min(min(min(min(amoeba,tentacle),min(virus,bacteria)),min(parasite,fungus)),prion),length(layer)-0.28)+sin(length(layer)*18.0+t*15.5+fi)*0.075; float life=exp(-abs(organism)*6.0); float glow=exp(-abs(organism)*2.5)*1.2; float sparkle=exp(-abs(organism)*1.8)*0.95; float flicker=sin(t*8.0+fi*3.0)*cos(t*6.5+fi*2.5)*0.3; vec2 current1=vec2(sin(layer.x*14.0+t*7.0+fi+chaos1*7.5),cos(layer.y*13.5+t*6.5+fi+chaos2*7.2))*life*0.65; vec2 current2=vec2(cos(layer.x*11.0+t*5.7+fi*3.5+chaos2*6.5),sin(layer.y*10.2+t*7.8+fi*2.9+chaos1*5.8))*life*0.52; vec2 current3=vec2(sin(layer.x*15.5+t*8.4+fi*1.6+chaos3*7.0),cos(layer.y*14.8+t*7.8+fi*2.3+chaos3*6.2))*life*0.45; vec2 current4=vec2(cos(layer.x*12.0+t*6.5+fi*2.0+chaos4*6.2),sin(layer.y*11.5+t*8.8+fi*2.8+chaos4*5.5))*life*0.38; vec2 current5=vec2(sin(layer.x*16.5+t*9.2+fi*1.2+chaos5*6.5),cos(layer.y*16.0+t*8.4+fi*1.8+chaos5*5.8))*life*0.32; vec2 current6=vec2(cos(layer.x*17.5+t*10.1+fi*2.5+chaos6*5.8),sin(layer.y*17.2+t*9.4+fi*1.4+chaos6*5.2))*life*0.28; vec2 vortex=vec2(sin(angle*7.0+r*9.5+t*8.8+fi+fj),cos(angle*6.5+r*9.0+t*7.8+fi+fj))*life*0.42; vec2 spiral=vec2(sin(angle*9.5+r*7.8+t*11.0+fi*2.9+fj),cos(angle*9.0+r*8.2+t*10.1+fi*2.3+fj))*life*0.35; vec2 whirlpool=vec2(sin(angle*11.2+r*7.0+t*12.2+fi*1.2+chaos5),cos(angle*10.5+r*7.6+t*11.5+fi*1.6+chaos5))*life*0.28; vec2 cyclone=vec2(sin(angle*13.0+r*6.5+t*13.2+fi*2.1+chaos6),cos(angle*12.2+r*6.8+t*12.4+fi*2.5+chaos6))*life*0.22; vec2 typhoon=vec2(sin(angle*14.5+r*5.7+t*14.2+fi*0.9+chaos1),cos(angle*13.8+r*6.2+t*13.5+fi*1.3+chaos2))*life*0.18; layer+=current1+current2+current3+current4+current5+current6+vortex+spiral+whirlpool+cyclone+typhoon; float bio1=sin(length(layer)*16.8+t*10.5+fi+fj+flicker)*life; float bio2=cos(length(layer)*20.9+t*8.4+fi*2.9+fj+flicker)*life; float bio3=sin(length(layer)*23.5+t*9.2+fi*1.9+fj+flicker)*life; float bio4=cos(length(layer)*18.6+t*11.1+fi*1.2+fj+flicker)*life; float bio5=sin(length(layer)*26.2+t*12.1+fi*2.3+fj+flicker)*life; float bio6=cos(length(layer)*28.3+t*13.2+fi*1.7+fj+flicker)*life; vec3 dna1=vec3(1.0+rainbow1*0.8,0.3+sin(bio1*6.5+fi+chaos1)*0.6,0.4+cos(bio1*5.8+fi+chaos1+1.5)*0.5); vec3 dna2=vec3(0.2+cos(bio2*5.8+fi+chaos2)*0.7,1.0+rainbow2*0.9,0.3+sin(bio2*6.2+fi+chaos2+2.8)*0.6); vec3 rna=vec3(0.5+sin(bio3*5.2+fi+chaos3)*0.4,0.4+cos(bio3*4.8+fi+chaos3+1.2)*0.5,1.0+rainbow3*0.85); vec3 mrna=vec3(0.9+cos(bio4*4.5+fi+chaos4)*0.8,0.6+sin(bio4*4.2+fi+chaos4+2.2)*0.3,0.5+cos(bio4*4.8+fi+chaos4+3.5)*0.4); vec3 trna=vec3(0.4+sin(bio5*4.8+fi+chaos5+0.5)*0.5,0.8+cos(bio5*4.5+fi+chaos5+1.8)*0.7,0.3+sin(bio5*5.0+fi+chaos5+3.2)*0.6); vec3 rrna=vec3(0.7+cos(bio6*6.0+fi+chaos6+1.2)*0.6,0.5+sin(bio6*5.5+fi+chaos6+2.5)*0.4,0.8+cos(bio6*6.2+fi+chaos6+4.0)*0.7); vec3 enzyme=mix(mix(mix(dna1,dna2,sin(t*4.2+fi+chaos1*5.5+chaos2*4.8)*0.6+0.4),mix(rna,mrna,cos(t*3.8+fi+chaos3*5.2+chaos4*4.5)*0.6+0.4),sin(t*3.2+chaos5*3.8)*0.6+0.4),mix(trna,rrna,cos(t*3.6+chaos6*4.2+chaos1*3.5)*0.6+0.4),sin(t*2.9+chaos2*4.0)*0.6+0.4); float protein=sin(length(layer)*32.0+t*14.5+fi*4.5+chaos1*7.8)*cos(length(layer)*27.0+t*12.4+fi*3.8+chaos2*7.0)*life*1.1; float lipid=cos(length(layer)*35.0+t*15.5+fi*2.9+chaos3*7.5)*sin(length(layer)*29.0+t*13.2+fi*3.2+chaos4*6.5)*life*0.95; float carb=sin(length(layer)*38.0+t*16.4+fi*2.3+chaos5*7.2)*cos(length(layer)*31.0+t*14.1+fi*2.6+chaos6*6.2)*life*0.8; float steroid=cos(length(layer)*40.0+t*17.5+fi*1.9+chaos1*6.8)*sin(length(layer)*33.0+t*15.1+fi*3.5+chaos2*5.8)*life*0.7; vec3 cell_color=enzyme*(1.8+protein+lipid*1.2+carb*0.9+steroid*0.8); vec3 glowColor=vec3(glow*(1.2+sin(t*3.5+fi)*0.4),glow*(0.9+cos(t*4.2+fi*1.5)*0.5),glow*(1.4+sin(t*4.8+fi*0.9)*0.6)); vec3 sparkleColor=vec3(sparkle*cos(t*7.5+fi*2.5)*1.1,sparkle*sin(t*6.8+fi*2.2)*0.9,sparkle*cos(t*8.2+fi*2.8)*1.3); cell_color+=glowColor+sparkleColor*0.7; vec3 rainbow_shift=vec3(0.5+rainbow1*0.4,0.5+rainbow2*0.3,0.5+rainbow3*0.5); cell_color*=vec3(1.5+rainbow_shift.x*0.5,1.3+rainbow_shift.y*0.4,1.7+rainbow_shift.z*0.6); col+=cell_color*life*(1.4-fi*0.025)*pow(0.96,fj); float division=sin(angle*10.0+t*9.5+length(layer)*10.0+chaos1*7.0)*0.35+1.2; float cytoplasm=cos(angle*9.5+t*7.5+r*16.0+chaos2*6.5)*0.28+1.1; float membrane=sin(angle*11.0+t*10.5+r*18.0+chaos3*6.0)*0.22+1.15; float wall=cos(angle*11.8+t*11.5+r*21.0+chaos4*5.5)*0.18+1.08; float plastid_env=sin(angle*10.5+t*9.7+r*17.5+chaos5*5.2)*0.15+1.12; float vacuole=cos(angle*12.5+t*10.8+r*20.0+chaos6*4.8)*0.12+1.09; col*=division*cytoplasm*membrane*wall*plastid_env*vacuole; float symbiosis=sin(layer.x*42.0+layer.y*38.0+t*19.5+fi+chaos1*9.5)*cos(layer.x*29.0-layer.y*24.0+t*16.4+fi+chaos2*8.5)*life*1.0; float metabolism=cos(layer.x*46.0+layer.y*41.0+t*20.4+fi*3.2+chaos3*9.0)*sin(layer.x*32.0-layer.y*27.0+t*17.5+fi*2.3+chaos1*8.2)*life*0.85; float photosynthesis=sin(layer.x*50.0+layer.y*45.0+t*21.5+fi*1.6+chaos4*8.8)*cos(layer.x*35.0-layer.y*29.0+t*18.6+fi*2.8+chaos5*7.8)*life*0.75; vec3 metabolicColor=vec3(symbiosis*2.0,metabolism*1.8,photosynthesis*1.9); col+=metabolicColor*enzyme*1.6+metabolism*rna*1.15+photosynthesis*mrna*1.0; float neural=sin(r*26.0+angle*17.5+t*12.8+chaos1*7.0)*exp(-r*0.28)*life*1.15; float synaptic=cos(r*29.5+angle*20.2+t*13.7+chaos2*6.5)*exp(-r*0.34)*life*0.95; float dendritic=sin(r*33.0+angle*23.0+t*14.8+chaos3*6.0)*exp(-r*0.4)*life*0.8; vec3 neuralColor=vec3(neural*1.8,synaptic*1.5,dendritic*1.6); col+=neuralColor*dna2*1.0+synaptic*rna*0.85+dendritic*mrna*0.7; float lightBurst=sin(t*6.5+fi*2.8)*cos(t*5.5+fi*2.1)*glow*0.65; float colorBurst=cos(t*4.8+fi*2.5)*sin(t*7.8+fi*3.5)*sparkle*0.5; col+=vec3(lightBurst*2.0+colorBurst*1.1,lightBurst*1.7+colorBurst*1.4,lightBurst*2.3+colorBurst*0.9); float prism=sin(angle*28.0+r*11.0+t*16.5)*cos(angle*25.0+r*13.5+t*13.8)*0.25; col+=vec3(prism*1.8,prism*1.2,prism*2.1)*life;}} col=pow(col*0.45,vec3(0.48)); float ecosystem=sin(angle*15.5+r*14.0+t*6.8+chaos1*5.8)*cos(angle*12.8+r*20.5-t*11.9+chaos2*5.2)*exp(-r*0.25)*1.6; float biosphere=cos(angle*18.0+r*16.5+t*7.8+chaos3*4.8)*sin(angle*14.2+r*22.5-t*12.8+chaos1*4.5)*exp(-r*0.32)*1.3; float atmosphere=sin(angle*20.5+r*13.2+t*8.8+chaos4*4.2)*cos(angle*16.0+r*17.5-t*13.8+chaos5*3.8)*exp(-r*0.38)*1.1; float hydrosphere=cos(angle*22.8+r*15.5+t*9.7+chaos6*3.8)*sin(angle*18.2+r*20.5-t*14.8+chaos2*3.5)*exp(-r*0.45)*0.9; vec3 environmentColor=vec3(ecosystem*1.5+rainbow1*0.5,biosphere*1.3+rainbow2*0.4,atmosphere*1.8+rainbow3*0.6); col*=vec3(i0,i1,i2)*(1.2+ecosystem+biosphere+atmosphere+hydrosphere); col+=environmentColor*0.25; col=mix(col,vec3(length(col))*0.75,0.01); col+=vec3(0.18,0.12,0.22); col=clamp(col,0.0,3.5); vec4(col,1.0)', 3.2, 2.2, 2.8);


// ========================================
// GL033 - Fractal Reflection Portal
// ========================================

window.gl033 = () => glsl('vec2 p=(_st-0.5)*6.0; float t=time*0.12; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p; float storm=sin(t*0.5)*cos(t*0.7)*0.5; float turbulence=cos(t*0.3)*sin(t*0.9)*0.4; for(int i=0;i<9;i++){float fi=float(i)*0.35; vec2 noise=vec2(sin(z.x*4.0+t*1.5+fi)*cos(z.y*3.5+t*1.2+fi),cos(z.x*3.0+t*0.9+fi)*sin(z.y*4.5+t*1.8+fi))*0.1; z+=noise; float vortex1=t*0.25+fi*0.9+storm*1.5; float vortex2=t*0.4+fi*0.6+turbulence*1.2; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.5,sin(vortex1)+noise.y*0.4,-sin(vortex1)+noise.y*0.3,cos(vortex1)+noise.x*0.45); mat2 spiral2=mat2(cos(vortex2*0.8)+noise.y*0.35,sin(vortex2*0.8)+noise.x*0.25,-sin(vortex2*0.8)+noise.x*0.2,cos(vortex2*0.8)+noise.y*0.4); z=spiral1*z; z=abs(z); if(z.x<z.y) z=z.yx; z=z*1.25-vec2(0.8+sin(t*0.6+fi+storm)*0.35,0.6+cos(t*0.5+fi+turbulence)*0.3); z=spiral2*z; float d=length(z); float coral=sin(z.x*6.0+z.y*5.0+t*3.0+fi)*cos(z.x*4.0-z.y*7.0+t*2.5+fi)*0.08; float branch1=max(abs(z.x*0.9+z.y*0.4)-0.05-coral,abs(z.y*0.8-z.x*0.3)-0.06-coral); float branch2=max(abs(z.x*0.7-z.y*0.6)-0.04-coral,abs(z.y*0.9+z.x*0.2)-0.07-coral); float mycelium=min(branch1,branch2); float spore=length(z-vec2(sin(fi*2.0)*0.3,cos(fi*1.8)*0.25))-0.08-coral*0.5; float organism=min(mycelium,spore)+sin(length(z)*10.0+t*5.0+fi)*0.025; float bloom=exp(-abs(organism)*8.0); vec2 flow1=vec2(sin(z.x*6.0+t*3.5+fi+storm*2.0),cos(z.y*5.5+t*2.8+fi+turbulence*1.8))*bloom*0.15; vec2 flow2=vec2(cos(z.x*4.5+t*2.2+fi*1.5+turbulence*2.5),sin(z.y*4.0+t*3.8+fi*1.2+storm*2.2))*bloom*0.12; vec2 current=vec2(sin(angle*2.5+r*3.0+t*4.2+fi),cos(angle*3.5+r*2.5+t*3.0+fi))*bloom*0.08; z+=flow1+flow2+current; float bio1=sin(length(z)*8.0+t*4.0+fi+storm)*bloom; float bio2=cos(length(z)*11.0+t*3.2+fi*1.3+turbulence)*bloom; float bio3=sin(d*6.0+angle*4.0+t*5.5+fi*0.8)*bloom; vec3 pigment1=vec3(sin(bio1*3.0+fi+storm),sin(bio1*3.0+fi+storm+2.5),sin(bio1*3.0+fi+storm+5.0))*0.5+0.5; vec3 pigment2=vec3(cos(bio2*2.5+fi+turbulence+1.5),cos(bio2*2.5+fi+turbulence+4.0),cos(bio2*2.5+fi+turbulence+6.5))*0.5+0.5; vec3 pigment3=vec3(sin(bio3*2.0+fi*2.0+storm*1.5+2.0),sin(bio3*2.0+fi*2.0+turbulence*1.2+4.5),sin(bio3*2.0+fi*2.0+storm*0.8+7.0))*0.5+0.5; vec3 ecosystem=mix(mix(pigment1,pigment2,sin(t*2.8+fi+storm*2.0)*0.5+0.5),pigment3,cos(t*1.9+fi+turbulence*1.8)*0.5+0.5); col+=ecosystem*bloom*(0.75-fi*0.05); float membrane=sin(angle*5.0+d*10.0+t*6.0+storm*3.0)*cos(angle*7.0+d*8.0+t*4.5+turbulence*2.5)*bloom*0.3; float pulse=cos(angle*6.0+d*15.0+t*8.0+fi*2.0)*sin(angle*4.0+d*12.0+t*6.5+fi*1.5)*bloom*0.2; col*=(1.0+membrane+pulse); float growth=sin(z.x*20.0+z.y*15.0+t*9.0+fi+storm*4.0)*cos(z.x*12.0-z.y*18.0+t*7.5+fi+turbulence*3.5)*bloom*0.3; col+=growth*ecosystem*0.6; float symbiosis=sin((z.x+z.y)*10.0+t*5.8+storm*2.0)*cos((z.x-z.y)*8.0+t*4.2+turbulence*1.5)*bloom*0.25; col*=(1.0+symbiosis);} float hurricane=sin(angle*4.0+r*6.0-t*7.0+storm*3.0)*cos(angle*3.0+r*9.0+t*5.0+turbulence*2.5)*exp(-r*0.35)*0.45; float galaxy=sin(angle*8.0+t*1.8+storm)*cos(r*12.0-t*6.5+turbulence)*exp(-r*0.6)*0.3; float quantum=sin(angle*12.0+r*4.0+t*3.5)*cos(angle*9.0+r*7.0-t*8.5)*exp(-r*0.8)*0.2; col*=(0.5+hurricane+galaxy+quantum); col=pow(col*0.22,vec3(0.82)); vec4(col*vec3(i0,i1,i2),1.0)', 2.6, 1.5, 1.4);


// ========================================
// GL033 - Fractal Reflection Portal
// ========================================

// GL033: forêt vivante avec marées, saisons, climats, racines, feuillages, photosynthèse, pollinisation, harmonie cosmique - 11 itérations

window.gl033a = () =>
  glsl('vec2 p=(_st-0.5)*3.0; float t=time*0.2; float r=length(p); vec3 portal=vec3(0.0); p=abs(p); p.xy=p.x<p.y?p.yx:p.xy; p=p*1.4-1.0; p=abs(p); p.xy=p.x+p.y<0.0?p.yx:p.xy; p=p*1.3-0.8; p=abs(p); p*=1.2; float d=length(p); vec3 c1=0.5+0.5*sin(d*3.0+t*4.0+vec3(0,2,4)); vec3 c2=0.5+0.5*sin(d*5.0+t*2.0+vec3(1,3,5)); portal=mix(c1,c2,sin(t*3.0+d*8.0)*0.5+0.5)/(1.0+d*d*2.0); float ripple=sin(r*25.0-t*8.0)*exp(-r*3.0)*0.4; portal+=ripple; float vortex=sin(atan(p.y,p.x)*6.0+t*5.0)*exp(-r*1.5)*0.3; portal*=(1.0-r*0.8)+vortex; return vec4(portal,1.0);')
  .kaleid(8)
  .modulate(noise(3,0.1),0.03)
  .mult(src(o0).scale(1.01).rotate(0.005),0.95)
  .colorama(0.2);

window.gl033b = () => glsl('vec2 p=(_st-0.5)*4.0; float t=time*0.18; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p; for(int i=0;i<5;i++){float fi=float(i)*0.5; z=abs(z); if(z.x<z.y) z=z.yx; z=z*1.3-vec2(1.0+sin(t*0.4+fi)*0.2,0.8+cos(t*0.3+fi)*0.15); float d=length(z); float crystal=max(abs(z.x*0.866+z.y*0.5),abs(z.y))-0.3; float glow=exp(-abs(crystal)*6.0); vec3 rainbow=0.5+0.5*sin(vec3(d*4.0+t*2.0+fi,d*6.0+t*1.5+fi+1.0,d*8.0+t*1.8+fi+2.0)); col+=rainbow*glow*(0.8-fi*0.12); float wave=sin(angle*3.0+d*5.0+t*4.0)*glow*0.3; col*=(1.0+wave);} float vortex=sin(angle*2.0+r*3.0-t*5.0)*exp(-r*0.5)*0.4; col*=(0.7+vortex); col=pow(col*0.35,vec3(0.9)); vec4(col*vec3(i0,i1,i2),1.0)', 2.3, 1.1, 1.7);

window.gl033c = () => glsl('vec2 p=(_st-0.5)*5.0; float t=time*0.16; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p; for(int i=0;i<7;i++){float fi=float(i)*0.4; float twist=t*0.3+fi*0.8; mat2 spin=mat2(cos(twist),sin(twist),-sin(twist),cos(twist)); z=spin*z; z=abs(z); if(z.x<z.y) z=z.yx; z=z*1.35-vec2(0.9+sin(t*0.5+fi)*0.25,0.7+cos(t*0.4+fi)*0.2); float d=length(z); float tri=max(abs(z.x*0.866+z.y*0.5),abs(z.y))-0.25; float hex=abs(max(abs(z.x),abs(z.x*0.5+z.y*0.866)))-0.2; float star=min(tri,hex); float crystal=max(star,abs(z.x+z.y)*0.7-0.15); float glow=exp(-abs(crystal)*7.0); vec3 prism1=0.5+0.5*sin(vec3(d*5.0+t*2.5+fi,d*7.0+t*1.8+fi+1.2,d*9.0+t*2.2+fi+2.4)); vec3 prism2=0.5+0.5*cos(vec3(d*6.0+t*1.5+fi+3.0,d*8.0+t*2.0+fi+4.5,d*10.0+t*1.2+fi+1.8)); vec3 spectrum=mix(prism1,prism2,sin(t*4.0+fi+d*2.0)*0.5+0.5); col+=spectrum*glow*(0.75-fi*0.08); float ripple1=sin(angle*4.0+d*8.0+t*5.0)*glow*0.25; float ripple2=cos(angle*6.0+d*12.0+t*7.0+fi)*glow*0.15; col*=(1.0+ripple1+ripple2); float lattice=sin(z.x*15.0+z.y*10.0+t*8.0)*glow*0.2; col+=lattice*spectrum*0.3; float hologram=sin((z.x+z.y)*8.0+t*6.0)*sin((z.x-z.y)*6.0+t*4.0)*glow*0.15; col*=(1.0+hologram);} float tornado=sin(angle*3.0+r*4.0-t*6.0)*cos(angle*2.0+r*6.0+t*3.0)*exp(-r*0.4)*0.35; float nebula=sin(angle*5.0+t*2.0)*sin(r*10.0-t*8.0)*exp(-r*0.8)*0.25; col*=(0.6+tornado+nebula); col=pow(col*0.28,vec3(0.88)); vec4(col*vec3(i0,i1,i2),1.0)', 2.5, 1.3, 1.5);

window.gl033d = () => glsl('vec2 p=(_st-0.5)*6.0; float t=time*0.12; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p; float storm=sin(t*0.5)*cos(t*0.7)*0.5; float turbulence=cos(t*0.3)*sin(t*0.9)*0.4; for(int i=0;i<9;i++){float fi=float(i)*0.35; vec2 noise=vec2(sin(z.x*4.0+t*1.5+fi)*cos(z.y*3.5+t*1.2+fi),cos(z.x*3.0+t*0.9+fi)*sin(z.y*4.5+t*1.8+fi))*0.1; z+=noise; float vortex1=t*0.25+fi*0.9+storm*1.5; float vortex2=t*0.4+fi*0.6+turbulence*1.2; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.5,sin(vortex1)+noise.y*0.4,-sin(vortex1)+noise.y*0.3,cos(vortex1)+noise.x*0.45); mat2 spiral2=mat2(cos(vortex2*0.8)+noise.y*0.35,sin(vortex2*0.8)+noise.x*0.25,-sin(vortex2*0.8)+noise.x*0.2,cos(vortex2*0.8)+noise.y*0.4); z=spiral1*z; z=abs(z); if(z.x<z.y) z=z.yx; z=z*1.25-vec2(0.8+sin(t*0.6+fi+storm)*0.35,0.6+cos(t*0.5+fi+turbulence)*0.3); z=spiral2*z; float d=length(z); float coral=sin(z.x*6.0+z.y*5.0+t*3.0+fi)*cos(z.x*4.0-z.y*7.0+t*2.5+fi)*0.08; float branch1=max(abs(z.x*0.9+z.y*0.4)-0.05-coral,abs(z.y*0.8-z.x*0.3)-0.06-coral); float branch2=max(abs(z.x*0.7-z.y*0.6)-0.04-coral,abs(z.y*0.9+z.x*0.2)-0.07-coral); float mycelium=min(branch1,branch2); float spore=length(z-vec2(sin(fi*2.0)*0.3,cos(fi*1.8)*0.25))-0.08-coral*0.5; float organism=min(mycelium,spore)+sin(length(z)*10.0+t*5.0+fi)*0.025; float bloom=exp(-abs(organism)*8.0); vec2 flow1=vec2(sin(z.x*6.0+t*3.5+fi+storm*2.0),cos(z.y*5.5+t*2.8+fi+turbulence*1.8))*bloom*0.15; vec2 flow2=vec2(cos(z.x*4.5+t*2.2+fi*1.5+turbulence*2.5),sin(z.y*4.0+t*3.8+fi*1.2+storm*2.2))*bloom*0.12; vec2 current=vec2(sin(angle*2.5+r*3.0+t*4.2+fi),cos(angle*3.5+r*2.5+t*3.0+fi))*bloom*0.08; z+=flow1+flow2+current; float bio1=sin(length(z)*8.0+t*4.0+fi+storm)*bloom; float bio2=cos(length(z)*11.0+t*3.2+fi*1.3+turbulence)*bloom; float bio3=sin(d*6.0+angle*4.0+t*5.5+fi*0.8)*bloom; vec3 pigment1=vec3(sin(bio1*3.0+fi+storm),sin(bio1*3.0+fi+storm+2.5),sin(bio1*3.0+fi+storm+5.0))*0.5+0.5; vec3 pigment2=vec3(cos(bio2*2.5+fi+turbulence+1.5),cos(bio2*2.5+fi+turbulence+4.0),cos(bio2*2.5+fi+turbulence+6.5))*0.5+0.5; vec3 pigment3=vec3(sin(bio3*2.0+fi*2.0+storm*1.5+2.0),sin(bio3*2.0+fi*2.0+turbulence*1.2+4.5),sin(bio3*2.0+fi*2.0+storm*0.8+7.0))*0.5+0.5; vec3 ecosystem=mix(mix(pigment1,pigment2,sin(t*2.8+fi+storm*2.0)*0.5+0.5),pigment3,cos(t*1.9+fi+turbulence*1.8)*0.5+0.5); col+=ecosystem*bloom*(0.75-fi*0.05); float membrane=sin(angle*5.0+d*10.0+t*6.0+storm*3.0)*cos(angle*7.0+d*8.0+t*4.5+turbulence*2.5)*bloom*0.3; float pulse=cos(angle*6.0+d*15.0+t*8.0+fi*2.0)*sin(angle*4.0+d*12.0+t*6.5+fi*1.5)*bloom*0.2; col*=(1.0+membrane+pulse); float growth=sin(z.x*20.0+z.y*15.0+t*9.0+fi+storm*4.0)*cos(z.x*12.0-z.y*18.0+t*7.5+fi+turbulence*3.5)*bloom*0.3; col+=growth*ecosystem*0.6; float symbiosis=sin((z.x+z.y)*10.0+t*5.8+storm*2.0)*cos((z.x-z.y)*8.0+t*4.2+turbulence*1.5)*bloom*0.25; col*=(1.0+symbiosis);} float hurricane=sin(angle*4.0+r*6.0-t*7.0+storm*3.0)*cos(angle*3.0+r*9.0+t*5.0+turbulence*2.5)*exp(-r*0.35)*0.45; float galaxy=sin(angle*8.0+t*1.8+storm)*cos(r*12.0-t*6.5+turbulence)*exp(-r*0.6)*0.3; float quantum=sin(angle*12.0+r*4.0+t*3.5)*cos(angle*9.0+r*7.0-t*8.5)*exp(-r*0.8)*0.2; col*=(0.5+hurricane+galaxy+quantum); col=pow(col*0.22,vec3(0.82)); vec4(col*vec3(i0,i1,i2),1.0)', 2.6, 1.5, 1.4);

window.gl033e = () => glsl('vec2 p=(_st-0.5)*7.5; float t=time*0.15; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.01); vec2 z=p; float storm=sin(t*0.5)*cos(t*0.7)*0.7; float turbulence=cos(t*0.3)*sin(t*0.9)*0.6; float chaos1=sin(t*0.8)*cos(t*1.2)*0.5; float chaos2=cos(t*0.6)*sin(t*1.5)*0.55; float rainbow1=sin(t*0.4+r*3.2)*0.4+0.6; float rainbow2=cos(t*0.7+angle*2.8)*0.45+0.55; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*0.38+0.62; for(int j=0;j<2;j++){float fj=float(j)*1.8; vec2 layer=z*pow(0.8,fj); for(int i=0;i<12;i++){float fi=float(i)*0.28+fj*0.15; vec2 noise=vec2(sin(layer.x*4.5+t*1.8+fi)*cos(layer.y*4.2+t*1.5+fi),cos(layer.x*3.8+t*1.2+fi)*sin(layer.y*5.2+t*2.1+fi))*0.12; layer+=noise; float vortex1=t*0.3+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.5+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.7+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; layer=abs(layer); if(layer.x<layer.y) layer=layer.yx; layer=layer*1.3-vec2(0.85+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*3.8+fi)*cos(layer.x*5.2-layer.y*8.5+t*3.2+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*4.2+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*3.5+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*4.8+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*4.0+fi*1.8)*0.06; float branch1=max(abs(layer.x*1.1+layer.y*0.6)-0.06-coral1,abs(layer.y*1.0-layer.x*0.5)-0.07-coral1); float branch2=max(abs(layer.x*0.9-layer.y*0.8)-0.05-coral2,abs(layer.y*1.1+layer.x*0.4)-0.08-coral2); float branch3=max(abs(layer.x*1.2+layer.y*0.3)-0.04-coral3,abs(layer.y*0.9-layer.x*0.7)-0.06-coral3); float mycelium=min(min(branch1,branch2),branch3); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=min(abs(layer.x*1.8)-0.04,abs(layer.y*1.6)-0.03)+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=min(abs(layer.x*1.4+layer.y*1.2)-0.03,abs(layer.y*1.5-layer.x*1.1)-0.04)+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*12.0+t*6.5+fi)*0.03; float bloom=exp(-abs(organism)*9.5); float glow=exp(-abs(organism)*3.5)*1.8; vec2 flow1=vec2(sin(layer.x*7.5+t*4.2+fi+storm*2.5),cos(layer.y*6.8+t*3.5+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*2.8+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*4.5+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*3.2+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*3.8+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*5.2+fi),cos(angle*4.5+r*3.8+t*4.0+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*5.0+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*4.2+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*6.8+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*5.5+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.6+0.4; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.65+0.35; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.55+0.45; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow1+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow2+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow3+8.0))*0.58+0.42; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow2+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow3+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.62+0.38; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment1,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5); vec3 ecosystem=mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5); col+=ecosystem*bloom*(0.85-fi*0.04)*glow; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.6+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.4; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.35; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.3; col+=vec3(prism*2.5+spectrum1*1.8,prism*2.0+spectrum2*2.2,prism*2.8+spectrum1*1.5)*exp(-r*0.5); col=pow(col*0.28,vec3(0.75)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033f = () => glsl('vec2 p=(_st-0.5)*7.5; float t=time*0.15; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.01); vec2 z=p; float storm=sin(t*0.5)*cos(t*0.7)*0.7; float turbulence=cos(t*0.3)*sin(t*0.9)*0.6; float chaos1=sin(t*0.8)*cos(t*1.2)*0.5; float chaos2=cos(t*0.6)*sin(t*1.5)*0.55; float rainbow1=sin(t*0.4+r*3.2)*0.4+0.6; float rainbow2=cos(t*0.7+angle*2.8)*0.45+0.55; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*0.38+0.62; for(int j=0;j<2;j++){float fj=float(j)*1.8; vec2 layer=z*pow(0.8,fj); for(int i=0;i<12;i++){float fi=float(i)*0.28+fj*0.15; vec2 noise=vec2(sin(layer.x*4.5+t*1.8+fi)*cos(layer.y*4.2+t*1.5+fi),cos(layer.x*3.8+t*1.2+fi)*sin(layer.y*5.2+t*2.1+fi))*0.12; layer+=noise; float vortex1=t*0.3+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.5+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.7+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; layer=vec2(abs(layer.x*1.1+sin(layer.y*3.5+t+fi)*0.3)-0.8+sin(t*0.8+fi+storm)*0.45,abs(layer.y*1.05+cos(layer.x*3.8+t*1.2+fi)*0.25)-0.65+cos(t*0.6+fi+turbulence)*0.4)*1.3; layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*3.8+fi)*cos(layer.x*5.2-layer.y*8.5+t*3.2+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*4.2+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*3.5+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*4.8+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*4.0+fi*1.8)*0.06; float branch1=max(abs(layer.x*1.1+layer.y*0.6)-0.06-coral1,abs(layer.y*1.0-layer.x*0.5)-0.07-coral1); float branch2=max(abs(layer.x*0.9-layer.y*0.8)-0.05-coral2,abs(layer.y*1.1+layer.x*0.4)-0.08-coral2); float branch3=max(abs(layer.x*1.2+layer.y*0.3)-0.04-coral3,abs(layer.y*0.9-layer.x*0.7)-0.06-coral3); float mycelium=min(min(branch1,branch2),branch3); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=min(abs(layer.x*1.8)-0.04,abs(layer.y*1.6)-0.03)+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=min(abs(layer.x*1.4+layer.y*1.2)-0.03,abs(layer.y*1.5-layer.x*1.1)-0.04)+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*12.0+t*6.5+fi)*0.03; float bloom=exp(-abs(organism)*9.5); float glow=exp(-abs(organism)*3.5)*1.8; vec2 flow1=vec2(sin(layer.x*7.5+t*4.2+fi+storm*2.5),cos(layer.y*6.8+t*3.5+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*2.8+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*4.5+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*3.2+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*3.8+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*5.2+fi),cos(angle*4.5+r*3.8+t*4.0+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*5.0+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*4.2+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*6.8+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*5.5+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.6+0.4; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.65+0.35; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.55+0.45; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow1+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow2+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow3+8.0))*0.58+0.42; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow2+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow3+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.62+0.38; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment1,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5); vec3 ecosystem=mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5); col+=ecosystem*bloom*(0.85-fi*0.04)*glow; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.6+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.4; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.35; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.3; col+=vec3(prism*2.5+spectrum1*1.8,prism*2.0+spectrum2*2.2,prism*2.8+spectrum1*1.5)*exp(-r*0.5); col=pow(col*0.28,vec3(0.75)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033g = () => glsl('vec2 p=(_st-0.5)*7.5; float t=time*0.15; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.01); vec2 z=p; float storm=sin(t*0.5)*cos(t*0.7)*0.7; float turbulence=cos(t*0.3)*sin(t*0.9)*0.6; float chaos1=sin(t*0.8)*cos(t*1.2)*0.5; float chaos2=cos(t*0.6)*sin(t*1.5)*0.55; float rainbow1=sin(t*0.4+r*3.2)*0.4+0.6; float rainbow2=cos(t*0.7+angle*2.8)*0.45+0.55; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*0.38+0.62; for(int j=0;j<2;j++){float fj=float(j)*1.8; vec2 layer=z*pow(0.8,fj); for(int i=0;i<12;i++){float fi=float(i)*0.28+fj*0.15; vec2 noise=vec2(sin(layer.x*4.5+t*1.8+fi)*cos(layer.y*4.2+t*1.5+fi),cos(layer.x*3.8+t*1.2+fi)*sin(layer.y*5.2+t*2.1+fi))*0.12; layer+=noise; float vortex1=t*0.3+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.5+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.7+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*3.8+fi)*cos(layer.x*5.2-layer.y*8.5+t*3.2+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*4.2+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*3.5+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*4.8+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*4.0+fi*1.8)*0.06; float branch1=max(abs(layer.x*1.1+layer.y*0.6)-0.06-coral1,abs(layer.y*1.0-layer.x*0.5)-0.07-coral1); float branch2=max(abs(layer.x*0.9-layer.y*0.8)-0.05-coral2,abs(layer.y*1.1+layer.x*0.4)-0.08-coral2); float branch3=max(abs(layer.x*1.2+layer.y*0.3)-0.04-coral3,abs(layer.y*0.9-layer.x*0.7)-0.06-coral3); float mycelium=min(min(branch1,branch2),branch3); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=min(abs(layer.x*1.8)-0.04,abs(layer.y*1.6)-0.03)+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=min(abs(layer.x*1.4+layer.y*1.2)-0.03,abs(layer.y*1.5-layer.x*1.1)-0.04)+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*12.0+t*6.5+fi)*0.03; float bloom=exp(-abs(organism)*9.5); float glow=exp(-abs(organism)*3.5)*1.8; vec2 flow1=vec2(sin(layer.x*7.5+t*4.2+fi+storm*2.5),cos(layer.y*6.8+t*3.5+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*2.8+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*4.5+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*3.2+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*3.8+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*5.2+fi),cos(angle*4.5+r*3.8+t*4.0+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*5.0+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*4.2+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*6.8+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*5.5+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.6+0.4; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.65+0.35; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.55+0.45; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow1+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow2+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow3+8.0))*0.58+0.42; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow2+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow3+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.62+0.38; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment1,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5); vec3 ecosystem=mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5); col+=ecosystem*bloom*(0.85-fi*0.04)*glow; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.6+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.4; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.35; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.3; col+=vec3(prism*2.5+spectrum1*1.8,prism*2.0+spectrum2*2.2,prism*2.8+spectrum1*1.5)*exp(-r*0.5); col=pow(col*0.28,vec3(0.75)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033h = () => glsl('vec2 p=(_st-0.5)*7.5; float t=time*0.15; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.01); vec2 z=p; float storm=sin(t*0.5)*cos(t*0.7)*0.7; float turbulence=cos(t*0.3)*sin(t*0.9)*0.6; float chaos1=sin(t*0.8)*cos(t*1.2)*0.5; float chaos2=cos(t*0.6)*sin(t*1.5)*0.55; float rainbow1=sin(t*0.4+r*3.2)*0.4+0.6; float rainbow2=cos(t*0.7+angle*2.8)*0.45+0.55; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*0.38+0.62; for(int j=0;j<2;j++){float fj=float(j)*1.8; vec2 layer=z*pow(0.8,fj); for(int i=0;i<12;i++){float fi=float(i)*0.28+fj*0.15; vec2 noise=vec2(sin(layer.x*4.5+t*1.8+fi)*cos(layer.y*4.2+t*1.5+fi),cos(layer.x*3.8+t*1.2+fi)*sin(layer.y*5.2+t*2.1+fi))*0.12; layer+=noise; float vortex1=t*0.3+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.5+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.7+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*3.8+fi)*cos(layer.x*5.2-layer.y*8.5+t*3.2+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*4.2+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*3.5+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*4.8+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*4.0+fi*1.8)*0.06; float smooth1=smoothstep(-0.1,0.1,layer.x*1.1+layer.y*0.6+coral1)-0.06; float smooth2=smoothstep(-0.1,0.1,layer.y*1.0-layer.x*0.5+coral1)-0.07; float smooth3=smoothstep(-0.1,0.1,layer.x*0.9-layer.y*0.8+coral2)-0.05; float smooth4=smoothstep(-0.1,0.1,layer.y*1.1+layer.x*0.4+coral2)-0.08; float smooth5=smoothstep(-0.1,0.1,layer.x*1.2+layer.y*0.3+coral3)-0.04; float smooth6=smoothstep(-0.1,0.1,layer.y*0.9-layer.x*0.7+coral3)-0.06; float mycelium=min(min(min(smooth1,smooth2),min(smooth3,smooth4)),min(smooth5,smooth6)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*12.0+t*6.5+fi)*0.03; float bloom=exp(-abs(organism)*9.5); float glow=exp(-abs(organism)*3.5)*1.8; vec2 flow1=vec2(sin(layer.x*7.5+t*4.2+fi+storm*2.5),cos(layer.y*6.8+t*3.5+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*2.8+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*4.5+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*3.2+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*3.8+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*5.2+fi),cos(angle*4.5+r*3.8+t*4.0+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*5.0+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*4.2+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*6.8+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*5.5+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.6+0.4; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.65+0.35; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.55+0.45; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow1+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow2+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow3+8.0))*0.58+0.42; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow2+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow3+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.62+0.38; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment1,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5); vec3 ecosystem=mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5); col+=ecosystem*bloom*(0.85-fi*0.04)*glow; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.6+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.4; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.35; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.3; col+=vec3(prism*2.5+spectrum1*1.8,prism*2.0+spectrum2*2.2,prism*2.8+spectrum1*1.5)*exp(-r*0.5); col=pow(col*0.28,vec3(0.75)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033i = () => glsl('vec2 p=(_st-vec2(0.3,0.4))*6.5; float t=time*0.15; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.005); vec2 z=p+vec2(sin(t*0.2)*0.8,cos(t*0.18)*0.6); float storm=sin(t*0.5)*cos(t*0.7)*0.7; float turbulence=cos(t*0.3)*sin(t*0.9)*0.6; float chaos1=sin(t*0.8)*cos(t*1.2)*0.5; float chaos2=cos(t*0.6)*sin(t*1.5)*0.55; float rainbow1=sin(t*0.4+r*3.2)*0.4+0.6; float rainbow2=cos(t*0.7+angle*2.8)*0.45+0.55; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*0.38+0.62; for(int j=0;j<2;j++){float fj=float(j)*1.8; vec2 layer=z*pow(0.8,fj); for(int i=0;i<12;i++){float fi=float(i)*0.28+fj*0.15; vec2 noise=vec2(sin(layer.x*4.5+t*1.8+fi)*cos(layer.y*4.2+t*1.5+fi),cos(layer.x*3.8+t*1.2+fi)*sin(layer.y*5.2+t*2.1+fi))*0.12; layer+=noise; float vortex1=t*0.3+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.5+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.7+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*3.8+fi)*cos(layer.x*5.2-layer.y*8.5+t*3.2+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*4.2+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*3.5+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*4.8+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*4.0+fi*1.8)*0.06; float smooth1=smoothstep(-0.1,0.1,layer.x*1.1+layer.y*0.6+coral1)-0.06; float smooth2=smoothstep(-0.1,0.1,layer.y*1.0-layer.x*0.5+coral1)-0.07; float smooth3=smoothstep(-0.1,0.1,layer.x*0.9-layer.y*0.8+coral2)-0.05; float smooth4=smoothstep(-0.1,0.1,layer.y*1.1+layer.x*0.4+coral2)-0.08; float smooth5=smoothstep(-0.1,0.1,layer.x*1.2+layer.y*0.3+coral3)-0.04; float smooth6=smoothstep(-0.1,0.1,layer.y*0.9-layer.x*0.7+coral3)-0.06; float mycelium=min(min(min(smooth1,smooth2),min(smooth3,smooth4)),min(smooth5,smooth6)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*12.0+t*6.5+fi)*0.03; float bloom=exp(-abs(organism)*9.5); float glow=exp(-abs(organism)*3.5)*1.8; vec2 flow1=vec2(sin(layer.x*7.5+t*4.2+fi+storm*2.5),cos(layer.y*6.8+t*3.5+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*2.8+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*4.5+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*3.2+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*3.8+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*5.2+fi),cos(angle*4.5+r*3.8+t*4.0+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*5.0+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*4.2+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*6.8+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*5.5+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.6+0.4; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.65+0.35; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.55+0.45; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow1+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow2+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow3+8.0))*0.58+0.42; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow2+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow3+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.62+0.38; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment1,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5); vec3 ecosystem=mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5); col+=ecosystem*bloom*(0.85-fi*0.04)*glow; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.6+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.4; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.35; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.3; col+=vec3(prism*2.5+spectrum1*1.8,prism*2.0+spectrum2*2.2,prism*2.8+spectrum1*1.5)*exp(-r*0.5); col=pow(col*0.18,vec3(0.85)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033j = () => glsl('vec2 p=(_st-vec2(0.15,0.15))*6.5; float t=time*0.15; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.005); vec2 z=p+vec2(sin(t*0.2)*0.8,cos(t*0.18)*0.6); float storm=sin(t*0.5)*cos(t*0.7)*0.7; float turbulence=cos(t*0.3)*sin(t*0.9)*0.6; float chaos1=sin(t*0.8)*cos(t*1.2)*0.5; float chaos2=cos(t*0.6)*sin(t*1.5)*0.55; float rainbow1=sin(t*0.4+r*3.2)*0.4+0.6; float rainbow2=cos(t*0.7+angle*2.8)*0.45+0.55; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*0.38+0.62; for(int j=0;j<2;j++){float fj=float(j)*1.8; vec2 layer=z*pow(0.8,fj); for(int i=0;i<12;i++){float fi=float(i)*0.28+fj*0.15; vec2 noise=vec2(sin(layer.x*4.5+t*1.8+fi)*cos(layer.y*4.2+t*1.5+fi),cos(layer.x*3.8+t*1.2+fi)*sin(layer.y*5.2+t*2.1+fi))*0.12; layer+=noise; float vortex1=t*0.3+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.5+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.7+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*3.8+fi)*cos(layer.x*5.2-layer.y*8.5+t*3.2+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*4.2+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*3.5+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*4.8+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*4.0+fi*1.8)*0.06; float smooth1=smoothstep(-0.1,0.1,layer.x*1.1+layer.y*0.6+coral1)-0.06; float smooth2=smoothstep(-0.1,0.1,layer.y*1.0-layer.x*0.5+coral1)-0.07; float smooth3=smoothstep(-0.1,0.1,layer.x*0.9-layer.y*0.8+coral2)-0.05; float smooth4=smoothstep(-0.1,0.1,layer.y*1.1+layer.x*0.4+coral2)-0.08; float smooth5=smoothstep(-0.1,0.1,layer.x*1.2+layer.y*0.3+coral3)-0.04; float smooth6=smoothstep(-0.1,0.1,layer.y*0.9-layer.x*0.7+coral3)-0.06; float mycelium=min(min(min(smooth1,smooth2),min(smooth3,smooth4)),min(smooth5,smooth6)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*12.0+t*6.5+fi)*0.03; float bloom=exp(-abs(organism)*9.5); float glow=exp(-abs(organism)*3.5)*1.8; vec2 flow1=vec2(sin(layer.x*7.5+t*4.2+fi+storm*2.5),cos(layer.y*6.8+t*3.5+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*2.8+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*4.5+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*3.2+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*3.8+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*5.2+fi),cos(angle*4.5+r*3.8+t*4.0+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*5.0+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*4.2+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*6.8+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*5.5+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.6+0.4; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.65+0.35; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.55+0.45; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow1+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow2+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow3+8.0))*0.58+0.42; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow2+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow3+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.62+0.38; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment1,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5); vec3 ecosystem=mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5); col+=ecosystem*bloom*(0.85-fi*0.04)*glow; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.6+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.4; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.35; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.3; col+=vec3(prism*2.5+spectrum1*1.8,prism*2.0+spectrum2*2.2,prism*2.8+spectrum1*1.5)*exp(-r*0.5); col=pow(col*0.18,vec3(0.85)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033k = () => glsl('vec2 p=(_st-vec2(-0.3,-0.2))*8.0; float t=time*0.18; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.005); vec2 z=p+vec2(sin(t*0.2)*0.8,cos(t*0.18)*0.6); float storm=sin(t*0.5)*cos(t*0.7)*0.7; float turbulence=cos(t*0.3)*sin(t*0.9)*0.6; float chaos1=sin(t*0.8)*cos(t*1.2)*0.5; float chaos2=cos(t*0.6)*sin(t*1.5)*0.55; float chaos3=sin(t*1.1)*cos(t*0.9)*0.6; float chaos4=cos(t*1.4)*sin(t*0.7)*0.48; float rainbow1=sin(t*0.4+r*3.2)*0.4+0.6; float rainbow2=cos(t*0.7+angle*2.8)*0.45+0.55; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*0.38+0.62; for(int j=0;j<3;j++){float fj=float(j)*1.5; vec2 layer=z*pow(0.75,fj); for(int i=0;i<15;i++){float fi=float(i)*0.22+fj*0.12; vec2 noise=vec2(sin(layer.x*4.5+t*1.8+fi)*cos(layer.y*4.2+t*1.5+fi),cos(layer.x*3.8+t*1.2+fi)*sin(layer.y*5.2+t*2.1+fi))*0.12; layer+=noise; float vortex1=t*0.3+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.5+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.7+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*3.8+fi)*cos(layer.x*5.2-layer.y*8.5+t*3.2+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*4.2+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*3.5+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*4.8+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*4.0+fi*1.8)*0.06; float smooth1=smoothstep(-0.1,0.1,layer.x*1.1+layer.y*0.6+coral1)-0.06; float smooth2=smoothstep(-0.1,0.1,layer.y*1.0-layer.x*0.5+coral1)-0.07; float smooth3=smoothstep(-0.1,0.1,layer.x*0.9-layer.y*0.8+coral2)-0.05; float smooth4=smoothstep(-0.1,0.1,layer.y*1.1+layer.x*0.4+coral2)-0.08; float smooth5=smoothstep(-0.1,0.1,layer.x*1.2+layer.y*0.3+coral3)-0.04; float smooth6=smoothstep(-0.1,0.1,layer.y*0.9-layer.x*0.7+coral3)-0.06; float mycelium=min(min(min(smooth1,smooth2),min(smooth3,smooth4)),min(smooth5,smooth6)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*12.0+t*6.5+fi)*0.03; float bloom=exp(-abs(organism)*9.5); float glow=exp(-abs(organism)*3.5)*1.8; vec2 flow1=vec2(sin(layer.x*7.5+t*4.2+fi+storm*2.5),cos(layer.y*6.8+t*3.5+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*2.8+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*4.5+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*3.2+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*3.8+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*5.2+fi),cos(angle*4.5+r*3.8+t*4.0+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*5.0+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*4.2+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*6.8+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*5.5+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.6+0.4; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.65+0.35; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.55+0.45; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow1+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow2+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow3+8.0))*0.58+0.42; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow2+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow3+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.62+0.38; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment1,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5); vec3 ecosystem=mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5); col+=ecosystem*bloom*(0.85-fi*0.04)*glow; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.6+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.4; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.35; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.3; col+=vec3(prism*2.5+spectrum1*1.8,prism*2.0+spectrum2*2.2,prism*2.8+spectrum1*1.5)*exp(-r*0.5); col=pow(col*0.18,vec3(0.85)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033l = () => glsl('vec2 p=(_st-vec2(-0.1,-0.05))*7.2; float t=time*0.18; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.005); vec2 z=p+vec2(sin(t*0.2)*0.8,cos(t*0.18)*0.6); float storm=sin(t*0.5)*cos(t*0.7)*0.7; float turbulence=cos(t*0.3)*sin(t*0.9)*0.6; float chaos1=sin(t*0.8)*cos(t*1.2)*0.5; float chaos2=cos(t*0.6)*sin(t*1.5)*0.55; float chaos3=sin(t*1.1)*cos(t*0.9)*0.6; float chaos4=cos(t*1.4)*sin(t*0.7)*0.48; float rainbow1=sin(t*0.4+r*3.2)*0.5+0.7; float rainbow2=cos(t*0.7+angle*2.8)*0.55+0.65; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*0.48+0.72; float rainbow4=cos(t*0.6+r*4.0+angle*2.5)*0.52+0.68; float rainbow5=sin(t*1.2+r*2.8+angle*4.2)*0.46+0.74; for(int j=0;j<3;j++){float fj=float(j)*1.5; vec2 layer=z*pow(0.75,fj); for(int i=0;i<15;i++){float fi=float(i)*0.22+fj*0.12; vec2 noise=vec2(sin(layer.x*4.5+t*1.8+fi)*cos(layer.y*4.2+t*1.5+fi),cos(layer.x*3.8+t*1.2+fi)*sin(layer.y*5.2+t*2.1+fi))*0.12; layer+=noise; float vortex1=t*0.3+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.5+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.7+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*3.8+fi)*cos(layer.x*5.2-layer.y*8.5+t*3.2+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*4.2+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*3.5+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*4.8+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*4.0+fi*1.8)*0.06; float smooth1=smoothstep(-0.1,0.1,layer.x*1.1+layer.y*0.6+coral1)-0.06; float smooth2=smoothstep(-0.1,0.1,layer.y*1.0-layer.x*0.5+coral1)-0.07; float smooth3=smoothstep(-0.1,0.1,layer.x*0.9-layer.y*0.8+coral2)-0.05; float smooth4=smoothstep(-0.1,0.1,layer.y*1.1+layer.x*0.4+coral2)-0.08; float smooth5=smoothstep(-0.1,0.1,layer.x*1.2+layer.y*0.3+coral3)-0.04; float smooth6=smoothstep(-0.1,0.1,layer.y*0.9-layer.x*0.7+coral3)-0.06; float mycelium=min(min(min(smooth1,smooth2),min(smooth3,smooth4)),min(smooth5,smooth6)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*12.0+t*6.5+fi)*0.03; float bloom=exp(-abs(organism)*9.5); float glow=exp(-abs(organism)*3.5)*1.8; vec2 flow1=vec2(sin(layer.x*7.5+t*4.2+fi+storm*2.5),cos(layer.y*6.8+t*3.5+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*2.8+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*4.5+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*3.2+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*3.8+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*5.2+fi),cos(angle*4.5+r*3.8+t*4.0+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*5.0+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*4.2+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*6.8+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*5.5+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.6+0.4; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.65+0.35; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.55+0.45; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow1+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow2+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow3+8.0))*0.58+0.42; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow2+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow3+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.62+0.38; vec3 pigment6=vec3(cos(bio1*3.1+fi*2.0+chaos3*1.8+rainbow4+2.5),sin(bio2*3.4+fi*1.7+chaos4*1.6+rainbow5+4.8),cos(bio3*2.9+fi*2.1+chaos3*1.4+rainbow4+7.2))*0.68+0.32; vec3 pigment7=vec3(sin(bio4*3.6+fi*1.5+chaos4*1.9+rainbow5+1.2),cos(bio5*2.7+fi*2.3+chaos3*1.7+rainbow4+3.8),sin(bio1*3.0+fi*1.9+chaos4*1.3+rainbow5+6.5))*0.72+0.28; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment1,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5); vec3 ecosystem3=mix(mix(pigment6,pigment7,sin(t*4.5+fi+chaos3*3.0)*0.5+0.5),pigment2,cos(t*3.8+fi+chaos4*2.5)*0.5+0.5); vec3 ecosystem=mix(mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5),ecosystem3,cos(t*2.8+fi+storm)*0.5+0.5); col+=ecosystem*bloom*(0.95-fi*0.03)*glow*1.2; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.6+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.4; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.35; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.3; col+=vec3(prism*2.5+spectrum1*1.8,prism*2.0+spectrum2*2.2,prism*2.8+spectrum1*1.5)*exp(-r*0.5); col=pow(col*0.18,vec3(0.85)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033m = () => glsl('vec2 p=(_st-vec2(-0.1,-0.05))*7.2; float t=time*0.08; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.005); vec2 z=p+vec2(sin(t*0.2)*0.8,cos(t*0.18)*0.6); float storm=sin(t*0.5)*cos(t*0.7)*0.7; float turbulence=cos(t*0.3)*sin(t*0.9)*0.6; float chaos1=sin(t*0.8)*cos(t*1.2)*0.5; float chaos2=cos(t*0.6)*sin(t*1.5)*0.55; float chaos3=sin(t*1.1)*cos(t*0.9)*0.6; float chaos4=cos(t*1.4)*sin(t*0.7)*0.48; float chaos5=sin(t*1.6)*cos(t*0.5)*0.52; float chaos6=cos(t*1.8)*sin(t*1.0)*0.58; float rainbow1=sin(t*0.4+r*3.2)*0.5+0.7; float rainbow2=cos(t*0.7+angle*2.8)*0.55+0.65; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*0.48+0.72; float rainbow4=cos(t*0.6+r*4.0+angle*2.5)*0.52+0.68; float rainbow5=sin(t*1.2+r*2.8+angle*4.2)*0.46+0.74; for(int j=0;j<4;j++){float fj=float(j)*1.2; vec2 layer=z*pow(0.7,fj); for(int i=0;i<18;i++){float fi=float(i)*0.18+fj*0.1; vec2 noise=vec2(sin(layer.x*4.5+t*1.8+fi)*cos(layer.y*4.2+t*1.5+fi),cos(layer.x*3.8+t*1.2+fi)*sin(layer.y*5.2+t*2.1+fi))*0.12; layer+=noise; float vortex1=t*0.3+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.5+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.7+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*3.8+fi)*cos(layer.x*5.2-layer.y*8.5+t*3.2+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*4.2+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*3.5+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*4.8+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*4.0+fi*1.8)*0.06; float smooth1=smoothstep(-0.1,0.1,layer.x*1.1+layer.y*0.6+coral1)-0.06; float smooth2=smoothstep(-0.1,0.1,layer.y*1.0-layer.x*0.5+coral1)-0.07; float smooth3=smoothstep(-0.1,0.1,layer.x*0.9-layer.y*0.8+coral2)-0.05; float smooth4=smoothstep(-0.1,0.1,layer.y*1.1+layer.x*0.4+coral2)-0.08; float smooth5=smoothstep(-0.1,0.1,layer.x*1.2+layer.y*0.3+coral3)-0.04; float smooth6=smoothstep(-0.1,0.1,layer.y*0.9-layer.x*0.7+coral3)-0.06; float mycelium=min(min(min(smooth1,smooth2),min(smooth3,smooth4)),min(smooth5,smooth6)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float spore4=length(layer-vec2(cos(fi*2.2+chaos3)*0.32,sin(fi*2.6+chaos4)*0.30))-0.075-coral1*0.55; float spore5=length(layer-vec2(sin(fi*3.2+chaos5)*0.28,cos(fi*2.8+chaos6)*0.26))-0.06-coral2*0.45; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(spore4,spore5)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*12.0+t*6.5+fi)*0.03; float bloom=exp(-abs(organism)*9.5); float glow=exp(-abs(organism)*3.5)*1.8; vec2 flow1=vec2(sin(layer.x*7.5+t*4.2+fi+storm*2.5),cos(layer.y*6.8+t*3.5+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*2.8+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*4.5+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*3.2+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*3.8+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*5.2+fi),cos(angle*4.5+r*3.8+t*4.0+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*5.0+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*4.2+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*6.8+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*5.5+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.6+0.4; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.65+0.35; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.55+0.45; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow1+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow2+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow3+8.0))*0.58+0.42; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow2+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow3+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.62+0.38; vec3 pigment6=vec3(cos(bio1*3.1+fi*2.0+chaos3*1.8+rainbow4+2.5),sin(bio2*3.4+fi*1.7+chaos4*1.6+rainbow5+4.8),cos(bio3*2.9+fi*2.1+chaos3*1.4+rainbow4+7.2))*0.68+0.32; vec3 pigment7=vec3(sin(bio4*3.6+fi*1.5+chaos4*1.9+rainbow5+1.2),cos(bio5*2.7+fi*2.3+chaos3*1.7+rainbow4+3.8),sin(bio1*3.0+fi*1.9+chaos4*1.3+rainbow5+6.5))*0.72+0.28; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment1,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5); vec3 ecosystem3=mix(mix(pigment6,pigment7,sin(t*4.5+fi+chaos3*3.0)*0.5+0.5),pigment2,cos(t*3.8+fi+chaos4*2.5)*0.5+0.5); vec3 ecosystem=mix(mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5),ecosystem3,cos(t*2.8+fi+storm)*0.5+0.5); col+=ecosystem*bloom*(0.95-fi*0.03)*glow*1.2; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.6+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.4; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.35; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.3; col+=vec3(prism*2.5+spectrum1*1.8,prism*2.0+spectrum2*2.2,prism*2.8+spectrum1*1.5)*exp(-r*0.5); col=pow(col*0.18,vec3(0.85)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033n = () => glsl('vec2 p=(_st-vec2(-0.1,-0.05))*7.2; float t=time*0.05; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p+vec2(sin(t*0.15)*0.8,cos(t*0.12)*0.6); float storm=sin(t*0.35)*cos(t*0.48)*0.7; float turbulence=cos(t*0.22)*sin(t*0.62)*0.6; float chaos1=sin(t*0.55)*cos(t*0.82)*0.5; float chaos2=cos(t*0.42)*sin(t*1.05)*0.55; float chaos3=sin(t*0.78)*cos(t*0.63)*0.6; float chaos4=cos(t*0.98)*sin(t*0.49)*0.48; float chaos5=sin(t*1.12)*cos(t*0.36)*0.52; float chaos6=cos(t*1.26)*sin(t*0.71)*0.58; float rainbow1=sin(t*0.4+r*3.2)*0.8+1.2; float rainbow2=cos(t*0.7+angle*2.8)*0.85+1.15; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*0.78+1.22; float rainbow4=cos(t*0.6+r*4.0+angle*2.5)*0.82+1.18; float rainbow5=sin(t*1.2+r*2.8+angle*4.2)*0.76+1.24; for(int j=0;j<4;j++){float fj=float(j)*1.2; vec2 layer=z*pow(0.7,fj); for(int i=0;i<18;i++){float fi=float(i)*0.18+fj*0.1; vec2 noise=vec2(sin(layer.x*4.5+t*1.2+fi)*cos(layer.y*4.2+t*1.0+fi),cos(layer.x*3.8+t*0.8+fi)*sin(layer.y*5.2+t*1.4+fi))*0.12; layer+=noise; float vortex1=t*0.22+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.35+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.48+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*2.5+fi)*cos(layer.x*5.2-layer.y*8.5+t*2.1+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*2.8+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*2.3+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*3.2+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*2.6+fi*1.8)*0.06; float smooth1=smoothstep(-0.1,0.1,layer.x*1.1+layer.y*0.6+coral1)-0.06; float smooth2=smoothstep(-0.1,0.1,layer.y*1.0-layer.x*0.5+coral1)-0.07; float smooth3=smoothstep(-0.1,0.1,layer.x*0.9-layer.y*0.8+coral2)-0.05; float smooth4=smoothstep(-0.1,0.1,layer.y*1.1+layer.x*0.4+coral2)-0.08; float smooth5=smoothstep(-0.1,0.1,layer.x*1.2+layer.y*0.3+coral3)-0.04; float smooth6=smoothstep(-0.1,0.1,layer.y*0.9-layer.x*0.7+coral3)-0.06; float mycelium=min(min(min(smooth1,smooth2),min(smooth3,smooth4)),min(smooth5,smooth6)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float spore4=length(layer-vec2(cos(fi*2.2+chaos3)*0.32,sin(fi*2.6+chaos4)*0.30))-0.075-coral1*0.55; float spore5=length(layer-vec2(sin(fi*3.2+chaos5)*0.28,cos(fi*2.8+chaos6)*0.26))-0.06-coral2*0.45; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(spore4,spore5)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*12.0+t*6.5+fi)*0.03; float bloom=exp(-abs(organism)*9.5); float glow=exp(-abs(organism)*3.5)*1.8; vec2 flow1=vec2(sin(layer.x*7.5+t*2.8+fi+storm*2.5),cos(layer.y*6.8+t*2.3+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*1.9+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*3.0+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*2.1+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*2.5+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*3.5+fi),cos(angle*4.5+r*3.8+t*2.7+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*3.3+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*2.8+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*4.5+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*3.2+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*3.7+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.6+0.4; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.65+0.35; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.55+0.45; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow1+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow2+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow3+8.0))*0.58+0.42; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow2+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow3+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.62+0.38; vec3 pigment6=vec3(cos(bio1*3.1+fi*2.0+chaos3*1.8+rainbow4+2.5),sin(bio2*3.4+fi*1.7+chaos4*1.6+rainbow5+4.8),cos(bio3*2.9+fi*2.1+chaos3*1.4+rainbow4+7.2))*0.68+0.32; vec3 pigment7=vec3(sin(bio4*3.6+fi*1.5+chaos4*1.9+rainbow5+1.2),cos(bio5*2.7+fi*2.3+chaos3*1.7+rainbow4+3.8),sin(bio1*3.0+fi*1.9+chaos4*1.3+rainbow5+6.5))*0.72+0.28; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment1,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5); vec3 ecosystem3=mix(mix(pigment6,pigment7,sin(t*4.5+fi+chaos3*3.0)*0.5+0.5),pigment2,cos(t*3.8+fi+chaos4*2.5)*0.5+0.5); vec3 ecosystem=mix(mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5),ecosystem3,cos(t*2.8+fi+storm)*0.5+0.5); col+=ecosystem*bloom*(0.95-fi*0.03)*glow*1.2; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.6+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.4; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.35; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.3; col+=vec3(prism*2.5+spectrum1*1.8,prism*2.0+spectrum2*2.2,prism*2.8+spectrum1*1.5)*exp(-r*0.5); col=pow(col*0.18,vec3(0.85)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033o = () => glsl('vec2 p=(_st-vec2(-0.12,-0.08))*5.8; float t=time*0.05; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p+vec2(sin(t*0.15)*1.2,cos(t*0.12)*1.0); float storm=sin(t*0.35)*cos(t*0.48)*0.9; float turbulence=cos(t*0.22)*sin(t*0.62)*0.8; float chaos1=sin(t*0.55)*cos(t*0.82)*0.7; float chaos2=cos(t*0.42)*sin(t*1.05)*0.75; float chaos3=sin(t*0.78)*cos(t*0.63)*0.8; float chaos4=cos(t*0.98)*sin(t*0.49)*0.68; float chaos5=sin(t*1.12)*cos(t*0.36)*0.72; float chaos6=cos(t*1.26)*sin(t*0.71)*0.78; float rainbow1=sin(t*0.4+r*3.2)*1.2+1.6; float rainbow2=cos(t*0.7+angle*2.8)*1.3+1.5; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*1.1+1.7; float rainbow4=cos(t*0.6+r*4.0+angle*2.5)*1.25+1.55; float rainbow5=sin(t*1.2+r*2.8+angle*4.2)*1.15+1.65; float rainbow6=cos(t*0.8+r*3.5+angle*3.8)*1.35+1.45; float rainbow7=sin(t*1.0+r*2.2+angle*4.8)*1.05+1.75; for(int j=0;j<4;j++){float fj=float(j)*1.2; vec2 layer=z*pow(0.7,fj); for(int i=0;i<18;i++){float fi=float(i)*0.18+fj*0.1; vec2 noise=vec2(sin(layer.x*4.5+t*1.2+fi)*cos(layer.y*4.2+t*1.0+fi),cos(layer.x*3.8+t*0.8+fi)*sin(layer.y*5.2+t*1.4+fi))*0.12; layer+=noise; float vortex1=t*0.22+fi*1.1+storm*1.8+chaos1*1.5; float vortex2=t*0.35+fi*0.8+turbulence*1.5+chaos2*1.2; float vortex3=t*0.48+fi*0.6+storm*1.2+chaos1*1.0; mat2 spiral1=mat2(cos(vortex1)+noise.x*0.7,sin(vortex1)+noise.y*0.6,-sin(vortex1)+noise.y*0.5,cos(vortex1)+noise.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+noise.y*0.55,sin(vortex2*0.9)+noise.x*0.45,-sin(vortex2*0.9)+noise.x*0.4,cos(vortex2*0.9)+noise.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*2.5+fi)*cos(layer.x*5.2-layer.y*8.5+t*2.1+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*2.8+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*2.3+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*3.2+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*2.6+fi*1.8)*0.06; float smooth1=smoothstep(-0.1,0.1,layer.x*1.1+layer.y*0.6+coral1)-0.06; float smooth2=smoothstep(-0.1,0.1,layer.y*1.0-layer.x*0.5+coral1)-0.07; float smooth3=smoothstep(-0.1,0.1,layer.x*0.9-layer.y*0.8+coral2)-0.05; float smooth4=smoothstep(-0.1,0.1,layer.y*1.1+layer.x*0.4+coral2)-0.08; float smooth5=smoothstep(-0.1,0.1,layer.x*1.2+layer.y*0.3+coral3)-0.04; float smooth6=smoothstep(-0.1,0.1,layer.y*0.9-layer.x*0.7+coral3)-0.06; float mycelium=min(min(min(smooth1,smooth2),min(smooth3,smooth4)),min(smooth5,smooth6)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float spore4=length(layer-vec2(cos(fi*2.2+chaos3)*0.32,sin(fi*2.6+chaos4)*0.30))-0.075-coral1*0.55; float spore5=length(layer-vec2(sin(fi*3.2+chaos5)*0.28,cos(fi*2.8+chaos6)*0.26))-0.06-coral2*0.45; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(min(mycelium,spore1),min(spore2,spore3)),min(spore4,spore5)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*8.0+t*6.5+fi)*0.08; float bloom=exp(-abs(organism)*6.0)*1.5; float glow=exp(-abs(organism)*2.0)*2.5; float density1=sin(layer.x*15.0+layer.y*12.0+t*4.5)*cos(layer.x*18.0-layer.y*14.0+t*3.8)*0.15; float density2=cos(layer.x*22.0+layer.y*16.0+t*5.2)*sin(layer.x*20.0-layer.y*18.0+t*4.1)*0.12; float density3=sin(layer.x*25.0+layer.y*20.0+t*6.0)*cos(layer.x*28.0-layer.y*22.0+t*5.5)*0.10; bloom=bloom*(1.5+density1+density2+density3); vec2 flow1=vec2(sin(layer.x*7.5+t*2.8+fi+storm*2.5),cos(layer.y*6.8+t*2.3+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*1.9+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*3.0+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*2.1+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*2.5+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*3.5+fi),cos(angle*4.5+r*3.8+t*2.7+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*3.3+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*2.8+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*4.5+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*3.2+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*3.7+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.9+0.1; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.95+0.05; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.85+0.15; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow4+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow5+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow6+8.0))*0.88+0.12; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow6+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow7+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.92+0.08; vec3 pigment6=vec3(cos(bio1*3.1+fi*2.0+chaos3*1.8+rainbow4+2.5),sin(bio2*3.4+fi*1.7+chaos4*1.6+rainbow5+4.8),cos(bio3*2.9+fi*2.1+chaos3*1.4+rainbow4+7.2))*0.96+0.04; vec3 pigment7=vec3(sin(bio4*3.6+fi*1.5+chaos4*1.9+rainbow5+1.2),cos(bio5*2.7+fi*2.3+chaos3*1.7+rainbow4+3.8),sin(bio1*3.0+fi*1.9+chaos4*1.3+rainbow5+6.5))*1.0+0.0; vec3 pigment8=vec3(cos(bio2*4.2+fi*2.8+chaos5*2.0+rainbow6+3.5),sin(bio3*3.8+fi*2.4+chaos6*1.8+rainbow7+5.2),cos(bio4*4.0+fi*2.6+chaos5*1.6+rainbow1+7.8))*0.94+0.06; vec3 pigment9=vec3(sin(bio5*4.5+fi*3.0+chaos6*2.2+rainbow2+2.8),cos(bio1*3.9+fi*2.7+chaos4*1.9+rainbow3+6.0),sin(bio2*4.1+fi*2.9+chaos5*1.7+rainbow4+8.5))*0.91+0.09; vec3 ecosystem1=mix(mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5),pigment8,sin(t*4.8+fi+chaos5*2.8)*0.5+0.5); vec3 ecosystem2=mix(mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment6,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5),pigment9,cos(t*5.2+fi+chaos6*3.2)*0.5+0.5); vec3 ecosystem3=mix(mix(mix(pigment7,pigment8,sin(t*4.5+fi+chaos3*3.0)*0.5+0.5),pigment9,cos(t*3.8+fi+chaos4*2.5)*0.5+0.5),pigment1,sin(t*6.0+fi+storm*3.5)*0.5+0.5); vec3 ecosystem4=mix(mix(mix(pigment2,pigment9,cos(t*5.5+fi+turbulence*4.0)*0.5+0.5),pigment7,sin(t*4.2+fi+chaos5*2.2)*0.5+0.5),pigment3,cos(t*7.2+fi+chaos6*4.5)*0.5+0.5); vec3 ecosystem=mix(mix(mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5),ecosystem3,cos(t*2.8+fi+storm)*0.5+0.5),ecosystem4,sin(t*3.5+fi+turbulence)*0.5+0.5); col+=ecosystem*bloom*(1.8-fi*0.05)*glow*1.8; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.2+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.6; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.55; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.5; float spectrum3=cos(angle*33.5+r*6.2+t*15.8+rainbow4*3.5)*sin(angle*29.8+r*8.5+t*13.2+rainbow5*4.0)*0.45; float spectrum4=sin(angle*36.0+r*5.8+t*16.5+rainbow6*3.2)*cos(angle*32.2+r*7.8+t*14.0+rainbow7*3.8)*0.4; col+=vec3(prism*3.5+spectrum1*2.5+spectrum3*1.8,prism*3.0+spectrum2*3.2+spectrum4*2.0,prism*4.2+spectrum1*2.2+spectrum3*2.5)*exp(-r*0.3); col=pow(col*0.08,vec3(1.2)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033p = () => glsl('vec2 p=(_st-vec2(-0.12,-0.08))*4.5; float t=time*0.03; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p+vec2(sin(t*0.08)*1.5,cos(t*0.06)*1.3); float storm=sin(t*0.35)*cos(t*0.48)*0.9; float turbulence=cos(t*0.22)*sin(t*0.62)*0.8; float chaos1=sin(t*0.55)*cos(t*0.82)*0.7; float chaos2=cos(t*0.42)*sin(t*1.05)*0.75; float chaos3=sin(t*0.78)*cos(t*0.63)*0.8; float chaos4=cos(t*0.98)*sin(t*0.49)*0.68; float chaos5=sin(t*1.12)*cos(t*0.36)*0.72; float chaos6=cos(t*1.26)*sin(t*0.71)*0.78; float rainbow1=sin(t*0.4+r*3.2)*1.2+1.6; float rainbow2=cos(t*0.7+angle*2.8)*1.3+1.5; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*1.1+1.7; float rainbow4=cos(t*0.6+r*4.0+angle*2.5)*1.25+1.55; float rainbow5=sin(t*1.2+r*2.8+angle*4.2)*1.15+1.65; float rainbow6=cos(t*0.8+r*3.5+angle*3.8)*1.35+1.45; float rainbow7=sin(t*1.0+r*2.2+angle*4.8)*1.05+1.75; for(int j=0;j<4;j++){float fj=float(j)*1.2; vec2 layer=z*pow(0.7,fj); for(int i=0;i<18;i++){float fi=float(i)*0.18+fj*0.1; vec2 flow=vec2(sin(layer.x*1.2+t*0.3+fi)*cos(layer.y*1.0+t*0.25+fi),cos(layer.x*1.0+t*0.2+fi)*sin(layer.y*1.4+t*0.35+fi))*0.05; layer+=flow; float vortex1=t*0.12+fi*0.8+storm*1.2+chaos1*1.0; float vortex2=t*0.18+fi*0.6+turbulence*1.0+chaos2*0.8; float vortex3=t*0.25+fi*0.4+storm*0.8+chaos1*0.6; mat2 spiral1=mat2(cos(vortex1)+flow.x*0.7,sin(vortex1)+flow.y*0.6,-sin(vortex1)+flow.y*0.5,cos(vortex1)+flow.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+flow.y*0.55,sin(vortex2*0.9)+flow.x*0.45,-sin(vortex2*0.9)+flow.x*0.4,cos(vortex2*0.9)+flow.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*2.5+fi)*cos(layer.x*5.2-layer.y*8.5+t*2.1+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*2.8+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*2.3+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*3.2+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*2.6+fi*1.8)*0.06; float line1=abs(layer.y*2.0+sin(layer.x*1.5+t*2.0+fi)*0.3)-0.05; float line2=abs(layer.x*2.5+cos(layer.y*1.8+t*1.8+fi)*0.25)-0.04; float line3=abs((layer.x+layer.y)*1.2+sin(t*1.5+fi)*0.2)-0.06; float line4=abs((layer.y-layer.x)*1.8+cos(t*2.2+fi)*0.28)-0.045; float line5=abs(layer.x*1.5+sin(layer.y*2.2+t*1.2+fi)*0.35)-0.055; float line6=abs(layer.y*1.8-cos(layer.x*2.0+t*1.6+fi)*0.22)-0.048; float wave1=abs(layer.y+sin(layer.x*3.0+t*1.4+fi)*0.15)-0.03; float wave2=abs(layer.x+cos(layer.y*2.8+t*1.0+fi)*0.18)-0.035; float lines=min(min(min(min(line1,line2),min(line3,line4)),min(line5,line6)),min(wave1,wave2)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float spore4=length(layer-vec2(cos(fi*2.2+chaos3)*0.32,sin(fi*2.6+chaos4)*0.30))-0.075-coral1*0.55; float spore5=length(layer-vec2(sin(fi*3.2+chaos5)*0.28,cos(fi*2.8+chaos6)*0.26))-0.06-coral2*0.45; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(min(lines,spore1),min(spore2,spore3)),min(spore4,spore5)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*4.0+t*6.5+fi)*0.15; float bloom=exp(-abs(organism)*3.5)*2.8; float glow=exp(-abs(organism)*1.2)*4.5; float density1=sin(layer.x*8.0+layer.y*6.0+t*2.2)*cos(layer.x*9.0-layer.y*7.0+t*1.9)*0.35; float density2=cos(layer.x*11.0+layer.y*8.0+t*2.6)*sin(layer.x*10.0-layer.y*9.0+t*2.0)*0.28; float density3=sin(layer.x*12.5+layer.y*10.0+t*3.0)*cos(layer.x*14.0-layer.y*11.0+t*2.7)*0.22; float density4=cos(layer.x*6.5+layer.y*5.0+t*1.8)*sin(layer.x*7.5-layer.y*6.5+t*1.5)*0.40; float density5=sin(layer.x*13.5+layer.y*9.5+t*3.2)*cos(layer.x*15.5-layer.y*12.5+t*2.8)*0.18; bloom=bloom*(2.5+density1+density2+density3+density4+density5); vec2 flow1=vec2(sin(layer.x*7.5+t*2.8+fi+storm*2.5),cos(layer.y*6.8+t*2.3+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*1.9+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*3.0+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*2.1+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*2.5+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*3.5+fi),cos(angle*4.5+r*3.8+t*2.7+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*3.3+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*2.8+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*4.5+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*3.2+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*3.7+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.9+0.1; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.95+0.05; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.85+0.15; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow4+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow5+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow6+8.0))*0.88+0.12; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow6+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow7+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.92+0.08; vec3 pigment6=vec3(cos(bio1*3.1+fi*2.0+chaos3*1.8+rainbow4+2.5),sin(bio2*3.4+fi*1.7+chaos4*1.6+rainbow5+4.8),cos(bio3*2.9+fi*2.1+chaos3*1.4+rainbow4+7.2))*0.96+0.04; vec3 pigment7=vec3(sin(bio4*3.6+fi*1.5+chaos4*1.9+rainbow5+1.2),cos(bio5*2.7+fi*2.3+chaos3*1.7+rainbow4+3.8),sin(bio1*3.0+fi*1.9+chaos4*1.3+rainbow5+6.5))*1.0+0.0; vec3 pigment8=vec3(cos(bio2*4.2+fi*2.8+chaos5*2.0+rainbow6+3.5),sin(bio3*3.8+fi*2.4+chaos6*1.8+rainbow7+5.2),cos(bio4*4.0+fi*2.6+chaos5*1.6+rainbow1+7.8))*0.94+0.06; vec3 pigment9=vec3(sin(bio5*4.5+fi*3.0+chaos6*2.2+rainbow2+2.8),cos(bio1*3.9+fi*2.7+chaos4*1.9+rainbow3+6.0),sin(bio2*4.1+fi*2.9+chaos5*1.7+rainbow4+8.5))*0.91+0.09; vec3 ecosystem1=mix(mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5),pigment8,sin(t*4.8+fi+chaos5*2.8)*0.5+0.5); vec3 ecosystem2=mix(mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment6,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5),pigment9,cos(t*5.2+fi+chaos6*3.2)*0.5+0.5); vec3 ecosystem3=mix(mix(mix(pigment7,pigment8,sin(t*4.5+fi+chaos3*3.0)*0.5+0.5),pigment9,cos(t*3.8+fi+chaos4*2.5)*0.5+0.5),pigment1,sin(t*6.0+fi+storm*3.5)*0.5+0.5); vec3 ecosystem4=mix(mix(mix(pigment2,pigment9,cos(t*5.5+fi+turbulence*4.0)*0.5+0.5),pigment7,sin(t*4.2+fi+chaos5*2.2)*0.5+0.5),pigment3,cos(t*7.2+fi+chaos6*4.5)*0.5+0.5); vec3 ecosystem=mix(mix(mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5),ecosystem3,cos(t*2.8+fi+storm)*0.5+0.5),ecosystem4,sin(t*3.5+fi+turbulence)*0.5+0.5); col+=ecosystem*bloom*(1.8-fi*0.05)*glow*1.8; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.2+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.6; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.55; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.5; float spectrum3=cos(angle*33.5+r*6.2+t*15.8+rainbow4*3.5)*sin(angle*29.8+r*8.5+t*13.2+rainbow5*4.0)*0.45; float spectrum4=sin(angle*36.0+r*5.8+t*16.5+rainbow6*3.2)*cos(angle*32.2+r*7.8+t*14.0+rainbow7*3.8)*0.4; col+=vec3(prism*3.5+spectrum1*2.5+spectrum3*1.8,prism*3.0+spectrum2*3.2+spectrum4*2.0,prism*4.2+spectrum1*2.2+spectrum3*2.5)*exp(-r*0.3); col=pow(col*0.08,vec3(1.2)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033q = () => glsl('vec2 p=(_st-vec2(-0.12,-0.08))*4.5; float t=time*0.025; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p+vec2(sin(t*0.08)*1.5,cos(t*0.06)*1.3); float storm=sin(t*0.35)*cos(t*0.48)*0.9; float turbulence=cos(t*0.22)*sin(t*0.62)*0.8; float chaos1=sin(t*0.55)*cos(t*0.82)*0.7; float chaos2=cos(t*0.42)*sin(t*1.05)*0.75; float chaos3=sin(t*0.78)*cos(t*0.63)*0.8; float chaos4=cos(t*0.98)*sin(t*0.49)*0.68; float chaos5=sin(t*1.12)*cos(t*0.36)*0.72; float chaos6=cos(t*1.26)*sin(t*0.71)*0.78; float rainbow1=sin(t*0.4+r*3.2)*1.2+1.6; float rainbow2=cos(t*0.7+angle*2.8)*1.3+1.5; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*1.1+1.7; float rainbow4=cos(t*0.6+r*4.0+angle*2.5)*1.25+1.55; float rainbow5=sin(t*1.2+r*2.8+angle*4.2)*1.15+1.65; float rainbow6=cos(t*0.8+r*3.5+angle*3.8)*1.35+1.45; float rainbow7=sin(t*1.0+r*2.2+angle*4.8)*1.05+1.75; for(int j=0;j<4;j++){float fj=float(j)*1.2; vec2 layer=z*pow(0.7,fj); for(int i=0;i<18;i++){float fi=float(i)*0.18+fj*0.1; vec2 flow=vec2(sin(layer.x*1.2+t*0.3+fi)*cos(layer.y*1.0+t*0.25+fi),cos(layer.x*1.0+t*0.2+fi)*sin(layer.y*1.4+t*0.35+fi))*0.05; layer+=flow; float vortex1=t*0.12+fi*0.8+storm*1.2+chaos1*1.0; float vortex2=t*0.18+fi*0.6+turbulence*1.0+chaos2*0.8; float vortex3=t*0.25+fi*0.4+storm*0.8+chaos1*0.6; mat2 spiral1=mat2(cos(vortex1)+flow.x*0.7,sin(vortex1)+flow.y*0.6,-sin(vortex1)+flow.y*0.5,cos(vortex1)+flow.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+flow.y*0.55,sin(vortex2*0.9)+flow.x*0.45,-sin(vortex2*0.9)+flow.x*0.4,cos(vortex2*0.9)+flow.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*2.5+fi)*cos(layer.x*5.2-layer.y*8.5+t*2.1+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*2.8+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*2.3+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*3.2+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*2.6+fi*1.8)*0.06; float flow_organic=sin(t*0.8+fi)*0.15; float line1=abs(layer.y*2.0+sin(layer.x*1.5+t*1.8+fi+flow_organic)*0.25)-0.04; float line2=abs(layer.x*2.5+cos(layer.y*1.8+t*1.6+fi+flow_organic)*0.22)-0.035; float line3=abs((layer.x+layer.y)*1.2+sin(t*1.4+fi+flow_organic)*0.18)-0.045; float line4=abs((layer.y-layer.x)*1.8+cos(t*2.0+fi+flow_organic)*0.26)-0.038; float line5=abs(layer.x*1.5+sin(layer.y*2.2+t*1.2+fi+flow_organic)*0.32)-0.042; float line6=abs(layer.y*1.8-cos(layer.x*2.0+t*1.5+fi+flow_organic)*0.20)-0.036; float wave1=abs(layer.y+sin(layer.x*3.0+t*1.3+fi+flow_organic)*0.14)-0.025; float wave2=abs(layer.x+cos(layer.y*2.8+t*1.0+fi+flow_organic)*0.16)-0.028; float lines=min(min(min(min(line1,line2),min(line3,line4)),min(line5,line6)),min(wave1,wave2)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float spore4=length(layer-vec2(cos(fi*2.2+chaos3)*0.32,sin(fi*2.6+chaos4)*0.30))-0.075-coral1*0.55; float spore5=length(layer-vec2(sin(fi*3.2+chaos5)*0.28,cos(fi*2.8+chaos6)*0.26))-0.06-coral2*0.45; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(min(lines,spore1),min(spore2,spore3)),min(spore4,spore5)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*4.0+t*6.5+fi)*0.15; float bloom=exp(-abs(organism)*3.5)*2.8; float glow=exp(-abs(organism)*1.2)*4.5; float density1=sin(layer.x*8.0+layer.y*6.0+t*2.2)*cos(layer.x*9.0-layer.y*7.0+t*1.9)*0.35; float density2=cos(layer.x*11.0+layer.y*8.0+t*2.6)*sin(layer.x*10.0-layer.y*9.0+t*2.0)*0.28; float density3=sin(layer.x*12.5+layer.y*10.0+t*3.0)*cos(layer.x*14.0-layer.y*11.0+t*2.7)*0.22; float density4=cos(layer.x*6.5+layer.y*5.0+t*1.8)*sin(layer.x*7.5-layer.y*6.5+t*1.5)*0.40; float density5=sin(layer.x*13.5+layer.y*9.5+t*3.2)*cos(layer.x*15.5-layer.y*12.5+t*2.8)*0.18; bloom=bloom*(2.5+density1+density2+density3+density4+density5); vec2 flow1=vec2(sin(layer.x*7.5+t*2.8+fi+storm*2.5),cos(layer.y*6.8+t*2.3+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*1.9+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*3.0+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*2.1+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*2.5+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*3.5+fi),cos(angle*4.5+r*3.8+t*2.7+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*3.3+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*2.8+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*4.5+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*3.2+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*3.7+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.9+0.1; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.95+0.05; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.85+0.15; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow4+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow5+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow6+8.0))*0.88+0.12; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow6+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow7+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.92+0.08; vec3 pigment6=vec3(cos(bio1*3.1+fi*2.0+chaos3*1.8+rainbow4+2.5),sin(bio2*3.4+fi*1.7+chaos4*1.6+rainbow5+4.8),cos(bio3*2.9+fi*2.1+chaos3*1.4+rainbow4+7.2))*0.96+0.04; vec3 pigment7=vec3(sin(bio4*3.6+fi*1.5+chaos4*1.9+rainbow5+1.2),cos(bio5*2.7+fi*2.3+chaos3*1.7+rainbow4+3.8),sin(bio1*3.0+fi*1.9+chaos4*1.3+rainbow5+6.5))*1.0+0.0; vec3 pigment8=vec3(cos(bio2*4.2+fi*2.8+chaos5*2.0+rainbow6+3.5),sin(bio3*3.8+fi*2.4+chaos6*1.8+rainbow7+5.2),cos(bio4*4.0+fi*2.6+chaos5*1.6+rainbow1+7.8))*0.94+0.06; vec3 pigment9=vec3(sin(bio5*4.5+fi*3.0+chaos6*2.2+rainbow2+2.8),cos(bio1*3.9+fi*2.7+chaos4*1.9+rainbow3+6.0),sin(bio2*4.1+fi*2.9+chaos5*1.7+rainbow4+8.5))*0.91+0.09; vec3 ecosystem1=mix(mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5),pigment8,sin(t*4.8+fi+chaos5*2.8)*0.5+0.5); vec3 ecosystem2=mix(mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment6,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5),pigment9,cos(t*5.2+fi+chaos6*3.2)*0.5+0.5); vec3 ecosystem3=mix(mix(mix(pigment7,pigment8,sin(t*4.5+fi+chaos3*3.0)*0.5+0.5),pigment9,cos(t*3.8+fi+chaos4*2.5)*0.5+0.5),pigment1,sin(t*6.0+fi+storm*3.5)*0.5+0.5); vec3 ecosystem4=mix(mix(mix(pigment2,pigment9,cos(t*5.5+fi+turbulence*4.0)*0.5+0.5),pigment7,sin(t*4.2+fi+chaos5*2.2)*0.5+0.5),pigment3,cos(t*7.2+fi+chaos6*4.5)*0.5+0.5); vec3 ecosystem=mix(mix(mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5),ecosystem3,cos(t*2.8+fi+storm)*0.5+0.5),ecosystem4,sin(t*3.5+fi+turbulence)*0.5+0.5); col+=ecosystem*bloom*(1.8-fi*0.05)*glow*1.8; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.2+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.6; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.55; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.5; float spectrum3=cos(angle*33.5+r*6.2+t*15.8+rainbow4*3.5)*sin(angle*29.8+r*8.5+t*13.2+rainbow5*4.0)*0.45; float spectrum4=sin(angle*36.0+r*5.8+t*16.5+rainbow6*3.2)*cos(angle*32.2+r*7.8+t*14.0+rainbow7*3.8)*0.4; col+=vec3(prism*3.5+spectrum1*2.5+spectrum3*1.8,prism*3.0+spectrum2*3.2+spectrum4*2.0,prism*4.2+spectrum1*2.2+spectrum3*2.5)*exp(-r*0.3); col=pow(col*0.08,vec3(1.2)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);


window.gl033r = () => glsl('vec2 p=(_st-vec2(-0.12,-0.08))*4.5; float t=time*0.018; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p+vec2(sin(t*0.08)*1.5,cos(t*0.06)*1.3); float storm=sin(t*0.35)*cos(t*0.48)*0.9; float turbulence=cos(t*0.22)*sin(t*0.62)*0.8; float chaos1=sin(t*0.55)*cos(t*0.82)*0.7; float chaos2=cos(t*0.42)*sin(t*1.05)*0.75; float chaos3=sin(t*0.78)*cos(t*0.63)*0.8; float chaos4=cos(t*0.98)*sin(t*0.49)*0.68; float chaos5=sin(t*1.12)*cos(t*0.36)*0.72; float chaos6=cos(t*1.26)*sin(t*0.71)*0.78; float rainbow1=sin(t*0.4+r*3.2)*1.2+1.6; float rainbow2=cos(t*0.7+angle*2.8)*1.3+1.5; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*1.1+1.7; float rainbow4=cos(t*0.6+r*4.0+angle*2.5)*1.25+1.55; float rainbow5=sin(t*1.2+r*2.8+angle*4.2)*1.15+1.65; float rainbow6=cos(t*0.8+r*3.5+angle*3.8)*1.35+1.45; float rainbow7=sin(t*1.0+r*2.2+angle*4.8)*1.05+1.75; for(int j=0;j<4;j++){float fj=float(j)*1.2; vec2 layer=z*pow(0.7,fj); for(int i=0;i<18;i++){float fi=float(i)*0.18+fj*0.1; vec2 flow=vec2(sin(layer.x*1.2+t*0.3+fi)*cos(layer.y*1.0+t*0.25+fi),cos(layer.x*1.0+t*0.2+fi)*sin(layer.y*1.4+t*0.35+fi))*0.05; layer+=flow; float vortex1=t*0.12+fi*0.8+storm*1.2+chaos1*1.0; float vortex2=t*0.18+fi*0.6+turbulence*1.0+chaos2*0.8; float vortex3=t*0.25+fi*0.4+storm*0.8+chaos1*0.6; mat2 spiral1=mat2(cos(vortex1)+flow.x*0.7,sin(vortex1)+flow.y*0.6,-sin(vortex1)+flow.y*0.5,cos(vortex1)+flow.x*0.65); mat2 spiral2=mat2(cos(vortex2*0.9)+flow.y*0.55,sin(vortex2*0.9)+flow.x*0.45,-sin(vortex2*0.9)+flow.x*0.4,cos(vortex2*0.9)+flow.y*0.6); mat2 spiral3=mat2(cos(vortex3*1.1)+chaos1*0.5,sin(vortex3*1.1)+chaos2*0.45,-sin(vortex3*1.1)+chaos2*0.4,cos(vortex3*1.1)+chaos1*0.55); layer=spiral1*layer; vec2 warp=vec2(sin(layer.x*2.5+layer.y*1.8+t*1.2+fi)*0.4,cos(layer.x*1.9+layer.y*2.2+t*0.8+fi)*0.35); layer=layer*1.3+warp-vec2(0.8+sin(t*0.8+fi+storm)*0.45,0.65+cos(t*0.6+fi+turbulence)*0.4); layer=spiral2*layer; layer=spiral3*layer; float d=length(layer); float coral1=sin(layer.x*7.5+layer.y*6.8+t*2.5+fi)*cos(layer.x*5.2-layer.y*8.5+t*2.1+fi)*0.1; float coral2=cos(layer.x*6.2+layer.y*7.8+t*2.8+fi*1.5)*sin(layer.x*8.0-layer.y*6.5+t*2.3+fi*1.2)*0.08; float coral3=sin(layer.x*9.5+layer.y*5.8+t*3.2+fi*2.0)*cos(layer.x*4.8-layer.y*9.2+t*2.6+fi*1.8)*0.06; float flow_organic=sin(t*0.5+fi*0.3)*0.12; float line1=abs(layer.y*2.0+sin(layer.x*1.5+t*1.2+fi+flow_organic)*0.25)-0.04; float line2=abs(layer.x*2.5+cos(layer.y*1.8+t*1.0+fi+flow_organic)*0.22)-0.035; float line3=abs((layer.x+layer.y)*1.2+sin(t*0.9+fi+flow_organic)*0.18)-0.045; float line4=abs((layer.y-layer.x)*1.8+cos(t*1.1+fi+flow_organic)*0.26)-0.038; float line5=abs(layer.x*1.5+sin(layer.y*2.2+t*0.8+fi+flow_organic)*0.32)-0.042; float line6=abs(layer.y*1.8-cos(layer.x*2.0+t*1.0+fi+flow_organic)*0.20)-0.036; float wave1=abs(layer.y+sin(layer.x*3.0+t*0.7+fi+flow_organic)*0.14)-0.025; float wave2=abs(layer.x+cos(layer.y*2.8+t*0.6+fi+flow_organic)*0.16)-0.028; float lines=min(min(min(min(line1,line2),min(line3,line4)),min(line5,line6)),min(wave1,wave2)); float spore1=length(layer-vec2(sin(fi*2.5)*0.4,cos(fi*2.2)*0.35))-0.09-coral1*0.6; float spore2=length(layer-vec2(cos(fi*3.0)*0.3,sin(fi*2.8)*0.32))-0.07-coral2*0.5; float spore3=length(layer-vec2(sin(fi*1.8+chaos1)*0.35,cos(fi*2.0+chaos2)*0.28))-0.08-coral3*0.4; float spore4=length(layer-vec2(cos(fi*2.2+chaos3)*0.32,sin(fi*2.6+chaos4)*0.30))-0.075-coral1*0.55; float spore5=length(layer-vec2(sin(fi*3.2+chaos5)*0.28,cos(fi*2.8+chaos6)*0.26))-0.06-coral2*0.45; float virus=length(layer-vec2(sin(fi*4.5+fj)*0.25,cos(fi*4.2+fj)*0.22))-0.05-sin(length(layer)*15.0+t*8.5+fi)*0.02; float bacteria=smoothstep(0.03,0.05,length(vec2(layer.x*1.8,layer.y*1.6)))-0.035+cos(length(layer)*18.0+t*7.2+fi)*0.015; float algae=length(layer-vec2(cos(fi*3.5+t)*0.3,sin(fi*3.2+t)*0.28))-0.06-cos(length(layer)*20.0+t*9.0+fi)*0.02; float plankton=smoothstep(0.02,0.05,length(vec2(layer.x*1.4+layer.y*1.2,layer.y*1.5-layer.x*1.1)))-0.035+sin(length(layer)*22.0+t*8.8+fi)*0.018; float organism=min(min(min(min(min(lines,spore1),min(spore2,spore3)),min(spore4,spore5)),min(virus,bacteria)),min(algae,plankton))+sin(length(layer)*4.0+t*6.5+fi)*0.15; float bloom=exp(-abs(organism)*3.5)*2.8; float glow=exp(-abs(organism)*1.2)*4.5; float density1=sin(layer.x*8.0+layer.y*6.0+t*2.2)*cos(layer.x*9.0-layer.y*7.0+t*1.9)*0.35; float density2=cos(layer.x*11.0+layer.y*8.0+t*2.6)*sin(layer.x*10.0-layer.y*9.0+t*2.0)*0.28; float density3=sin(layer.x*12.5+layer.y*10.0+t*3.0)*cos(layer.x*14.0-layer.y*11.0+t*2.7)*0.22; float density4=cos(layer.x*6.5+layer.y*5.0+t*1.8)*sin(layer.x*7.5-layer.y*6.5+t*1.5)*0.40; float density5=sin(layer.x*13.5+layer.y*9.5+t*3.2)*cos(layer.x*15.5-layer.y*12.5+t*2.8)*0.18; bloom=bloom*(2.5+density1+density2+density3+density4+density5); vec2 flow1=vec2(sin(layer.x*7.5+t*2.8+fi+storm*2.5),cos(layer.y*6.8+t*2.3+fi+turbulence*2.2))*bloom*0.18; vec2 flow2=vec2(cos(layer.x*5.8+t*1.9+fi*1.8+turbulence*3.0),sin(layer.y*5.2+t*3.0+fi*1.5+storm*2.8))*bloom*0.15; vec2 flow3=vec2(sin(layer.x*8.2+t*2.1+fi*1.2+chaos1*2.0),cos(layer.y*7.5+t*2.5+fi*1.4+chaos2*1.8))*bloom*0.12; vec2 current=vec2(sin(angle*3.2+r*4.5+t*3.5+fi),cos(angle*4.5+r*3.8+t*2.7+fi))*bloom*0.1; layer+=flow1+flow2+flow3+current; float bio1=sin(length(layer)*10.5+t*3.3+fi+storm)*bloom; float bio2=cos(length(layer)*13.8+t*2.8+fi*1.6+turbulence)*bloom; float bio3=sin(d*7.5+angle*5.2+t*4.5+fi*1.1)*bloom; float bio4=cos(length(layer)*9.2+t*3.2+fi*2.0+chaos1)*bloom; float bio5=sin(d*8.8+angle*6.0+t*3.7+fi*0.9+chaos2)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+storm+rainbow1),sin(bio1*3.5+fi+storm+rainbow1+2.5),sin(bio1*3.5+fi+storm+rainbow1+5.0))*0.9+0.1; vec3 pigment2=vec3(cos(bio2*3.0+fi+turbulence+rainbow2+1.5),cos(bio2*3.0+fi+turbulence+rainbow2+4.0),cos(bio2*3.0+fi+turbulence+rainbow2+6.5))*0.95+0.05; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+storm*1.8+rainbow3+2.0),sin(bio3*2.5+fi*2.5+turbulence*1.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+storm*1.2+rainbow3+7.0))*0.85+0.15; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+chaos1*1.5+rainbow4+3.0),cos(bio4*2.8+fi*1.8+chaos2*1.2+rainbow5+5.5),cos(bio4*2.8+fi*1.8+chaos1*1.8+rainbow6+8.0))*0.88+0.12; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+chaos2*1.4+rainbow6+1.8),sin(bio5*3.2+fi*2.2+chaos1*1.6+rainbow7+4.2),sin(bio5*3.2+fi*2.2+chaos2*1.0+rainbow1+6.8))*0.92+0.08; vec3 pigment6=vec3(cos(bio1*3.1+fi*2.0+chaos3*1.8+rainbow4+2.5),sin(bio2*3.4+fi*1.7+chaos4*1.6+rainbow5+4.8),cos(bio3*2.9+fi*2.1+chaos3*1.4+rainbow4+7.2))*0.96+0.04; vec3 pigment7=vec3(sin(bio4*3.6+fi*1.5+chaos4*1.9+rainbow5+1.2),cos(bio5*2.7+fi*2.3+chaos3*1.7+rainbow4+3.8),sin(bio1*3.0+fi*1.9+chaos4*1.3+rainbow5+6.5))*1.0+0.0; vec3 pigment8=vec3(cos(bio2*4.2+fi*2.8+chaos5*2.0+rainbow6+3.5),sin(bio3*3.8+fi*2.4+chaos6*1.8+rainbow7+5.2),cos(bio4*4.0+fi*2.6+chaos5*1.6+rainbow1+7.8))*0.94+0.06; vec3 pigment9=vec3(sin(bio5*4.5+fi*3.0+chaos6*2.2+rainbow2+2.8),cos(bio1*3.9+fi*2.7+chaos4*1.9+rainbow3+6.0),sin(bio2*4.1+fi*2.9+chaos5*1.7+rainbow4+8.5))*0.91+0.09; vec3 ecosystem1=mix(mix(mix(pigment1,pigment2,sin(t*3.2+fi+storm*2.5)*0.5+0.5),pigment3,cos(t*2.5+fi+turbulence*2.2)*0.5+0.5),pigment8,sin(t*4.8+fi+chaos5*2.8)*0.5+0.5); vec3 ecosystem2=mix(mix(mix(pigment4,pigment5,cos(t*2.8+fi+chaos1*2.0)*0.5+0.5),pigment6,sin(t*3.5+fi+chaos2*1.8)*0.5+0.5),pigment9,cos(t*5.2+fi+chaos6*3.2)*0.5+0.5); vec3 ecosystem3=mix(mix(mix(pigment7,pigment8,sin(t*4.5+fi+chaos3*3.0)*0.5+0.5),pigment9,cos(t*3.8+fi+chaos4*2.5)*0.5+0.5),pigment1,sin(t*6.0+fi+storm*3.5)*0.5+0.5); vec3 ecosystem4=mix(mix(mix(pigment2,pigment9,cos(t*5.5+fi+turbulence*4.0)*0.5+0.5),pigment7,sin(t*4.2+fi+chaos5*2.2)*0.5+0.5),pigment3,cos(t*7.2+fi+chaos6*4.5)*0.5+0.5); vec3 ecosystem=mix(mix(mix(ecosystem1,ecosystem2,sin(t*2.0+fi)*0.5+0.5),ecosystem3,cos(t*2.8+fi+storm)*0.5+0.5),ecosystem4,sin(t*3.5+fi+turbulence)*0.5+0.5); col+=ecosystem*bloom*(1.8-fi*0.05)*glow*1.8; float membrane1=sin(angle*6.2+d*12.5+t*7.2+storm*3.5)*cos(angle*8.5+d*10.0+t*5.8+turbulence*3.0)*bloom*0.4; float membrane2=cos(angle*7.8+d*11.2+t*6.5+chaos1*2.8)*sin(angle*5.5+d*13.8+t*7.8+chaos2*2.5)*bloom*0.35; float pulse1=cos(angle*8.2+d*18.0+t*9.5+fi*2.5)*sin(angle*6.0+d*15.5+t*8.0+fi*2.2)*bloom*0.25; float pulse2=sin(angle*9.5+d*16.8+t*8.8+fi*1.8+storm)*cos(angle*7.2+d*19.2+t*9.2+fi*2.0+turbulence)*bloom*0.2; col*=(1.0+membrane1+membrane2+pulse1+pulse2); float growth1=sin(layer.x*25.0+layer.y*20.0+t*11.0+fi+storm*5.0)*cos(layer.x*18.0-layer.y*22.0+t*9.5+fi+turbulence*4.5)*bloom*0.38; float growth2=cos(layer.x*22.5+layer.y*18.5+t*10.2+fi*1.5+chaos1*3.5)*sin(layer.x*20.0-layer.y*24.0+t*8.8+fi*1.2+chaos2*3.0)*bloom*0.32; col+=growth1*ecosystem*0.75+growth2*ecosystem2*0.65; float symbiosis1=sin((layer.x+layer.y)*12.5+t*7.2+storm*2.5)*cos((layer.x-layer.y)*10.8+t*5.8+turbulence*2.0)*bloom*0.3; float symbiosis2=cos((layer.x*layer.y)*8.5+t*6.0+chaos1*2.2)*sin((layer.x+layer.y*0.5)*11.2+t*4.8+chaos2*1.8)*bloom*0.28; col*=(1.0+symbiosis1+symbiosis2); float neural=sin(r*18.0+angle*12.0+t*8.5+chaos1*4.0)*exp(-r*0.25)*bloom*0.6; float synaptic=cos(r*22.0+angle*15.5+t*7.8+chaos2*3.5)*exp(-r*0.3)*bloom*0.5; col+=vec3(neural*1.8,synaptic*1.5,neural*synaptic*2.2)*ecosystem*0.4; }} float hurricane=sin(angle*5.2+r*7.5-t*8.5+storm*4.0)*cos(angle*4.0+r*11.2+t*6.2+turbulence*3.5)*exp(-r*0.4)*0.55; float galaxy=sin(angle*10.5+t*2.5+storm)*cos(r*15.0-t*8.0+turbulence)*exp(-r*0.7)*0.4; float quantum=sin(angle*15.0+r*5.5+t*4.2)*cos(angle*12.0+r*8.8-t*10.5)*exp(-r*0.9)*0.25; float aurora=cos(angle*18.5+r*6.2+t*3.8+storm)*sin(angle*14.2+r*9.5-t*7.2+turbulence)*exp(-r*1.1)*0.3; float nebula=sin(angle*20.8+r*4.8+t*5.0+chaos1)*cos(angle*16.5+r*7.0-t*9.8+chaos2)*exp(-r*0.8)*0.35; col*=(0.2+hurricane+galaxy+quantum+aurora+nebula); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.6; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.55; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.5; float spectrum3=cos(angle*33.5+r*6.2+t*15.8+rainbow4*3.5)*sin(angle*29.8+r*8.5+t*13.2+rainbow5*4.0)*0.45; float spectrum4=sin(angle*36.0+r*5.8+t*16.5+rainbow6*3.2)*cos(angle*32.2+r*7.8+t*14.0+rainbow7*3.8)*0.4; col+=vec3(prism*3.5+spectrum1*2.5+spectrum3*1.8,prism*3.0+spectrum2*3.2+spectrum4*2.0,prism*4.2+spectrum1*2.2+spectrum3*2.5)*exp(-r*0.3); col=pow(col*0.08,vec3(1.2)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033s = () => glsl('vec2 p=(_st-vec2(-0.12,-0.08))*4.5; float t=time*0.015; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p+vec2(sin(t*0.8)*1.2,cos(t*0.6)*1.0); float rainbow1=sin(t*0.4+r*3.2)*1.2+1.6; float rainbow2=cos(t*0.7+angle*2.8)*1.3+1.5; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*1.1+1.7; float rainbow4=cos(t*0.6+r*4.0+angle*2.5)*1.25+1.55; float rainbow5=sin(t*1.2+r*2.8+angle*4.2)*1.15+1.65; float rainbow6=cos(t*0.8+r*3.5+angle*3.8)*1.35+1.45; float rainbow7=sin(t*1.0+r*2.2+angle*4.8)*1.05+1.75; for(int j=0;j<4;j++){float fj=float(j)*1.2; vec2 layer=z*pow(0.7,fj); for(int i=0;i<18;i++){float fi=float(i)*0.18+fj*0.1; vec2 flow=vec2(sin(layer.x*1.2+t*2.0+fi),cos(layer.y*1.0+t*1.8+fi))*0.4; layer+=flow; float mass1=sin(t*1.5+fi*0.8+r*2.0)*0.5+0.5; float mass2=cos(t*1.2+fi*0.6+angle*1.5)*0.4+0.6; float flow_organic=sin(t*0.8+fi*0.5+mass1*2.0)*0.15; float line1=abs(layer.y*2.0+sin(layer.x*1.5+t*2.5+fi+flow_organic+mass1*1.5)*0.3)-0.04; float line2=abs(layer.x*2.5+cos(layer.y*1.8+t*2.2+fi+flow_organic+mass2*1.8)*0.28)-0.035; float line3=abs((layer.x+layer.y)*1.2+sin(t*2.0+fi+flow_organic+mass1*2.2)*0.25)-0.045; float line4=abs((layer.y-layer.x)*1.8+cos(t*2.4+fi+flow_organic+mass2*1.9)*0.32)-0.038; float line5=abs(layer.x*1.5+sin(layer.y*2.2+t*1.9+fi+flow_organic+mass1*2.1)*0.35)-0.042; float line6=abs(layer.y*1.8-cos(layer.x*2.0+t*2.1+fi+flow_organic+mass2*1.7)*0.26)-0.036; float wave1=abs(layer.y+sin(layer.x*3.0+t*1.8+fi+flow_organic+mass1*1.4)*0.18)-0.025; float wave2=abs(layer.x+cos(layer.y*2.8+t*1.6+fi+flow_organic+mass2*1.6)*0.22)-0.028; float wave3=abs(layer.y*0.8+sin(layer.x*3.5+t*1.5+fi+flow_organic+mass1*1.2)*0.16)-0.022; float wave4=abs(layer.x*0.9+cos(layer.y*3.2+t*1.7+fi+flow_organic+mass2*1.3)*0.19)-0.026; float tube1=abs(layer.y*1.1+sin(layer.x*2.6+t*1.4+fi+flow_organic+mass1*1.8)*0.24)-0.030; float tube2=abs(layer.x*1.3-cos(layer.y*2.4+t*1.3+fi+flow_organic+mass2*2.0)*0.21)-0.033; float lines=min(min(min(min(min(line1,line2),min(line3,line4)),min(line5,line6)),min(wave1,wave2)),min(min(wave3,wave4),min(tube1,tube2))); float organism=lines+sin(length(layer)*4.0+t*6.5+fi)*0.08; float bloom=exp(-abs(organism)*3.5)*2.8; float glow=exp(-abs(organism)*1.2)*4.5; vec2 current1=vec2(sin(layer.x*4.5+t*3.2+fi),cos(layer.y*3.8+t*2.9+fi))*bloom*0.15; vec2 current2=vec2(cos(layer.x*3.2+t*2.5+fi*1.5),sin(layer.y*4.2+t*3.1+fi*1.2))*bloom*0.12; layer+=current1+current2; float bio1=sin(length(layer)*8.5+t*4.2+fi)*bloom; float bio2=cos(length(layer)*7.8+t*3.8+fi*1.4)*bloom; float bio3=sin(r*6.5+angle*4.2+t*5.1+fi*0.9)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*1.8)*bloom; float bio5=sin(r*7.2+angle*5.8+t*4.5+fi*1.1)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+rainbow1),sin(bio1*3.5+fi+rainbow1+2.5),sin(bio1*3.5+fi+rainbow1+5.0))*0.9+0.1; vec3 pigment2=vec3(cos(bio2*3.0+fi+rainbow2+1.5),cos(bio2*3.0+fi+rainbow2+4.0),cos(bio2*3.0+fi+rainbow2+6.5))*0.95+0.05; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+rainbow3+2.0),sin(bio3*2.5+fi*2.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+rainbow3+7.0))*0.85+0.15; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+rainbow4+3.0),cos(bio4*2.8+fi*1.8+rainbow5+5.5),cos(bio4*2.8+fi*1.8+rainbow6+8.0))*0.88+0.12; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+rainbow6+1.8),sin(bio5*3.2+fi*2.2+rainbow7+4.2),sin(bio5*3.2+fi*2.2+rainbow1+6.8))*0.92+0.08; vec3 ecosystem=mix(mix(pigment1,pigment2,sin(t*2.0+fi)*0.5+0.5),mix(pigment3,pigment4,cos(t*2.5+fi)*0.5+0.5),sin(t*3.0+fi)*0.5+0.5); col+=ecosystem*bloom*(1.8-fi*0.05)*glow*1.8; }} float cosmic=sin(angle*5.2+r*7.5+t*12.5)*cos(angle*4.0+r*8.2+t*10.2)*exp(-r*0.4)*0.8; col*=(0.3+cosmic); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.6; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.55; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.5; float spectrum3=cos(angle*33.5+r*6.2+t*15.8+rainbow4*3.5)*sin(angle*29.8+r*8.5+t*13.2+rainbow5*4.0)*0.45; float spectrum4=sin(angle*36.0+r*5.8+t*16.5+rainbow6*3.2)*cos(angle*32.2+r*7.8+t*14.0+rainbow7*3.8)*0.4; col+=vec3(prism*3.5+spectrum1*2.5+spectrum3*1.8,prism*3.0+spectrum2*3.2+spectrum4*2.0,prism*4.2+spectrum1*2.2+spectrum3*2.5)*exp(-r*0.3); col=pow(col*0.08,vec3(1.2)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033t = () => glsl('vec2 p=(_st-vec2(-0.12,-0.08))*4.5; float t=time*0.015; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p+vec2(sin(t*0.8)*1.2,cos(t*0.6)*1.0); float rainbow1=sin(t*0.4+r*3.2)*1.2+1.6; float rainbow2=cos(t*0.7+angle*2.8)*1.3+1.5; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*1.1+1.7; float rainbow4=cos(t*0.6+r*4.0+angle*2.5)*1.25+1.55; float rainbow5=sin(t*1.2+r*2.8+angle*4.2)*1.15+1.65; float rainbow6=cos(t*0.8+r*3.5+angle*3.8)*1.35+1.45; float rainbow7=sin(t*1.0+r*2.2+angle*4.8)*1.05+1.75; for(int j=0;j<4;j++){float fj=float(j)*1.2; vec2 layer=z*pow(0.7,fj); for(int i=0;i<18;i++){float fi=float(i)*0.18+fj*0.1; vec2 flow=vec2(sin(layer.x*1.2+t*2.0+fi),cos(layer.y*1.0+t*1.8+fi))*0.4; layer+=flow; float mass1=sin(t*1.5+fi*0.8+r*2.0)*0.5+0.5; float mass2=cos(t*1.2+fi*0.6+angle*1.5)*0.4+0.6; float mass3=sin(t*1.1+fi*0.9+r*1.8+angle*2.2)*0.45+0.55; float pulse1=sin(t*2.1+fi*1.2+mass1*3.5)*0.3+0.7; float pulse2=cos(t*1.8+fi*1.5+mass2*2.8)*0.35+0.65; float pulse3=sin(t*2.3+fi*0.9+mass3*3.2)*0.28+0.72; float flow_organic=sin(t*0.8+fi*0.5+mass1*2.0+pulse1*1.5)*0.18; vec2 tentacle1=vec2(sin(layer.x*2.2+layer.y*1.8+t*2.8+fi+mass1*2.5),cos(layer.x*1.9+layer.y*2.1+t*2.5+fi+mass2*2.2))*pulse1*0.25; vec2 tentacle2=vec2(cos(layer.x*1.7+layer.y*2.4+t*2.6+fi+mass3*1.9),sin(layer.x*2.5+layer.y*1.6+t*2.9+fi+mass1*2.1))*pulse2*0.22; vec2 tentacle3=vec2(sin(layer.x*2.0+layer.y*1.5+t*2.7+fi+mass2*2.8),cos(layer.x*1.8+layer.y*2.3+t*2.4+fi+mass3*2.0))*pulse3*0.28; layer+=tentacle1+tentacle2+tentacle3; vec2 membrane=vec2(sin(layer.x*3.2+t*1.9+fi+pulse1*2.2),cos(layer.y*2.9+t*2.1+fi+pulse2*1.8))*0.15; layer+=membrane; float neural1=sin(layer.x*1.8+layer.y*1.4+t*3.2+fi+pulse1*2.8)*cos(layer.x*2.1+layer.y*1.7+t*2.9+fi+pulse2*2.5)*0.4; float neural2=cos(layer.x*1.6+layer.y*2.0+t*3.0+fi+pulse3*2.2)*sin(layer.x*2.3+layer.y*1.2+t*3.1+fi+pulse1*2.0)*0.38; float neural3=sin(layer.x*1.9+layer.y*1.8+t*2.8+fi+pulse2*2.6)*cos(layer.x*1.5+layer.y*2.2+t*3.3+fi+pulse3*2.4)*0.42; float synapse1=sin(length(layer)*8.5+t*4.2+fi+neural1*5.8)*cos(angle*6.2+t*3.8+fi+neural2*4.5)*0.25; float synapse2=cos(length(layer)*9.8+t*4.0+fi+neural2*6.2)*sin(angle*7.5+t*4.1+fi+neural3*5.1)*0.28; float synapse3=sin(length(layer)*7.2+t*4.3+fi+neural3*5.5)*cos(angle*8.1+t*3.9+fi+neural1*4.8)*0.22; float line1=abs(layer.y*2.0+sin(layer.x*1.5+t*2.5+fi+flow_organic+mass1*1.5+neural1*1.2)*0.32+synapse1*0.15)-0.035; float line2=abs(layer.x*2.5+cos(layer.y*1.8+t*2.2+fi+flow_organic+mass2*1.8+neural2*1.4)*0.30+synapse2*0.18)-0.032; float line3=abs((layer.x+layer.y)*1.2+sin(t*2.0+fi+flow_organic+mass1*2.2+neural3*1.1)*0.28+synapse3*0.12)-0.040; float line4=abs((layer.y-layer.x)*1.8+cos(t*2.4+fi+flow_organic+mass2*1.9+neural1*1.6)*0.35+synapse1*0.20)-0.033; float line5=abs(layer.x*1.5+sin(layer.y*2.2+t*1.9+fi+flow_organic+mass1*2.1+neural2*1.3)*0.38+synapse2*0.16)-0.038; float line6=abs(layer.y*1.8-cos(layer.x*2.0+t*2.1+fi+flow_organic+mass2*1.7+neural3*1.5)*0.29+synapse3*0.14)-0.031; float line7=abs(layer.x*1.3+layer.y*1.6+sin(layer.x*2.8+layer.y*2.5+t*2.3+fi+neural1*2.0+pulse1*1.8)*0.24+synapse1*0.11)-0.028; float line8=abs(layer.y*1.4-layer.x*1.1+cos(layer.x*3.1+layer.y*2.2+t*2.6+fi+neural2*2.3+pulse2*1.5)*0.27+synapse2*0.13)-0.036; float wave1=abs(layer.y+sin(layer.x*3.0+t*1.8+fi+flow_organic+mass1*1.4+neural1*0.9)*0.21+synapse1*0.08)-0.022; float wave2=abs(layer.x+cos(layer.y*2.8+t*1.6+fi+flow_organic+mass2*1.6+neural2*1.1)*0.25+synapse2*0.10)-0.025; float wave3=abs(layer.y*0.8+sin(layer.x*3.5+t*1.5+fi+flow_organic+mass1*1.2+neural3*0.8)*0.19+synapse3*0.07)-0.019; float wave4=abs(layer.x*0.9+cos(layer.y*3.2+t*1.7+fi+flow_organic+mass2*1.3+neural1*1.0)*0.22+synapse1*0.09)-0.023; float wave5=abs(layer.y*0.7-layer.x*0.6+sin(layer.x*3.8+layer.y*3.5+t*1.4+fi+neural2*1.8+pulse3*1.2)*0.17+synapse2*0.06)-0.018; float wave6=abs(layer.x*0.8+layer.y*1.0+cos(layer.x*3.6+layer.y*3.0+t*1.6+fi+neural3*1.5+pulse1*1.4)*0.20+synapse3*0.08)-0.021; float tube1=abs(layer.y*1.1+sin(layer.x*2.6+t*1.4+fi+flow_organic+mass1*1.8+neural1*2.5)*0.26+synapse1*0.12)-0.026; float tube2=abs(layer.x*1.3-cos(layer.y*2.4+t*1.3+fi+flow_organic+mass2*2.0+neural2*2.2)*0.23+synapse2*0.14)-0.029; float tube3=abs(layer.y*1.0+layer.x*0.9+sin(layer.x*2.9+layer.y*2.7+t*1.5+fi+neural3*2.4+pulse2*1.6)*0.25+synapse3*0.10)-0.024; float vessel1=abs(sin((layer.x+layer.y)*1.8+t*1.8+fi+mass1*2.5+neural1*1.8)*0.42+layer.y*1.2+synapse1*0.15)-0.020; float vessel2=abs(cos((layer.x-layer.y)*2.1+t*1.6+fi+mass2*2.8+neural2*2.1)*0.45+layer.x*1.1+synapse2*0.17)-0.022; float vessel3=abs(sin((layer.x*layer.y)*1.5+t*1.9+fi+mass3*2.2+neural3*1.9)*0.38+layer.y*0.9+synapse3*0.13)-0.018; float capillary1=abs(layer.y*0.6+sin(layer.x*4.2+t*1.2+fi+neural1*3.0+pulse1*2.5)*0.14)-0.012; float capillary2=abs(layer.x*0.7+cos(layer.y*4.5+t*1.1+fi+neural2*2.8+pulse2*2.2)*0.16)-0.014; float capillary3=abs(layer.y*0.5-layer.x*0.4+sin(layer.x*4.8+layer.y*4.3+t*1.0+fi+neural3*3.2+pulse3*2.0)*0.12)-0.011; float lines=min(min(min(min(min(line1,line2),min(line3,line4)),min(min(line5,line6),min(line7,line8))),min(min(min(wave1,wave2),min(wave3,wave4)),min(wave5,wave6))),min(min(min(min(tube1,tube2),tube3),min(min(vessel1,vessel2),vessel3)),min(min(capillary1,capillary2),capillary3))); float organism=lines+sin(length(layer)*4.0+t*6.5+fi)*0.08; float bloom=exp(-abs(organism)*3.5)*2.8; float glow=exp(-abs(organism)*1.2)*4.5; vec2 current1=vec2(sin(layer.x*4.5+t*3.2+fi),cos(layer.y*3.8+t*2.9+fi))*bloom*0.15; vec2 current2=vec2(cos(layer.x*3.2+t*2.5+fi*1.5),sin(layer.y*4.2+t*3.1+fi*1.2))*bloom*0.12; layer+=current1+current2; float bio1=sin(length(layer)*8.5+t*4.2+fi)*bloom; float bio2=cos(length(layer)*7.8+t*3.8+fi*1.4)*bloom; float bio3=sin(r*6.5+angle*4.2+t*5.1+fi*0.9)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*1.8)*bloom; float bio5=sin(r*7.2+angle*5.8+t*4.5+fi*1.1)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+rainbow1),sin(bio1*3.5+fi+rainbow1+2.5),sin(bio1*3.5+fi+rainbow1+5.0))*0.9+0.1; vec3 pigment2=vec3(cos(bio2*3.0+fi+rainbow2+1.5),cos(bio2*3.0+fi+rainbow2+4.0),cos(bio2*3.0+fi+rainbow2+6.5))*0.95+0.05; vec3 pigment3=vec3(sin(bio3*2.5+fi*2.5+rainbow3+2.0),sin(bio3*2.5+fi*2.5+rainbow3+4.5),sin(bio3*2.5+fi*2.5+rainbow3+7.0))*0.85+0.15; vec3 pigment4=vec3(cos(bio4*2.8+fi*1.8+rainbow4+3.0),cos(bio4*2.8+fi*1.8+rainbow5+5.5),cos(bio4*2.8+fi*1.8+rainbow6+8.0))*0.88+0.12; vec3 pigment5=vec3(sin(bio5*3.2+fi*2.2+rainbow6+1.8),sin(bio5*3.2+fi*2.2+rainbow7+4.2),sin(bio5*3.2+fi*2.2+rainbow1+6.8))*0.92+0.08; vec3 ecosystem=mix(mix(pigment1,pigment2,sin(t*2.0+fi)*0.5+0.5),mix(pigment3,pigment4,cos(t*2.5+fi)*0.5+0.5),sin(t*3.0+fi)*0.5+0.5); col+=ecosystem*bloom*(1.8-fi*0.05)*glow*1.8; }} float cosmic=sin(angle*5.2+r*7.5+t*12.5)*cos(angle*4.0+r*8.2+t*10.2)*exp(-r*0.4)*0.8; col*=(0.3+cosmic); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.6; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.55; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.5; float spectrum3=cos(angle*33.5+r*6.2+t*15.8+rainbow4*3.5)*sin(angle*29.8+r*8.5+t*13.2+rainbow5*4.0)*0.45; float spectrum4=sin(angle*36.0+r*5.8+t*16.5+rainbow6*3.2)*cos(angle*32.2+r*7.8+t*14.0+rainbow7*3.8)*0.4; col+=vec3(prism*3.5+spectrum1*2.5+spectrum3*1.8,prism*3.0+spectrum2*3.2+spectrum4*2.0,prism*4.2+spectrum1*2.2+spectrum3*2.5)*exp(-r*0.3); col=pow(col*0.08,vec3(1.2)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

//  I notice there are still references to r and anglevariables that haven't been defined (causing the circular patterns the user mentioned), and some variables like bio3,bio5, bio7, bio9 are using these undefined variables.
window.gl033u = () => glsl('vec2 p=(_st-vec2(-0.12,-0.08))*4.5; float t=time*0.022; float r=length(p); float angle=atan(p.y,p.x); vec3 col=vec3(0.0); vec2 z=p+vec2(sin(t*0.8)*1.2,cos(t*0.6)*1.0); float rainbow1=sin(t*0.4+r*3.2)*1.2+1.6; float rainbow2=cos(t*0.7+angle*2.8)*1.3+1.5; float rainbow3=sin(t*0.9+r*2.5+angle*3.5)*1.1+1.7; float rainbow4=cos(t*0.6+r*4.0+angle*2.5)*1.25+1.55; float rainbow5=sin(t*1.2+r*2.8+angle*4.2)*1.15+1.65; float rainbow6=cos(t*0.8+r*3.5+angle*3.8)*1.35+1.45; float rainbow7=sin(t*1.0+r*2.2+angle*4.8)*1.05+1.75; for(int j=0;j<4;j++){float fj=float(j)*1.2; vec2 layer=z*pow(0.7,fj); for(int i=0;i<18;i++){float fi=float(i)*0.18+fj*0.1; vec2 flow=vec2(sin(layer.x*1.2+t*2.0+fi),cos(layer.y*1.0+t*1.8+fi))*0.4; layer+=flow; float mass1=sin(t*2.8+fi*1.2+r*3.5)*0.8+1.2; float mass2=cos(t*2.5+fi*0.9+angle*2.8)*0.75+1.25; float mass3=sin(t*2.2+fi*1.5+r*3.2+angle*4.5)*0.85+1.15; float mass4=cos(t*3.1+fi*0.7+r*2.8+angle*3.8)*0.7+1.3; float mass5=sin(t*2.9+fi*1.1+angle*5.2)*0.9+1.1; float pulse1=sin(t*4.5+fi*2.5+mass1*5.8)*0.6+1.4; float pulse2=cos(t*4.2+fi*3.0+mass2*5.2)*0.65+1.35; float pulse3=sin(t*4.8+fi*2.2+mass3*6.0)*0.55+1.45; float pulse4=cos(t*5.1+fi*1.8+mass4*5.5)*0.7+1.3; float pulse5=sin(t*4.6+fi*2.8+mass5*5.8)*0.6+1.4; float flow_organic=sin(t*1.5+fi*0.8+mass1*3.5+pulse1*2.8)*0.35; float flow_dark=cos(t*1.8+fi*1.2+mass2*4.0+pulse2*3.2)*0.4; vec2 tentacle1=vec2(sin(layer.x*2.2+layer.y*1.8+t*2.8+fi+mass1*2.5),cos(layer.x*1.9+layer.y*2.1+t*2.5+fi+mass2*2.2))*pulse1*0.25; vec2 tentacle2=vec2(cos(layer.x*1.7+layer.y*2.4+t*2.6+fi+mass3*1.9),sin(layer.x*2.5+layer.y*1.6+t*2.9+fi+mass1*2.1))*pulse2*0.22; vec2 tentacle3=vec2(sin(layer.x*2.0+layer.y*1.5+t*2.7+fi+mass2*2.8),cos(layer.x*1.8+layer.y*2.3+t*2.4+fi+mass3*2.0))*pulse3*0.28; layer+=tentacle1+tentacle2+tentacle3; vec2 membrane=vec2(sin(layer.x*3.2+t*1.9+fi+pulse1*2.2),cos(layer.y*2.9+t*2.1+fi+pulse2*1.8))*0.15; layer+=membrane; float neural1=sin(layer.x*1.8+layer.y*1.4+t*3.2+fi+pulse1*2.8)*cos(layer.x*2.1+layer.y*1.7+t*2.9+fi+pulse2*2.5)*0.4; float neural2=cos(layer.x*1.6+layer.y*2.0+t*3.0+fi+pulse3*2.2)*sin(layer.x*2.3+layer.y*1.2+t*3.1+fi+pulse1*2.0)*0.38; float neural3=sin(layer.x*1.9+layer.y*1.8+t*2.8+fi+pulse2*2.6)*cos(layer.x*1.5+layer.y*2.2+t*3.3+fi+pulse3*2.4)*0.42; float synapse1=sin(length(layer)*8.5+t*4.2+fi+neural1*5.8)*cos(angle*6.2+t*3.8+fi+neural2*4.5)*0.25; float synapse2=cos(length(layer)*9.8+t*4.0+fi+neural2*6.2)*sin(angle*7.5+t*4.1+fi+neural3*5.1)*0.28; float synapse3=sin(length(layer)*7.2+t*4.3+fi+neural3*5.5)*cos(angle*8.1+t*3.9+fi+neural1*4.8)*0.22; float line1=abs(layer.y*2.0+sin(layer.x*1.5+t*2.5+fi+flow_organic+mass1*1.5+neural1*1.2)*0.32+synapse1*0.15)-0.035; float line2=abs(layer.x*2.5+cos(layer.y*1.8+t*2.2+fi+flow_organic+mass2*1.8+neural2*1.4)*0.30+synapse2*0.18)-0.032; float line3=abs((layer.x+layer.y)*1.2+sin(t*2.0+fi+flow_organic+mass1*2.2+neural3*1.1)*0.28+synapse3*0.12)-0.040; float line4=abs((layer.y-layer.x)*1.8+cos(t*2.4+fi+flow_organic+mass2*1.9+neural1*1.6)*0.35+synapse1*0.20)-0.033; float line5=abs(layer.x*1.5+sin(layer.y*2.2+t*1.9+fi+flow_organic+mass1*2.1+neural2*1.3)*0.38+synapse2*0.16)-0.038; float line6=abs(layer.y*1.8-cos(layer.x*2.0+t*2.1+fi+flow_organic+mass2*1.7+neural3*1.5)*0.29+synapse3*0.14)-0.031; float line7=abs(layer.x*1.3+layer.y*1.6+sin(layer.x*2.8+layer.y*2.5+t*2.3+fi+neural1*2.0+pulse1*1.8)*0.24+synapse1*0.11)-0.028; float line8=abs(layer.y*1.4-layer.x*1.1+cos(layer.x*3.1+layer.y*2.2+t*2.6+fi+neural2*2.3+pulse2*1.5)*0.27+synapse2*0.13)-0.036; float wave1=abs(layer.y+sin(layer.x*3.0+t*1.8+fi+flow_organic+mass1*1.4+neural1*0.9)*0.21+synapse1*0.08)-0.022; float wave2=abs(layer.x+cos(layer.y*2.8+t*1.6+fi+flow_organic+mass2*1.6+neural2*1.1)*0.25+synapse2*0.10)-0.025; float wave3=abs(layer.y*0.8+sin(layer.x*3.5+t*1.5+fi+flow_organic+mass1*1.2+neural3*0.8)*0.19+synapse3*0.07)-0.019; float wave4=abs(layer.x*0.9+cos(layer.y*3.2+t*1.7+fi+flow_organic+mass2*1.3+neural1*1.0)*0.22+synapse1*0.09)-0.023; float wave5=abs(layer.y*0.7-layer.x*0.6+sin(layer.x*3.8+layer.y*3.5+t*1.4+fi+neural2*1.8+pulse3*1.2)*0.17+synapse2*0.06)-0.018; float wave6=abs(layer.x*0.8+layer.y*1.0+cos(layer.x*3.6+layer.y*3.0+t*1.6+fi+neural3*1.5+pulse1*1.4)*0.20+synapse3*0.08)-0.021; float tube1=abs(layer.y*1.1+sin(layer.x*2.6+t*1.4+fi+flow_organic+mass1*1.8+neural1*2.5)*0.26+synapse1*0.12)-0.026; float tube2=abs(layer.x*1.3-cos(layer.y*2.4+t*1.3+fi+flow_organic+mass2*2.0+neural2*2.2)*0.23+synapse2*0.14)-0.029; float tube3=abs(layer.y*1.0+layer.x*0.9+sin(layer.x*2.9+layer.y*2.7+t*1.5+fi+neural3*2.4+pulse2*1.6)*0.25+synapse3*0.10)-0.024; float vessel1=abs(sin((layer.x+layer.y)*1.8+t*1.8+fi+mass1*2.5+neural1*1.8)*0.42+layer.y*1.2+synapse1*0.15)-0.020; float vessel2=abs(cos((layer.x-layer.y)*2.1+t*1.6+fi+mass2*2.8+neural2*2.1)*0.45+layer.x*1.1+synapse2*0.17)-0.022; float vessel3=abs(sin((layer.x*layer.y)*1.5+t*1.9+fi+mass3*2.2+neural3*1.9)*0.38+layer.y*0.9+synapse3*0.13)-0.018; float capillary1=abs(layer.y*0.6+sin(layer.x*4.2+t*1.2+fi+neural1*3.0+pulse1*2.5)*0.14)-0.012; float capillary2=abs(layer.x*0.7+cos(layer.y*4.5+t*1.1+fi+neural2*2.8+pulse2*2.2)*0.16)-0.014; float capillary3=abs(layer.y*0.5-layer.x*0.4+sin(layer.x*4.8+layer.y*4.3+t*1.0+fi+neural3*3.2+pulse3*2.0)*0.12)-0.011; float lines=min(min(min(min(min(line1,line2),min(line3,line4)),min(min(line5,line6),min(line7,line8))),min(min(min(wave1,wave2),min(wave3,wave4)),min(wave5,wave6))),min(min(min(min(tube1,tube2),tube3),min(min(vessel1,vessel2),vessel3)),min(min(capillary1,capillary2),capillary3))); float organism=lines+sin(length(layer)*4.0+t*6.5+fi)*0.08; float bloom=exp(-abs(organism)*3.5)*2.8; float glow=exp(-abs(organism)*1.2)*4.5; vec2 current1=vec2(sin(layer.x*4.5+t*3.2+fi),cos(layer.y*3.8+t*2.9+fi))*bloom*0.15; vec2 current2=vec2(cos(layer.x*3.2+t*2.5+fi*1.5),sin(layer.y*4.2+t*3.1+fi*1.2))*bloom*0.12; layer+=current1+current2; float bio1=sin(length(layer)*8.5+t*4.2+fi)*bloom; float bio2=cos(length(layer)*7.8+t*3.8+fi*1.4)*bloom; float bio3=sin(r*6.5+angle*4.2+t*5.1+fi*0.9)*bloom; float bio4=cos(length(layer)*9.2+t*4.8+fi*1.8)*bloom; float bio5=sin(r*7.2+angle*5.8+t*4.5+fi*1.1)*bloom; float bio6=sin(length(layer)*11.5+t*5.5+fi*2.2+mass4*4.8)*bloom; float bio7=cos(r*8.8+angle*6.5+t*6.2+fi*1.8+mass5*3.5)*bloom; float bio8=sin(length(layer)*10.2+t*4.9+fi*2.5+pulse4*3.2)*bloom; float bio9=cos(r*9.5+angle*7.2+t*5.8+fi*1.6+pulse5*2.8)*bloom; vec3 pigment1=vec3(sin(bio1*4.5+fi+rainbow1+mass1*2.0),sin(bio1*4.5+fi+rainbow1+2.5+pulse1*1.5),sin(bio1*4.5+fi+rainbow1+5.0+mass2*1.8))*1.2+0.05; vec3 pigment2=vec3(cos(bio2*4.0+fi+rainbow2+1.5+mass3*2.2),cos(bio2*4.0+fi+rainbow2+4.0+pulse2*1.8),cos(bio2*4.0+fi+rainbow2+6.5+mass4*2.1))*1.35+0.02; vec3 pigment3=vec3(sin(bio3*3.8+fi*2.5+rainbow3+2.0+mass5*1.9),sin(bio3*3.8+fi*2.5+rainbow3+4.5+pulse3*2.0),sin(bio3*3.8+fi*2.5+rainbow3+7.0+mass1*2.3))*1.15+0.08; vec3 pigment4=vec3(cos(bio4*4.2+fi*1.8+rainbow4+3.0+pulse4*1.6),cos(bio4*4.2+fi*1.8+rainbow5+5.5+mass2*2.5),cos(bio4*4.2+fi*1.8+rainbow6+8.0+pulse5*2.2))*1.25+0.04; vec3 pigment5=vec3(sin(bio5*3.6+fi*2.2+rainbow6+1.8+mass3*2.8),sin(bio5*3.6+fi*2.2+rainbow7+4.2+pulse1*2.4),sin(bio5*3.6+fi*2.2+rainbow1+6.8+mass4*2.0))*1.18+0.06; vec3 pigment6=vec3(cos(bio6*4.8+fi*1.9+rainbow2+2.8+pulse2*1.9),sin(bio6*4.8+fi*1.9+rainbow3+5.8+mass5*2.6),cos(bio6*4.8+fi*1.9+rainbow4+8.5+pulse3*2.1))*1.42+0.01; vec3 pigment7=vec3(sin(bio7*3.9+fi*2.8+rainbow5+1.2+mass1*3.0+flow_dark*2.5),cos(bio7*3.9+fi*2.8+rainbow6+4.8+pulse4*2.8+flow_organic*2.2),sin(bio7*3.9+fi*2.8+rainbow7+7.5+mass2*2.7))*1.55+0.0; vec3 pigment8=vec3(cos(bio8*4.4+fi*2.1+rainbow1+3.2+pulse5*2.3+flow_dark*1.8),sin(bio8*4.4+fi*2.1+rainbow2+6.0+mass3*3.2),cos(bio8*4.4+fi*2.1+rainbow3+9.2+pulse1*2.6))*1.38+0.02; vec3 pigment9=vec3(sin(bio9*5.2+fi*2.6+rainbow4+2.5+mass4*2.9+flow_organic*2.8),cos(bio9*5.2+fi*2.6+rainbow5+5.2+pulse2*3.1),sin(bio9*5.2+fi*2.6+rainbow6+8.8+mass5*2.4+flow_dark*2.0))*1.65+0.0; vec3 ecosystem1=mix(mix(pigment1,pigment2,sin(t*3.5+fi+mass1*2.8)*0.5+0.5),pigment3,cos(t*4.2+fi+pulse1*2.5)*0.5+0.5); vec3 ecosystem2=mix(mix(pigment4,pigment5,cos(t*3.8+fi+mass2*3.0)*0.5+0.5),pigment6,sin(t*4.5+fi+pulse2*2.2)*0.5+0.5); vec3 ecosystem3=mix(mix(pigment7,pigment8,sin(t*5.2+fi+mass3*3.5)*0.5+0.5),pigment9,cos(t*4.8+fi+pulse3*2.8)*0.5+0.5); vec3 ecosystem=mix(mix(ecosystem1,ecosystem2,sin(t*2.5+fi+flow_organic*3.2)*0.5+0.5),ecosystem3,cos(t*3.2+fi+flow_dark*2.8)*0.5+0.5); col+=ecosystem*bloom*(2.5-fi*0.08)*glow*3.2; }} float cosmic=sin(angle*6.8+r*9.5+t*18.5)*cos(angle*5.2+r*11.2+t*15.2)*exp(-r*0.3)*1.2; col*=(0.15+cosmic); float prism=sin(angle*25.0+r*8.5+t*12.0)*cos(angle*22.0+r*10.8+t*10.5)*0.6; float spectrum1=cos(angle*28.5+r*7.2+t*13.5+rainbow1*5.0)*sin(angle*24.8+r*9.2+t*11.8+rainbow2*4.5)*0.55; float spectrum2=sin(angle*31.0+r*6.8+t*14.2+rainbow3*4.0)*cos(angle*27.2+r*8.0+t*12.8+rainbow1*3.5)*0.5; float spectrum3=cos(angle*33.5+r*6.2+t*15.8+rainbow4*3.5)*sin(angle*29.8+r*8.5+t*13.2+rainbow5*4.0)*0.45; float spectrum4=sin(angle*36.0+r*5.8+t*16.5+rainbow6*3.2)*cos(angle*32.2+r*7.8+t*14.0+rainbow7*3.8)*0.4; col+=vec3(prism*3.5+spectrum1*2.5+spectrum3*1.8,prism*3.0+spectrum2*3.2+spectrum4*2.0,prism*4.2+spectrum1*2.2+spectrum3*2.5)*exp(-r*0.3); col=pow(col*0.08,vec3(1.2)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033v = () => glsl('vec2 p=(_st-vec2(-0.12,-0.08))*4.5; float t=time*0.038; vec3 col=vec3(0.0); vec2 z=p+vec2(sin(t*3.2+p.x*2.1)*1.8,cos(t*3.8+p.y*2.5)*1.6); float flow1=sin(t*2.5+p.x*1.8)*cos(t*2.8+p.y*2.1)*1.2; float flow2=cos(t*3.1+p.x*1.6)*sin(t*2.7+p.y*1.9)*1.1; float flow3=sin(t*2.9+p.x*2.2+p.y*1.5)*cos(t*3.4+p.x*1.4)*1.3; float rainbow1=sin(t*2.1+p.x*3.5+flow1*2.8)*1.4+1.8; float rainbow2=cos(t*2.6+p.y*4.2+flow2*3.1)*1.5+1.7; float rainbow3=sin(t*3.2+p.x*2.9+p.y*3.8+flow3*2.5)*1.3+1.9; for(int j=0;j<4;j++){float fj=float(j)*1.2; vec2 layer=z*pow(0.7,fj); for(int i=0;i<18;i++){float fi=float(i)*0.18+fj*0.12; vec2 drift=vec2(sin(layer.x*1.2+t*2.2+fi+flow1*1.8),cos(layer.y*1.0+t*2.0+fi+flow2*1.6))*0.4; layer+=drift; float line1=abs(layer.y*1.8+sin(layer.x*1.2+t*2.5+fi+flow1*1.5)*0.6)-0.08; float line2=abs(layer.x*2.0+cos(layer.y*1.4+t*2.3+fi+flow2*1.8)*0.55)-0.075; float line3=abs((layer.x+layer.y)*1.5+sin(t*2.1+fi+flow1*2.0)*0.5)-0.085; float line4=abs((layer.y-layer.x)*1.6+cos(t*2.4+fi+flow2*1.7)*0.65)-0.07; float line5=abs(layer.x*1.3+sin(layer.y*1.8+t*2.0+fi+flow3*1.4)*0.7)-0.09; float line6=abs(layer.y*1.5-cos(layer.x*1.6+t*2.2+fi+flow1*1.9)*0.52)-0.065; float wave1=abs(layer.y+sin(layer.x*2.5+t*1.8+fi+flow2*1.2)*0.45)-0.055; float wave2=abs(layer.x+cos(layer.y*2.2+t*1.6+fi+flow3*1.3)*0.48)-0.06; float wave3=abs(layer.y*0.9+sin(layer.x*2.8+t*1.5+fi+flow1*1.1)*0.42)-0.05; float wave4=abs(layer.x*1.1+cos(layer.y*2.6+t*1.7+fi+flow2*1.4)*0.46)-0.058; float current1=abs(sin(layer.x*3.2+t*1.4+fi+flow1*2.5)*0.8+layer.y*1.2)-0.04; float current2=abs(cos(layer.y*2.9+t*1.3+fi+flow2*2.2)*0.75+layer.x*1.0)-0.042; float current3=abs(sin((layer.x+layer.y)*2.0+t*1.5+fi+flow3*2.8)*0.7+layer.y*0.8)-0.038; float stream1=abs(layer.y*1.4+sin(layer.x*1.8+t*1.9+fi+flow1*2.1)*0.65)-0.072; float stream2=abs(layer.x*1.6+cos(layer.y*1.5+t*1.7+fi+flow2*2.4)*0.58)-0.068; float stream3=abs((layer.x*layer.y)*0.8+sin(layer.x*2.1+layer.y*1.9+t*1.6+fi+flow3*1.9)*0.62)-0.063; float fiber1=abs(layer.y*0.7+sin(layer.x*3.8+t*1.2+fi+flow1*3.2)*0.35)-0.032; float fiber2=abs(layer.x*0.8+cos(layer.y*3.5+t*1.1+fi+flow2*2.9)*0.38)-0.035; float fiber3=abs(layer.y*0.6-layer.x*0.5+sin(layer.x*4.1+layer.y*3.8+t*1.0+fi+flow3*3.5)*0.32)-0.028; float lines=min(min(min(min(line1,line2),min(line3,line4)),min(min(line5,line6),min(wave1,wave2))),min(min(min(wave3,wave4),min(current1,current2)),min(min(current3,stream1),min(min(stream2,stream3),min(min(fiber1,fiber2),fiber3))))); float organism=lines+sin(layer.x*3.5+layer.y*3.2+t*5.5+fi+flow1*2.8)*0.08; float bloom=exp(-abs(organism)*2.8)*2.2; float glow=exp(-abs(organism)*1.2)*3.5; vec2 flow_current=vec2(sin(layer.x*3.5+t*2.8+fi+flow2*2.1),cos(layer.y*3.2+t*2.6+fi+flow3*1.9))*bloom*0.15; layer+=flow_current; float bio1=sin(layer.x*4.5+layer.y*4.2+t*3.2+fi+flow1*3.8)*bloom; float bio2=cos(layer.x*4.8+layer.y*3.9+t*2.9+fi*1.4+flow2*4.1)*bloom; float bio3=sin(layer.x*3.9+layer.y*4.6+t*3.5+fi*1.2+flow3*3.5)*bloom; vec3 pigment1=vec3(sin(bio1*3.5+fi+rainbow1+flow1*1.8),sin(bio1*3.5+fi+rainbow1+2.1+flow2*1.5),sin(bio1*3.5+fi+rainbow1+4.2+flow3*1.9))*1.2+0.1; vec3 pigment2=vec3(cos(bio2*3.2+fi+rainbow2+1.2+flow2*2.1),cos(bio2*3.2+fi+rainbow2+3.5+flow3*1.8),cos(bio2*3.2+fi+rainbow2+5.8+flow1*2.2))*1.3+0.08; vec3 pigment3=vec3(sin(bio3*3.8+fi*2.1+rainbow3+1.8+flow3*1.6),sin(bio3*3.8+fi*2.1+rainbow3+4.1+flow1*2.0),sin(bio3*3.8+fi*2.1+rainbow3+6.5+flow2*1.7))*1.15+0.12; vec3 ecosystem=mix(mix(pigment1,pigment2,sin(t*2.8+fi+flow1*2.5)*0.5+0.5),pigment3,cos(t*3.1+fi+flow2*2.2)*0.5+0.5); col+=ecosystem*bloom*(2.2-fi*0.06)*glow*2.8; }} float layerDist=length(p); float cosmic=sin(p.x*5.2+layerDist*8.5+t*12.5+flow1*5.5)*cos(p.y*4.8+layerDist*9.2+t*11.2+flow2*4.8)*exp(-layerDist*0.3)*1.2; col*=(0.2+cosmic); float spectrum1=sin(p.x*18.0+layerDist*6.5+t*8.5+rainbow1*3.5+flow1*4.2)*cos(p.y*16.8+layerDist*7.2+t*7.8+rainbow2*3.2)*0.45; float spectrum2=cos(p.x*20.5+layerDist*5.8+t*9.2+rainbow3*2.9+flow2*3.8)*sin(p.y*19.2+layerDist*6.8+t*8.5+rainbow1*2.5)*0.42; col+=vec3(spectrum1*2.8+spectrum2*2.2,spectrum1*2.5+spectrum2*2.6,spectrum1*3.1+spectrum2*2.0)*exp(-layerDist*0.35); col=pow(col*0.15,vec3(1.1)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);

window.gl033w = () => glsl('vec2 p=(_st-vec2(-0.12,-0.08))*4.5; float t=time*0.048; vec3 col=vec3(0.0); vec2 z=p+vec2(sin(t*4.2+p.x*2.8)*2.2,cos(t*4.8+p.y*3.1)*2.0); float pulse1=sin(t*3.5+p.x*2.2)*cos(t*3.8+p.y*2.5)*1.5; float pulse2=cos(t*4.1+p.x*1.9)*sin(t*3.6+p.y*2.1)*1.4; float pulse3=sin(t*3.9+p.x*2.6+p.y*1.8)*cos(t*4.4+p.x*1.7)*1.6; float pulse4=cos(t*4.5+p.y*2.9)*sin(t*4.0+p.x*2.3)*1.3; float living1=sin(t*2.8+p.x*1.5)*1.2; float living2=cos(t*3.2+p.y*1.8)*1.1; float rainbow1=sin(t*2.8+p.x*4.5+pulse1*3.5)*1.6+2.1; float rainbow2=cos(t*3.4+p.y*5.2+pulse2*4.1)*1.7+2.0; float rainbow3=sin(t*4.1+p.x*3.9+p.y*4.8+pulse3*3.8)*1.5+2.2; for(int j=0;j<5;j++){float fj=float(j)*1.4; vec2 layer=z*pow(0.65,fj); for(int i=0;i<20;i++){float fi=float(i)*0.20+fj*0.14; vec2 breath=vec2(sin(layer.x*1.5+t*3.2+fi+pulse1*2.2),cos(layer.y*1.2+t*2.9+fi+pulse2*1.9))*0.5; layer+=breath; float tentacle1=abs(sin(layer.x*2.8+layer.y*2.2+t*3.5+fi+pulse1*2.8)*0.9+layer.y*2.2)-0.12; float tentacle2=abs(cos(layer.x*2.5+layer.y*2.6+t*3.2+fi+pulse2*2.5)*0.85+layer.x*2.0)-0.11; float tentacle3=abs(sin(layer.x*3.1+layer.y*1.9+t*3.8+fi+pulse3*3.1)*0.92+layer.y*1.8)-0.13; float vein1=abs(layer.y*2.1+sin(layer.x*1.8+t*3.1+fi+pulse1*2.1+living1*2.5)*0.75)-0.095; float vein2=abs(layer.x*2.4+cos(layer.y*2.0+t*2.8+fi+pulse2*2.3+living2*2.8)*0.68)-0.088; float vein3=abs((layer.x+layer.y)*1.9+sin(t*2.6+fi+pulse1*2.7+living1*2.2)*0.72)-0.102; float artery1=abs(sin(layer.x*4.2+t*2.5+fi+pulse2*3.5+living2*3.1)*1.1+layer.y*1.5)-0.065; float artery2=abs(cos(layer.y*3.9+t*2.3+fi+pulse3*3.2+living1*2.9)*1.05+layer.x*1.3)-0.062; float artery3=abs(sin((layer.x+layer.y)*2.8+t*2.4+fi+pulse1*3.8+living2*3.4)*0.98+layer.y*1.1)-0.068; float nerve1=abs(layer.y*1.6+sin(layer.x*2.9+t*2.1+fi+pulse2*2.9+living1*1.8)*0.58)-0.072; float nerve2=abs(layer.x*1.8+cos(layer.y*2.7+t*1.9+fi+pulse3*2.6+living2*2.1)*0.55)-0.075; float nerve3=abs((layer.x*layer.y)*1.2+sin(layer.x*3.2+layer.y*2.8+t*2.0+fi+pulse1*3.1+living1*2.4)*0.61)-0.069; float capillary1=abs(layer.y*0.9+sin(layer.x*5.2+t*1.8+fi+pulse1*4.2+living2*3.8)*0.42)-0.045; float capillary2=abs(layer.x*1.1+cos(layer.y*4.8+t*1.6+fi+pulse2*3.9+living1*3.5)*0.45)-0.048; float capillary3=abs(layer.y*0.8-layer.x*0.7+sin(layer.x*5.5+layer.y*4.9+t*1.5+fi+pulse3*4.5+living2*4.1)*0.38)-0.042; float dendrite1=abs(sin(layer.x*6.8+t*1.4+fi+pulse3*5.2+living1*4.5)*0.65+layer.y*0.6)-0.035; float dendrite2=abs(cos(layer.y*6.2+t*1.2+fi+pulse1*4.8+living2*4.2)*0.62+layer.x*0.5)-0.038; float dendrite3=abs(sin((layer.x-layer.y)*3.5+t*1.3+fi+pulse2*5.5+living1*4.8)*0.58+layer.y*0.7)-0.032; float synapse1=abs(layer.y*0.5+sin(layer.x*8.5+t*1.1+fi+pulse1*6.2+living2*5.5)*0.28)-0.025; float synapse2=abs(layer.x*0.6+cos(layer.y*7.9+t*1.0+fi+pulse2*5.8+living1*5.2)*0.31)-0.028; float synapse3=abs(layer.y*0.4-layer.x*0.3+sin(layer.x*9.2+layer.y*8.1+t*0.9+fi+pulse3*6.5+living2*5.9)*0.25)-0.022; float organism=min(min(min(min(tentacle1,tentacle2),tentacle3),min(min(vein1,vein2),vein3)),min(min(min(artery1,artery2),artery3),min(min(min(nerve1,nerve2),nerve3),min(min(min(capillary1,capillary2),capillary3),min(min(min(dendrite1,dendrite2),dendrite3),min(min(synapse1,synapse2),synapse3)))))); organism+=sin(layer.x*4.5+layer.y*4.2+t*6.5+fi+pulse1*3.8)*0.1; float bloom=exp(-abs(organism)*3.5)*3.2; float glow=exp(-abs(organism)*1.5)*4.8; vec2 circulation=vec2(sin(layer.x*4.8+t*3.8+fi+pulse2*3.1+living1*2.9),cos(layer.y*4.5+t*3.5+fi+pulse3*2.8+living2*3.2))*bloom*0.22; layer+=circulation; float bio1=sin(layer.x*5.5+layer.y*5.2+t*4.2+fi+pulse1*4.8+living1*3.5)*bloom; float bio2=cos(layer.x*5.8+layer.y*4.9+t*3.9+fi*1.6+pulse2*5.1+living2*4.1)*bloom; float bio3=sin(layer.x*4.9+layer.y*5.6+t*4.5+fi*1.3+pulse3*4.5+living1*3.8)*bloom; float bio4=cos(layer.x*6.2+layer.y*5.1+t*4.1+fi*1.8+pulse1*5.5+living2*4.5)*bloom; vec3 pigment1=vec3(sin(bio1*4.5+fi+rainbow1+pulse1*2.5+living1*1.8),sin(bio1*4.5+fi+rainbow1+2.8+pulse2*2.2+living2*2.1),sin(bio1*4.5+fi+rainbow1+5.5+pulse3*2.8+living1*2.5))*1.8+0.15; vec3 pigment2=vec3(cos(bio2*4.2+fi+rainbow2+1.5+pulse2*2.8+living2*2.2),cos(bio2*4.2+fi+rainbow2+4.2+pulse3*2.5+living1*2.6),cos(bio2*4.2+fi+rainbow2+7.5+pulse1*3.1+living2*2.9))*1.9+0.12; vec3 pigment3=vec3(sin(bio3*4.8+fi*2.2+rainbow3+2.2+pulse3*2.3+living1*2.0),sin(bio3*4.8+fi*2.2+rainbow3+5.1+pulse1*2.9+living2*2.4),sin(bio3*4.8+fi*2.2+rainbow3+8.2+pulse2*2.6+living1*2.8))*1.6+0.18; vec3 pigment4=vec3(cos(bio4*5.2+fi*1.9+rainbow1+3.1+pulse1*3.2+living2*2.7),cos(bio4*5.2+fi*1.9+rainbow2+6.8+pulse2*3.5+living1*3.1),cos(bio4*5.2+fi*1.9+rainbow3+9.5+pulse3*3.8+living2*3.4))*2.1+0.08; vec3 bloodflow=mix(mix(pigment1,pigment2,sin(t*3.8+fi+pulse1*3.5+living1*2.8)*0.5+0.5),mix(pigment3,pigment4,cos(t*4.2+fi+pulse2*4.1+living2*3.2)*0.5+0.5),sin(t*3.5+pulse3*2.9+living1*2.5)*0.5+0.5); col+=bloodflow*bloom*(3.5-fi*0.08)*glow*3.8; }} float heartbeat=sin(t*6.5)*cos(t*7.2)*0.4+1.0; float layerDist=length(p)*heartbeat; float cosmic=sin(p.x*6.8+layerDist*11.5+t*18.5+pulse1*7.5)*cos(p.y*6.2+layerDist*12.2+t*16.2+pulse2*6.8)*exp(-layerDist*0.45)*0.8; col*=(0.12+cosmic); float spectrum1=sin(p.x*22.0+layerDist*8.5+t*12.5+rainbow1*4.5+pulse1*5.2)*cos(p.y*20.8+layerDist*9.2+t*11.8+rainbow2*4.2)*0.35; float spectrum2=cos(p.x*25.5+layerDist*7.8+t*13.2+rainbow3*3.9+pulse2*4.8)*sin(p.y*23.2+layerDist*8.8+t*12.5+rainbow1*3.5)*0.32; col+=vec3(spectrum1*2.2+spectrum2*1.8,spectrum1*2.0+spectrum2*2.4,spectrum1*2.6+spectrum2*1.6)*exp(-layerDist*0.5); col=pow(col*0.08,vec3(1.2)); vec4(col*vec3(i0,i1,i2),1.0)', 2.8, 1.8, 1.6);
